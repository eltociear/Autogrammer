on:
  workflow_call:
    inputs:
      package:
        required: true
        description: "Path to package"
        type: string

env:
  FORCE_COLOR: "1"

jobs:
  unit-test:
    name: 'Unit Test ${{ matrix.pyversion }}'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        include:
          # https://github.com/actions/python-versions/blob/main/versions-manifest.json
          # - pyversion: "3.12"
          - pyversion: "3.11"
            enable_coverage: true
          - pyversion: "3.10"
            more_hypothesis_examples_if_cron: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.pyversion }}
          cache: pip
          cache-dependency-path: ${{ inputs.package }}/${{ format('python{0}', matrix.pyversion) }}/test.txt

      - run: python3 -m venv .venv/dev && source .venv/dev/bin/activate
        working-directory: ${{ inputs.package }}

      - run: python -m pip install -U pip setuptools wheel 
        working-directory: ${{ inputs.package }}

      - name: Install dev dependencies
        run: pip install -r dev-deps/${{ format('python{0}', matrix.pyversion) }}/test.txt
        working-directory: ${{ inputs.package }}

      - name: Install dependencies
        run: pip install .
        working-directory: ${{ inputs.package }}

      - run: pytest .
        working-directory: ${{ inputs.package }}
        shell: bash

      - name: Upload coverage to Codecov  # https://github.com/codecov/codecov-action
        uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d
        if: matrix.enable_coverage
        with:
          verbose: true
          files: ${{ inputs.package }}/coverage.xml
          fail_ci_if_error: false  # https://github.com/codecov/codecov-action/issues/557
