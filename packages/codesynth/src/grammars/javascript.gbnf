program ::= statement_list

statement_list ::= statement [ ";" statement ]*

statement ::= variable_declaration | assignment | if_statement | while_loop | function_declaration | return_statement | expression_statement

variable_declaration ::= "let" identifier "=" expression

assignment ::= identifier "=" expression

if_statement ::= "if" "(" expression ")" "{" statement_list "}" [ "else" "{" statement_list "}" ]

while_loop ::= "while" "(" expression ")" "{" statement_list "}"

function_declaration ::= "function" identifier "(" [ parameter_list ] ")" "{" statement_list "}"

parameter_list ::= identifier [ "," identifier ]*

return_statement ::= "return" expression

expression_statement ::= expression

expression ::= arithmetic_expression | boolean_expression | string_expression | function_call

arithmetic_expression ::= term [ ( "+" | "-" | "*" | "/" ) term ]*

term ::= factor [ ( "+" | "-" ) factor ]*

factor ::= literal | identifier | "(" expression ")"

boolean_expression ::= "true" | "false" | expression ( "==" | "!=" | "<" | ">" | "<=" | ">=" ) expression

string_expression ::= "'" [^']* "'"

function_call ::= identifier "(" [ argument_list ] ")"

argument_list ::= expression [ "," expression ]*

literal ::= number_literal | string_literal

number_literal ::= [ "-" ] digit [ digit ]*

string_literal ::= "'" [^']* "'"

identifier ::= letter [ letter | digit | "_" ]*

letter ::= "a" | "b" | ... | "z" | "A" | "B" | ... | "Z"

digit ::= "0" | "1" | ... | "9"
