/**
     * SQL code snippets taken from the codeparrent/github-code dataset on Hugging Face.
     * 
     * Each snippet should have identifying information as to its provenance.
     */

const tests = [

  // {"repo_name": "itsdavidbaxter/Tools", "path": "functions/cinefiles/concat_worktitles.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select into englcount count(*)\nfrom works_common wc\ninner join hierarchy hwc on (\n    wc.id = hwc.parentid\n    and hwc.primarytype = 'workTermGroup'\n    and hwc.pos > 0)\ninner join worktermgroup wtg on (\n    hwc.id = wtg.id\n    and wtg.termlanguage like '%''English''%')\nwhere wc.shortidentifier = $1",
  // {"repo_name": "SpaceCurve/spatial-framework-for-hadoop", "path": "hive/test/st-geom-multi-call.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select ST_Length(ST_Linestring(1,1, 1,2, 2,2, 2,1)), \nST_Length(ST_Linestring(1,1, 1,4, 4,4, 4,1)),\nST_Length(ST_Linestring(1,1, 1,7, 7,7, 7,1)) from onerow",
  // {"repo_name": "SpaceCurve/spatial-framework-for-hadoop", "path": "hive/test/st-geom-multi-call.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select ST_Area(ST_Polygon(1,1, 1,2, 2,2, 2,1)),\nST_Area(ST_Polygon(1,1, 1,4, 4,4, 4,1)) from onerow",
  // {"repo_name": "SpaceCurve/spatial-framework-for-hadoop", "path": "hive/test/st-geom-multi-call.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select ST_Contains(ST_Polygon(1, 1, 1, 4, 4, 4, 4, 1), ST_Point(2, 3)),\nST_Contains(ST_Polygon(1, 1, 1, 4, 4, 4, 4, 1), ST_Point(8, 8)) from onerow",
  // {"repo_name": "SpaceCurve/spatial-framework-for-hadoop", "path": "hive/test/st-geom-multi-call.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select ST_CoordDim(ST_Point(0., 3.)),\nST_CoordDim(ST_PointZ(0., 3., 1)) from onerow",
  // {"repo_name": "SpaceCurve/spatial-framework-for-hadoop", "path": "hive/test/st-geom-multi-call.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select ST_Crosses(st_linestring(2,0, 2,3), ST_Polygon(1,1, 1,4, 4,4, 4,1)),\nST_Crosses(st_linestring(8,7, 7,8), ST_Polygon(1,1, 1,4, 4,4, 4,1)) from onerow",
  // {"repo_name": "SpaceCurve/spatial-framework-for-hadoop", "path": "hive/test/st-geom-multi-call.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select ST_Dimension(ST_Point(0,0)),\nST_Dimension(ST_LineString(1.5,2.5, 3.0,2.2)) from onerow",
  // {"repo_name": "SpaceCurve/spatial-framework-for-hadoop", "path": "hive/test/st-geom-multi-call.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select ST_Disjoint(st_point(1,1), ST_Point(1,1)),\nST_Disjoint(st_point(2,0), ST_Point(1,1)) from onerow",
  // {"repo_name": "SpaceCurve/spatial-framework-for-hadoop", "path": "hive/test/st-geom-multi-call.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select ST_EnvIntersects(st_point(1,1), ST_Point(1,1)),\nST_EnvIntersects(st_point(2,0), ST_Point(1,1)) from onerow",
  // {"repo_name": "SpaceCurve/spatial-framework-for-hadoop", "path": "hive/test/st-geom-multi-call.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select ST_Equals(st_point(1,1), ST_Point(1,1)),\nST_Equals(st_point(2,0), ST_Point(1,1)) from onerow",
  // {"repo_name": "SpaceCurve/spatial-framework-for-hadoop", "path": "hive/test/st-geom-multi-call.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select ST_Intersects(st_point(1,1), ST_Point(1,1)),\nST_Intersects(st_point(2,0), ST_Point(1,1)) from onerow",
  // {"repo_name": "SpaceCurve/spatial-framework-for-hadoop", "path": "hive/test/st-geom-multi-call.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select ST_Is3D(ST_Point(0., 3.)),\nST_Is3D(ST_PointZ(0., 3., 1)) from onerow",
  // {"repo_name": "SpaceCurve/spatial-framework-for-hadoop", "path": "hive/test/st-geom-multi-call.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select ST_Overlaps(st_polygon(2,0, 2,3, 3,0), ST_Polygon(1,1, 1,4, 4,4, 4,1)),\nST_Overlaps(st_polygon(2,0, 2,1, 3,1), ST_Polygon(1,1, 1,4, 4,4, 4,1)) from onerow",
  // {"repo_name": "SpaceCurve/spatial-framework-for-hadoop", "path": "hive/test/st-geom-multi-call.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select ST_Touches(ST_Point(1, 3), ST_Polygon(1, 1, 1, 4, 4, 4, 4, 1)),\nST_Touches(ST_Point(8, 8), ST_Polygon(1, 1, 1, 4, 4, 4, 4, 1)) from onerow",
  // {"repo_name": "SpaceCurve/spatial-framework-for-hadoop", "path": "hive/test/st-geom-multi-call.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select ST_Within(ST_Point(2, 3), ST_Polygon(1, 1, 1, 4, 4, 4, 4, 1)),\nST_Within(ST_Point(8, 8), ST_Polygon(1, 1, 1, 4, 4, 4, 4, 1)) from onerow",
  // {"repo_name": "support-project/knowledge", "path": "src/main/resources/org/support/project/web/dao/sql/UserAliasDao/UserAliasDao_select_on_key.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM USER_ALIAS\n WHERE \nAUTH_KEY = ?\n AND USER_ID = ?\n AND DELETE_FLAG = 0",
  // {"repo_name": "fishtown-analytics/dbt", "path": "test/integration/013_context_var_tests/second_dependency_v1/models/inner/second_dep_model.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select\n    '{{ var(\"from_root_to_second\") }}' as from_root,\n    '{{ var(\"from_second_to_second\") }}' as from_second",
  // {"repo_name": "mayankon24/d-final", "path": "Source/Apps/Microsoft/Released/Microsoft-SCCM2/Service/Resources/Scripts/ClientHealth_count_clients_installed_version.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT \nT1.Client_Version0 as VersionNumber,\nCASE\nWHEN T1.Client_Version0 = '5.00.7711.0000' THEN 'ConfigMgr 2012 RTM'\nWHEN T1.Client_Version0 = '5.00.7711.0200' THEN 'ConfigMgr 2012 RTM CU1'\nWHEN T1.Client_Version0 = '5.00.7711.0301' THEN 'ConfigMgr 2012 RTM CU2'\nWHEN T1.Client_Version0 = '5.00.7804.1000' THEN 'ConfigMgr 2012 SP1'\nWHEN T1.Client_Version0 = '5.00.7804.1202' THEN 'ConfigMgr 2012 SP1 CU1'\nWHEN T1.Client_Version0 = '5.00.7804.1300' THEN 'ConfigMgr 2012 SP1 CU2'\nWHEN T1.Client_Version0 = '5.00.7804.1400' THEN 'ConfigMgr 2012 SP1 CU3'\nWHEN T1.Client_Version0 = '5.00.7804.1500' THEN 'ConfigMgr 2012 SP1 CU4'\nWHEN T1.Client_Version0 = '5.00.7804.1600' THEN 'ConfigMgr 2012 SP1 CU5'\nWHEN T1.Client_Version0 = '5.00.7958.1000' THEN 'ConfigMgr 2012 R2'\nWHEN T1.Client_Version0 = '5.00.7958.1101' THEN 'ConfigMgr 2012 R2 with KB290500'\nWHEN T1.Client_Version0 = '5.00.7958.1203' THEN 'ConfigMgr 2012 R2 CU1'\nWHEN T1.Client_Version0 = '5.00.7958.1303' THEN 'ConfigMgr 2012 R2 CU2'\nWHEN T1.Client_Version0 = '5.00.7958.1401' THEN 'ConfigMgr 2012 R2 CU3'\nWHEN T1.Client_Version0 = '5.00.7958.1501' THEN 'ConfigMgr 2012 R2 CU4'\nWHEN T1.Client_Version0 = '5.00.7958.1601' THEN 'ConfigMgr 2012 R2 CU5'\nWHEN T1.Client_Version0 = '5.00.8239.1000' THEN 'ConfigMgr 2012 R2 SP1'\nWHEN T1.Client_Version0 = '5.00.8239.1203' THEN 'ConfigMgr 2012 R2 SP1 CU1'\nWHEN T1.Client_Version0 = '5.00.8239.1301' THEN 'ConfigMgr 2012 R2 SP1 CU2'\nWHEN T1.Client_Version0 = '5.00.8239.1403' THEN 'ConfigMgr 2012 R2 SP1 CU3'\nWHEN T1.Client_Version0 = '5.00.8325.1000' THEN 'ConfigMgr Update 1511'\nWHEN T1.Client_Version0 = '5.00.8355.1000' THEN 'ConfigMgr Update 1602'\nWHEN T1.Client_Version0 = '5.00.8355.1306' THEN 'ConfigMgr Update 1602 UR1'\nWHEN T1.Client_Version0 = '5.00.8412.1007' THEN 'ConfigMgr Update 1606'\nWHEN T1.Client_Version0 = '5.00.8412.1307' THEN 'ConfigMgr Update 1606 UR1'\nELSE T1.Client_Version0 END as 'Description',\nCOUNT(T1.ResourceID) as 'Total',\nT1.ResourceID MachineId\nFROM v_R_System_Valid  T1\nGROUP BY T1.Client_Version0, T1.ResourceID\nORDER BY Total DESC",
  // {"repo_name": "Chibin/gpdb", "path": "gpMgmt/test/behave/mgmt_utils/steps/data/gptransfer_verify/filespace_tablespace_verify.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM tbl1_ts",
  // {"repo_name": "Chibin/gpdb", "path": "gpMgmt/test/behave/mgmt_utils/steps/data/gptransfer_verify/filespace_tablespace_verify.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM tbl2_ts",
  // {"repo_name": "Chibin/gpdb", "path": "gpMgmt/test/behave/mgmt_utils/steps/data/gptransfer_verify/filespace_tablespace_verify.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select spcname from pg_tablespace where spcname='ts'",
  // {"repo_name": "50wu/gpdb", "path": "src/test/regress/sql/uao_compaction/eof_truncate.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT COUNT(*) FROM uao_eof_truncate",
  // {"repo_name": "stanislaviv/Databases-Basics---MS-SQL-Server---2017", "path": "7_Subqueries_and_Joins/7_Subqueries_Joins/7_Exercise/6.EmployeesHiredAfter.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT   e.FirstName,\n\t\t e.LastName,\n\t\t e.HireDate,\n\t\t d.Name AS [DeptName]\n\n\tFROM Employees AS e\nJOIN\t Departments AS d ON d.DepartmentID = e.DepartmentID\nWHERE\t e.HireDate > '01/01/1999' AND d.Name IN ('Sales','Finance')\nORDER BY e.HireDate",
  // {"repo_name": "owainkenwayucl/stats-plus-plus", "path": "sql/jobs-period.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select job_number,start_time,end_time,cost from %DB%.accounting_view where \n\t(end_time > start_time AND end_period = \"%PERIOD%\")",
  // {"repo_name": "lintzc/gpdb", "path": "src/test/tinc/tincrepo/dml/functional/sql_partition/mpp21090_dropcol_addcol_splitpt_dml_date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM mpp21090_dropcol_addcol_splitpt_dml_date ORDER BY 1,2,3,4",
  // {"repo_name": "lintzc/gpdb", "path": "src/test/tinc/tincrepo/dml/functional/sql_partition/mpp21090_dropcol_addcol_splitpt_dml_date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM mpp21090_dropcol_addcol_splitpt_dml_date ORDER BY 1,2,3",
  // {"repo_name": "alanfgates/hive", "path": "hplsql/src/test/queries/offline/select.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM a where 1=1 and not exists (select * from b)--abc",
  // {"repo_name": "alanfgates/hive", "path": "hplsql/src/test/queries/offline/select.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * \n FROM a \n where not exists \n  (\n    select * from b\n  )",
  // {"repo_name": "alanfgates/hive", "path": "hplsql/src/test/queries/offline/select.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT \n         *\n         FROM\n         tab\n         WHERE FILE_DATE > (\n                           SELECT \n                           MAX(FILE_DATE) AS MX_C_FILE_DT\n                           FROM tab\n                           WHERE FLAG = 'C' \n                           AND IND = 'C'\n                           AND FILE_DATE < \n                                          ( SELECT \n                                            CAST( LOAD_START AS DATE) \n                                            FROM \n                                            tab  \n                                            WHERE\n                \t\t\t\t              SOURCE_ID = 451 AND\n                \t\t\t\t              BATCH = 'R'\n                \t\t                   )\n\t\t                  )",
  // {"repo_name": "alanfgates/hive", "path": "hplsql/src/test/queries/offline/select.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT \n*\nFROM\n DLTA_POC\n  LEFT OUTER JOIN TEST3_DB.TET ORG\n   ON DLTA_POC.YS_NO = ORG.EM_CODE_A\n   AND DLTA_POC.AREA_NO = ORG.AREA_CODE_2\n   AND DLTA_POC.GNT_POC = ORG.GEN_CD\n\n  LEFT OUTER JOIN TEST.LOCATION LOC\n   ON DLTA_POC.SE_KEY_POC = LOC.LOC_ID\n   AND LOC.LOCATION_END_DT = DATE '9999-12-31'",
  // {"repo_name": "alanfgates/hive", "path": "hplsql/src/test/queries/offline/select.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT *\n  FROM a\n  WHERE NOT (1 = 2)",
  // {"repo_name": "electroly/sqlnotebook", "path": "src/Tests/scripts/IMPORT CSV FILE_ENCODING.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM table1",
  // {"repo_name": "electroly/sqlnotebook", "path": "src/Tests/scripts/IMPORT CSV FILE_ENCODING.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM table2",
  // {"repo_name": "electroly/sqlnotebook", "path": "src/Tests/scripts/IMPORT CSV FILE_ENCODING.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM table3",
  // {"repo_name": "electroly/sqlnotebook", "path": "src/Tests/scripts/IMPORT CSV FILE_ENCODING.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM table4",
  // {"repo_name": "electroly/sqlnotebook", "path": "src/Tests/scripts/IMPORT CSV FILE_ENCODING.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM table5",
  // {"repo_name": "electroly/sqlnotebook", "path": "src/Tests/scripts/IMPORT CSV FILE_ENCODING.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM table6",
  // {"repo_name": "electroly/sqlnotebook", "path": "src/Tests/scripts/IMPORT CSV FILE_ENCODING.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM table7",
  // {"repo_name": "electroly/sqlnotebook", "path": "src/Tests/scripts/IMPORT CSV FILE_ENCODING.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM table8",
  // {"repo_name": "electroly/sqlnotebook", "path": "src/Tests/scripts/IMPORT CSV FILE_ENCODING.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM table9",
  // {"repo_name": "electroly/sqlnotebook", "path": "src/Tests/scripts/IMPORT CSV FILE_ENCODING.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM table10",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t[PermissionId] as [ListKey],\n\t\t[Title] AS [ListLabel]\t\t\t\n\tFROM\t[Auth].[Permission]\n\tWHERE\t(@Title IS NULL OR [Title] LIKE '%' + @Title + '%')\n\tORDER BY [ListLabel] ASC\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[Permission_Search]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[Permission_Search]\n\nGO--\n\nCREATE PROCEDURE [Auth].[Permission_Search] \n\t\t\t@PermissionName varchar(100) = NULL,\n\t\t\t@Title varchar(150) = NULL\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[PermissionId],\n\t\t\t[PermissionName],\n\t\t\t[Title],\n\t\t\t[IsRead]\n\tFROM\t[Auth].[Permission]\n\tWHERE\t(@PermissionName IS NULL OR [PermissionName] LIKE '%' + @PermissionName + '%')\n\t\t\tAND (@Title IS NULL OR [Title] LIKE '%' + @Title + '%')\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[Permission_SelectAll]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[Permission_SelectAll]\n\nGO--\n\nCREATE PROCEDURE [Auth].[Permission_SelectAll]\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[PermissionId],\n\t\t\t[PermissionName],\n\t\t\t[Title],\n\t\t\t[IsRead]\n\tFROM\t[Auth].[Permission]\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[Permission_SelectBy_PermissionId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[Permission_SelectBy_PermissionId]\n\nGO--\n\nCREATE PROCEDURE [Auth].[Permission_SelectBy_PermissionId] \n\t\t\t@PermissionId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[PermissionId],\n\t\t\t[PermissionName],\n\t\t\t[Title],\n\t\t\t[IsRead]\n\tFROM\t[Auth].[Permission]\n\tWHERE\t[PermissionId] = @PermissionId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[Permission_SelectBy_UserId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[Permission_SelectBy_UserId]\n\nGO--\n\nCREATE PROCEDURE [Auth].[Permission_SelectBy_UserId] \n\t\t\t@UserId int\nAS \nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[PermissionId],\n\t\t\t[PermissionName],\n\t\t\t[Title],\n\t\t\t[IsRead]\n\tFROM\t[Auth].[Permission]\n\tWHERE\t\n\t[PermissionId] IN -- Anonymous / All users permissions\n\t(\tSELECT\t[PermissionId]\n\t\tFROM\t[Auth].[RolePermission] RP\n\t\tINNER JOIN\n\t\t\t\t[Auth].[Role] R\n\t\t\t\tON RP.[RoleId] = R.[RoleId]\n\t\tWHERE\n\t\t\t(R.[ApplyToAnon] = 1 OR (R.[ApplyToAllUsers] = 1 AND @UserId > 0))\n\t\t\tAND R.[IsActive] = 1\n\t) OR [PermissionId] IN -- Specifically assigned permissions\n\t(\tSELECT\t[PermissionId]\n\t\tFROM\t[Auth].[RolePermission] RP\n\t\tINNER JOIN\n\t\t\t\t[Auth].[Role] R\n\t\t\t\tON RP.[RoleId] = R.[RoleId]\n\t\tINNER JOIN \n\t\t\t\t[Auth].[UserRole] UR\n\t\t\t\tON R.[RoleId] = UR.[RoleId]\n\t\tWHERE\n\t\t\tUR.[UserId] = @UserId\n\t\t\tAND R.[IsActive] = 1\n\t)\n\t\t\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[Permission_Update]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[Permission_Update]\n\nGO--\n\nCREATE PROCEDURE [Auth].[Permission_Update] \n\t\t\t@PermissionId int,\n\t\t\t@PermissionName varchar(100),\n\t\t\t@Title varchar(150),\n\t\t\t@IsRead bit\nAS --Generated--\nBEGIN\n\n\tUPDATE\t[Auth].[Permission] SET \n\t\t\t[PermissionName] = @PermissionName,\n\t\t\t[Title] = @Title,\n\t\t\t[IsRead] = @IsRead\n\tWHERE\t[PermissionId] = @PermissionId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[Role_Delete]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[Role_Delete]\n\nGO--\n\nCREATE PROCEDURE [Auth].[Role_Delete] \n\t\t\t@RoleId int\nAS --Generated--\nBEGIN\n\n\tDELETE FROM\t[Auth].[Role]\n\tWHERE\t[RoleId] = @RoleId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[Role_Exists]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[Role_Exists]\n\nGO--\n\nCREATE PROCEDURE [Auth].[Role_Exists]\n\t\t\t@RoleId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t[RoleId] as [ListKey],\n\t\t[Title] AS [ListLabel]\t\t\t\n\tFROM\t[Auth].[Role]\n\tWHERE\t(@Title IS NULL OR [Title] LIKE '%' + @Title + '%')\n\tORDER BY [ListLabel] ASC\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[Role_Search]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[Role_Search]\n\nGO--\n\nCREATE PROCEDURE [Auth].[Role_Search] \n\t\t\t@Title varchar(50) = NULL,\n\t\t\t@Description varchar(max) = NULL,\n\t\t\t@WINSID varchar(50) = NULL\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[RoleId],\n\t\t\t[Title],\n\t\t\t[Description],\n\t\t\t[IsActive],\n\t\t\t[ApplyToAnon],\n\t\t\t[ApplyToAllUsers],\n\t\t\t[PreventAddingUsers],\n\t\t\t[WINSID]\n\tFROM\t[Auth].[Role]\n\tWHERE\t(@Title IS NULL OR [Title] LIKE '%' + @Title + '%')\n\t\t\tAND (@Description IS NULL OR [Description] LIKE '%' + @Description + '%')\n\t\t\tAND (@WINSID IS NULL OR [WINSID] LIKE '%' + @WINSID + '%')\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[Role_SelectAll]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[Role_SelectAll]\n\nGO--\n\nCREATE PROCEDURE [Auth].[Role_SelectAll]\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[RoleId],\n\t\t\t[Title],\n\t\t\t[Description],\n\t\t\t[IsActive],\n\t\t\t[ApplyToAnon],\n\t\t\t[ApplyToAllUsers],\n\t\t\t[PreventAddingUsers],\n\t\t\t[WINSID]\n\tFROM\t[Auth].[Role]\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[Role_SelectBy_RoleId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[Role_SelectBy_RoleId]\n\nGO--\n\nCREATE PROCEDURE [Auth].[Role_SelectBy_RoleId] \n\t\t\t@RoleId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[RoleId],\n\t\t\t[Title],\n\t\t\t[Description],\n\t\t\t[IsActive],\n\t\t\t[ApplyToAnon],\n\t\t\t[ApplyToAllUsers],\n\t\t\t[PreventAddingUsers],\n\t\t\t[WINSID]\n\tFROM\t[Auth].[Role]\n\tWHERE\t[RoleId] = @RoleId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[Role_Update]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[Role_Update]\n\nGO--\n\nCREATE PROCEDURE [Auth].[Role_Update] \n\t\t\t@RoleId int,\n\t\t\t@Title varchar(50),\n\t\t\t@Description varchar(max),\n\t\t\t@IsActive bit,\n\t\t\t@ApplyToAnon bit,\n\t\t\t@ApplyToAllUsers bit,\n\t\t\t@PreventAddingUsers bit,\n\t\t\t@WINSID varchar(50) = NULL\nAS --Generated--\nBEGIN\n\n\tUPDATE\t[Auth].[Role] SET \n\t\t\t[Title] = @Title,\n\t\t\t[Description] = @Description,\n\t\t\t[IsActive] = @IsActive,\n\t\t\t[ApplyToAnon] = @ApplyToAnon,\n\t\t\t[ApplyToAllUsers] = @ApplyToAllUsers,\n\t\t\t[PreventAddingUsers] = @PreventAddingUsers,\n\t\t\t[WINSID] = @WINSID\n\tWHERE\t[RoleId] = @RoleId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[RolePermission_Delete]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[RolePermission_Delete]\n\nGO--\n\nCREATE PROCEDURE [Auth].[RolePermission_Delete] \n\t\t\t@RolePermissionId int\nAS --Generated--\nBEGIN\n\n\tDELETE FROM\t[Auth].[RolePermission]\n\tWHERE\t[RolePermissionId] = @RolePermissionId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[RolePermission_Exists]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[RolePermission_Exists]\n\nGO--\n\nCREATE PROCEDURE [Auth].[RolePermission_Exists]\n\t\t\t@RolePermissionId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[RolePermissionId],\n\t\t\t[RoleId],\n\t\t\t[PermissionId]\n\tFROM\t[Auth].[RolePermission]\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[RolePermission_SelectBy_PermissionId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[RolePermission_SelectBy_PermissionId]\n\nGO--\n\nCREATE PROCEDURE [Auth].[RolePermission_SelectBy_PermissionId] \n\t\t\t@PermissionId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[RolePermissionId],\n\t\t\t[RoleId],\n\t\t\t[PermissionId]\n\tFROM\t[Auth].[RolePermission]\n\tWHERE\t[PermissionId] = @PermissionId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[RolePermission_SelectBy_RoleId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[RolePermission_SelectBy_RoleId]\n\nGO--\n\nCREATE PROCEDURE [Auth].[RolePermission_SelectBy_RoleId] \n\t\t\t@RoleId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[RolePermissionId],\n\t\t\t[RoleId],\n\t\t\t[PermissionId]\n\tFROM\t[Auth].[RolePermission]\n\tWHERE\t[RoleId] = @RoleId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[RolePermission_SelectBy_RolePermissionId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[RolePermission_SelectBy_RolePermissionId]\n\nGO--\n\nCREATE PROCEDURE [Auth].[RolePermission_SelectBy_RolePermissionId] \n\t\t\t@RolePermissionId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[RolePermissionId],\n\t\t\t[RoleId],\n\t\t\t[PermissionId]\n\tFROM\t[Auth].[RolePermission]\n\tWHERE\t[RolePermissionId] = @RolePermissionId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[RolePermission_Update]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[RolePermission_Update]\n\nGO--\n\nCREATE PROCEDURE [Auth].[RolePermission_Update] \n\t\t\t@RolePermissionId int,\n\t\t\t@RoleId int,\n\t\t\t@PermissionId int\nAS --Generated--\nBEGIN\n\n\tUPDATE\t[Auth].[RolePermission] SET \n\t\t\t[RoleId] = @RoleId,\n\t\t\t[PermissionId] = @PermissionId\n\tWHERE\t[RolePermissionId] = @RolePermissionId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[TableVersion_Delete]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[TableVersion_Delete]\n\nGO--\n\nCREATE PROCEDURE [Auth].[TableVersion_Delete] \n\t\t\t@TableId int\nAS --Generated--\nBEGIN\n\n\tDELETE FROM\t[Auth].[TableVersion]\n\tWHERE\t[TableId] = @TableId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[TableVersion_Exists]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[TableVersion_Exists]\n\nGO--\n\nCREATE PROCEDURE [Auth].[TableVersion_Exists]\n\t\t\t@TableId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[TableId],\n\t\t\t[TableName],\n\t\t\t[Version]\n\tFROM\t[Auth].[TableVersion]\n\tWHERE\t(@TableName IS NULL OR [TableName] LIKE '%' + @TableName + '%')\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[TableVersion_SelectAll]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[TableVersion_SelectAll]\n\nGO--\n\nCREATE PROCEDURE [Auth].[TableVersion_SelectAll]\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[TableId],\n\t\t\t[TableName],\n\t\t\t[Version]\n\tFROM\t[Auth].[TableVersion]\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[TableVersion_SelectBy_TableId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[TableVersion_SelectBy_TableId]\n\nGO--\n\nCREATE PROCEDURE [Auth].[TableVersion_SelectBy_TableId] \n\t\t\t@TableId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[TableId],\n\t\t\t[TableName],\n\t\t\t[Version]\n\tFROM\t[Auth].[TableVersion]\n\tWHERE\t[TableId] = @TableId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[TableVersion_Update]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[TableVersion_Update]\n\nGO--\n\nCREATE PROCEDURE [Auth].[TableVersion_Update] \n\t\t\t@TableId int,\n\t\t\t@TableName varchar(150),\n\t\t\t@Version int\nAS --Generated--\nBEGIN\n\n\tUPDATE\t[Auth].[TableVersion] SET \n\t\t\t[TableName] = @TableName,\n\t\t\t[Version] = @Version\n\tWHERE\t[TableId] = @TableId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[User_Delete]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[User_Delete]\n\nGO--\n\nCREATE PROCEDURE [Auth].[User_Delete] \n\t\t\t@UserId int\nAS --Generated--\nBEGIN\n\n\tDELETE FROM\t[Auth].[User]\n\tWHERE\t[UserId] = @UserId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[User_Exists]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[User_Exists]\n\nGO--\n\nCREATE PROCEDURE [Auth].[User_Exists]\n\t\t\t@UserId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t[UserId] as [ListKey],\n\t\t[UserName] AS [ListLabel]\t\t\t\n\tFROM\t[Auth].[User]\n\tWHERE\t(@UserName IS NULL OR [UserName] LIKE '%' + @UserName + '%')\n\tORDER BY [ListLabel] ASC\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[User_Search]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[User_Search]\n\nGO--\n\nCREATE PROCEDURE [Auth].[User_Search] \n\t\t\t@UserName varchar(50) = NULL,\n\t\t\t@DisplayName varchar(50) = NULL,\n\t\t\t@Email varchar(100) = NULL,\n\t\t\t@WINSID varchar(50) = NULL\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[UserId],\n\t\t\t[UserName],\n\t\t\t[Password],\n\t\t\t[DisplayName],\n\t\t\t[Email],\n\t\t\t[AuthToken],\n\t\t\t[UserToken],\n\t\t\t[FailedLogins],\n\t\t\t[IsActive],\n\t\t\t[WINSID]\n\tFROM\t[Auth].[User]\n\tWHERE\t(@UserName IS NULL OR [UserName] LIKE '%' + @UserName + '%')\n\t\t\tAND (@DisplayName IS NULL OR [DisplayName] LIKE '%' + @DisplayName + '%')\n\t\t\tAND (@Email IS NULL OR [Email] LIKE '%' + @Email + '%')\n\t\t\tAND (@WINSID IS NULL OR [WINSID] LIKE '%' + @WINSID + '%')\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[User_SelectAll]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[User_SelectAll]\n\nGO--\n\nCREATE PROCEDURE [Auth].[User_SelectAll]\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[UserId],\n\t\t\t[UserName],\n\t\t\t[Password],\n\t\t\t[DisplayName],\n\t\t\t[Email],\n\t\t\t[AuthToken],\n\t\t\t[UserToken],\n\t\t\t[FailedLogins],\n\t\t\t[IsActive],\n\t\t\t[WINSID]\n\tFROM\t[Auth].[User]\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[User_SelectBy_Email]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[User_SelectBy_Email]\n\nGO--\n\nCREATE PROCEDURE [Auth].[User_SelectBy_Email] \n\t\t\t@Email varchar(100)\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[UserId],\n\t\t\t[UserName],\n\t\t\t[Password],\n\t\t\t[DisplayName],\n\t\t\t[Email],\n\t\t\t[AuthToken],\n\t\t\t[UserToken],\n\t\t\t[FailedLogins],\n\t\t\t[IsActive],\n\t\t\t[WINSID]\n\tFROM\t[Auth].[User]\n\tWHERE\t[Email] = @Email\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[User_SelectBy_UserId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[User_SelectBy_UserId]\n\nGO--\n\nCREATE PROCEDURE [Auth].[User_SelectBy_UserId] \n\t\t\t@UserId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[UserId],\n\t\t\t[UserName],\n\t\t\t[Password],\n\t\t\t[DisplayName],\n\t\t\t[Email],\n\t\t\t[AuthToken],\n\t\t\t[UserToken],\n\t\t\t[FailedLogins],\n\t\t\t[IsActive],\n\t\t\t[WINSID]\n\tFROM\t[Auth].[User]\n\tWHERE\t[UserId] = @UserId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[User_SelectBy_UserName]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[User_SelectBy_UserName]\n\nGO--\n\nCREATE PROCEDURE [Auth].[User_SelectBy_UserName] \n\t\t\t@UserName varchar(50)\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[UserId],\n\t\t\t[UserName],\n\t\t\t[Password],\n\t\t\t[DisplayName],\n\t\t\t[Email],\n\t\t\t[AuthToken],\n\t\t\t[UserToken],\n\t\t\t[FailedLogins],\n\t\t\t[IsActive],\n\t\t\t[WINSID]\n\tFROM\t[Auth].[User]\n\tWHERE\t[UserName] = @UserName\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[User_SelectBy_UserToken]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[User_SelectBy_UserToken]\n\nGO--\n\nCREATE PROCEDURE [Auth].[User_SelectBy_UserToken] \n\t\t\t@UserToken uniqueidentifier\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[UserId],\n\t\t\t[UserName],\n\t\t\t[Password],\n\t\t\t[DisplayName],\n\t\t\t[Email],\n\t\t\t[AuthToken],\n\t\t\t[UserToken],\n\t\t\t[FailedLogins],\n\t\t\t[IsActive],\n\t\t\t[WINSID]\n\tFROM\t[Auth].[User]\n\tWHERE\t[UserToken] = @UserToken\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[User_SelectBy_WINSID]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[User_SelectBy_WINSID]\n\nGO--\n\nCREATE PROCEDURE [Auth].[User_SelectBy_WINSID] \n\t\t\t@WINSID varchar(50)\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[UserId],\n\t\t\t[UserName],\n\t\t\t[Password],\n\t\t\t[DisplayName],\n\t\t\t[Email],\n\t\t\t[AuthToken],\n\t\t\t[UserToken],\n\t\t\t[FailedLogins],\n\t\t\t[IsActive],\n\t\t\t[WINSID]\n\tFROM\t[Auth].[User]\n\tWHERE\t[WINSID] = @WINSID\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[User_Update]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[User_Update]\n\nGO--\n\nCREATE PROCEDURE [Auth].[User_Update] \n\t\t\t@UserId int,\n\t\t\t@UserName varchar(50),\n\t\t\t@Password binary(16),\n\t\t\t@DisplayName varchar(50),\n\t\t\t@Email varchar(100),\n\t\t\t@AuthToken uniqueidentifier,\n\t\t\t@UserToken uniqueidentifier,\n\t\t\t@FailedLogins int,\n\t\t\t@IsActive bit,\n\t\t\t@WINSID varchar(50) = NULL\nAS --Generated--\nBEGIN\n\n\tUPDATE\t[Auth].[User] SET \n\t\t\t[UserName] = @UserName,\n\t\t\t[Password] = @Password,\n\t\t\t[DisplayName] = @DisplayName,\n\t\t\t[Email] = @Email,\n\t\t\t[AuthToken] = @AuthToken,\n\t\t\t[UserToken] = @UserToken,\n\t\t\t[FailedLogins] = @FailedLogins,\n\t\t\t[IsActive] = @IsActive,\n\t\t\t[WINSID] = @WINSID\n\tWHERE\t[UserId] = @UserId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[UserRole_Delete]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[UserRole_Delete]\n\nGO--\n\nCREATE PROCEDURE [Auth].[UserRole_Delete] \n\t\t\t@UserRoleId int\nAS --Generated--\nBEGIN\n\n\tDELETE FROM\t[Auth].[UserRole]\n\tWHERE\t[UserRoleId] = @UserRoleId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[UserRole_Exists]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[UserRole_Exists]\n\nGO--\n\nCREATE PROCEDURE [Auth].[UserRole_Exists]\n\t\t\t@UserRoleId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[UserRoleId],\n\t\t\t[UserId],\n\t\t\t[RoleId]\n\tFROM\t[Auth].[UserRole]\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[UserRole_SelectBy_RoleId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[UserRole_SelectBy_RoleId]\n\nGO--\n\nCREATE PROCEDURE [Auth].[UserRole_SelectBy_RoleId] \n\t\t\t@RoleId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[UserRoleId],\n\t\t\t[UserId],\n\t\t\t[RoleId]\n\tFROM\t[Auth].[UserRole]\n\tWHERE\t[RoleId] = @RoleId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[UserRole_SelectBy_UserId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[UserRole_SelectBy_UserId]\n\nGO--\n\nCREATE PROCEDURE [Auth].[UserRole_SelectBy_UserId] \n\t\t\t@UserId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[UserRoleId],\n\t\t\t[UserId],\n\t\t\t[RoleId]\n\tFROM\t[Auth].[UserRole]\n\tWHERE\t[UserId] = @UserId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[UserRole_SelectBy_UserRoleId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[UserRole_SelectBy_UserRoleId]\n\nGO--\n\nCREATE PROCEDURE [Auth].[UserRole_SelectBy_UserRoleId] \n\t\t\t@UserRoleId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[UserRoleId],\n\t\t\t[UserId],\n\t\t\t[RoleId]\n\tFROM\t[Auth].[UserRole]\n\tWHERE\t[UserRoleId] = @UserRoleId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[UserRole_Update]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[UserRole_Update]\n\nGO--\n\nCREATE PROCEDURE [Auth].[UserRole_Update] \n\t\t\t@UserRoleId int,\n\t\t\t@UserId int,\n\t\t\t@RoleId int\nAS --Generated--\nBEGIN\n\n\tUPDATE\t[Auth].[UserRole] SET \n\t\t\t[UserId] = @UserId,\n\t\t\t[RoleId] = @RoleId\n\tWHERE\t[UserRoleId] = @UserRoleId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Client].[Candidates_Exists]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Client].[Candidates_Exists]\n\nGO--\n\nCREATE PROCEDURE [Client].[Candidates_Exists]\n\t\t\t@CandidateId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[CandidateId],\n\t\t\t[ContentInspectionId],\n\t\t\t[CandidateName],\n\t\t\t[OrganizationId],\n\t\t\t[IsArchived],\n\t\t\t[IsBeingProposed],\n\t\t\t[ProposedByUserId],\n\t\t\t[ConfirmedByUserId],\n\t\t\t[FalseInfoCount],\n\t\t\t[TrueInfoCount],\n\t\t\t[AdminInpsected],\n\t\t\t[DateLastChecked],\n\t\t\t[SourceUrl]\n\tFROM\t[Client].[Candidates]\n\tWHERE\t(@CandidateName IS NULL OR [CandidateName] LIKE '%' + @CandidateName + '%')\n\t\t\tAND (@SourceUrl IS NULL OR [SourceUrl] LIKE '%' + @SourceUrl + '%')\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Client].[Candidates_SelectAll]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Client].[Candidates_SelectAll]\n\nGO--\n\nCREATE PROCEDURE [Client].[Candidates_SelectAll]\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[CandidateId],\n\t\t\t[ContentInspectionId],\n\t\t\t[CandidateName],\n\t\t\t[OrganizationId],\n\t\t\t[IsArchived],\n\t\t\t[IsBeingProposed],\n\t\t\t[ProposedByUserId],\n\t\t\t[ConfirmedByUserId],\n\t\t\t[FalseInfoCount],\n\t\t\t[TrueInfoCount],\n\t\t\t[AdminInpsected],\n\t\t\t[DateLastChecked],\n\t\t\t[SourceUrl]\n\tFROM\t[Client].[Candidates]\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Client].[Candidates_SelectBy_CandidateId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Client].[Candidates_SelectBy_CandidateId]\n\nGO--\n\nCREATE PROCEDURE [Client].[Candidates_SelectBy_CandidateId] \n\t\t\t@CandidateId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[CandidateId],\n\t\t\t[ContentInspectionId],\n\t\t\t[CandidateName],\n\t\t\t[OrganizationId],\n\t\t\t[IsArchived],\n\t\t\t[IsBeingProposed],\n\t\t\t[ProposedByUserId],\n\t\t\t[ConfirmedByUserId],\n\t\t\t[FalseInfoCount],\n\t\t\t[TrueInfoCount],\n\t\t\t[AdminInpsected],\n\t\t\t[DateLastChecked],\n\t\t\t[SourceUrl]\n\tFROM\t[Client].[Candidates]\n\tWHERE\t[CandidateId] = @CandidateId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Client].[Candidates_SelectBy_ConfirmedByUserId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Client].[Candidates_SelectBy_ConfirmedByUserId]\n\nGO--\n\nCREATE PROCEDURE [Client].[Candidates_SelectBy_ConfirmedByUserId] \n\t\t\t@ConfirmedByUserId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[CandidateId],\n\t\t\t[ContentInspectionId],\n\t\t\t[CandidateName],\n\t\t\t[OrganizationId],\n\t\t\t[IsArchived],\n\t\t\t[IsBeingProposed],\n\t\t\t[ProposedByUserId],\n\t\t\t[ConfirmedByUserId],\n\t\t\t[FalseInfoCount],\n\t\t\t[TrueInfoCount],\n\t\t\t[AdminInpsected],\n\t\t\t[DateLastChecked],\n\t\t\t[SourceUrl]\n\tFROM\t[Client].[Candidates]\n\tWHERE\t[ConfirmedByUserId] = @ConfirmedByUserId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Client].[Candidates_SelectBy_ContentInspectionId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Client].[Candidates_SelectBy_ContentInspectionId]\n\nGO--\n\nCREATE PROCEDURE [Client].[Candidates_SelectBy_ContentInspectionId] \n\t\t\t@ContentInspectionId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[CandidateId],\n\t\t\t[ContentInspectionId],\n\t\t\t[CandidateName],\n\t\t\t[OrganizationId],\n\t\t\t[IsArchived],\n\t\t\t[IsBeingProposed],\n\t\t\t[ProposedByUserId],\n\t\t\t[ConfirmedByUserId],\n\t\t\t[FalseInfoCount],\n\t\t\t[TrueInfoCount],\n\t\t\t[AdminInpsected],\n\t\t\t[DateLastChecked],\n\t\t\t[SourceUrl]\n\tFROM\t[Client].[Candidates]\n\tWHERE\t[ContentInspectionId] = @ContentInspectionId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Client].[Candidates_SelectBy_OrganizationId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Client].[Candidates_SelectBy_OrganizationId]\n\nGO--\n\nCREATE PROCEDURE [Client].[Candidates_SelectBy_OrganizationId] \n\t\t\t@OrganizationId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[CandidateId],\n\t\t\t[ContentInspectionId],\n\t\t\t[CandidateName],\n\t\t\t[OrganizationId],\n\t\t\t[IsArchived],\n\t\t\t[IsBeingProposed],\n\t\t\t[ProposedByUserId],\n\t\t\t[ConfirmedByUserId],\n\t\t\t[FalseInfoCount],\n\t\t\t[TrueInfoCount],\n\t\t\t[AdminInpsected],\n\t\t\t[DateLastChecked],\n\t\t\t[SourceUrl]\n\tFROM\t[Client].[Candidates]\n\tWHERE\t[OrganizationId] = @OrganizationId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Client].[Candidates_SelectBy_ProposedByUserId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Client].[Candidates_SelectBy_ProposedByUserId]\n\nGO--\n\nCREATE PROCEDURE [Client].[Candidates_SelectBy_ProposedByUserId] \n\t\t\t@ProposedByUserId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[CandidateId],\n\t\t\t[ContentInspectionId],\n\t\t\t[CandidateName],\n\t\t\t[OrganizationId],\n\t\t\t[IsArchived],\n\t\t\t[IsBeingProposed],\n\t\t\t[ProposedByUserId],\n\t\t\t[ConfirmedByUserId],\n\t\t\t[FalseInfoCount],\n\t\t\t[TrueInfoCount],\n\t\t\t[AdminInpsected],\n\t\t\t[DateLastChecked],\n\t\t\t[SourceUrl]\n\tFROM\t[Client].[Candidates]\n\tWHERE\t[ProposedByUserId] = @ProposedByUserId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Client].[Locations_Search]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Client].[Locations_Search]\n\nGO--\n\nCREATE PROCEDURE [Client].[Locations_Search] \n\t\t\t@LocationName varchar(150) = NULL,\n\t\t\t@SourceUrl varchar(250) = NULL\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[LocationId],\n\t\t\t[ContentInspectionId],\n\t\t\t[LocationName],\n\t\t\t[IsArchived],\n\t\t\t[IsBeingProposed],\n\t\t\t[ProposedByUserId],\n\t\t\t[ConfirmedByUserId],\n\t\t\t[FalseInfoCount],\n\t\t\t[TrueInfoCount],\n\t\t\t[AdminInpsected],\n\t\t\t[DateLastChecked],\n\t\t\t[SourceUrl]\n\tFROM\t[Client].[Locations]\n\tWHERE\t(@LocationName IS NULL OR [LocationName] LIKE '%' + @LocationName + '%')\n\t\t\tAND (@SourceUrl IS NULL OR [SourceUrl] LIKE '%' + @SourceUrl + '%')\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Client].[Locations_SelectAll]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Client].[Locations_SelectAll]\n\nGO--\n\nCREATE PROCEDURE [Client].[Locations_SelectAll]\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[LocationId],\n\t\t\t[ContentInspectionId],\n\t\t\t[LocationName],\n\t\t\t[IsArchived],\n\t\t\t[IsBeingProposed],\n\t\t\t[ProposedByUserId],\n\t\t\t[ConfirmedByUserId],\n\t\t\t[FalseInfoCount],\n\t\t\t[TrueInfoCount],\n\t\t\t[AdminInpsected],\n\t\t\t[DateLastChecked],\n\t\t\t[SourceUrl]\n\tFROM\t[Client].[Locations]\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Client].[Locations_SelectBy_ConfirmedByUserId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Client].[Locations_SelectBy_ConfirmedByUserId]\n\nGO--\n\nCREATE PROCEDURE [Client].[Locations_SelectBy_ConfirmedByUserId] \n\t\t\t@ConfirmedByUserId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[LocationId],\n\t\t\t[ContentInspectionId],\n\t\t\t[LocationName],\n\t\t\t[IsArchived],\n\t\t\t[IsBeingProposed],\n\t\t\t[ProposedByUserId],\n\t\t\t[ConfirmedByUserId],\n\t\t\t[FalseInfoCount],\n\t\t\t[TrueInfoCount],\n\t\t\t[AdminInpsected],\n\t\t\t[DateLastChecked],\n\t\t\t[SourceUrl]\n\tFROM\t[Client].[Locations]\n\tWHERE\t[ConfirmedByUserId] = @ConfirmedByUserId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Client].[Locations_SelectBy_ContentInspectionId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Client].[Locations_SelectBy_ContentInspectionId]\n\nGO--\n\nCREATE PROCEDURE [Client].[Locations_SelectBy_ContentInspectionId] \n\t\t\t@ContentInspectionId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[LocationId],\n\t\t\t[ContentInspectionId],\n\t\t\t[LocationName],\n\t\t\t[IsArchived],\n\t\t\t[IsBeingProposed],\n\t\t\t[ProposedByUserId],\n\t\t\t[ConfirmedByUserId],\n\t\t\t[FalseInfoCount],\n\t\t\t[TrueInfoCount],\n\t\t\t[AdminInpsected],\n\t\t\t[DateLastChecked],\n\t\t\t[SourceUrl]\n\tFROM\t[Client].[Locations]\n\tWHERE\t[ContentInspectionId] = @ContentInspectionId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Client].[Locations_SelectBy_LocationId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Client].[Locations_SelectBy_LocationId]\n\nGO--\n\nCREATE PROCEDURE [Client].[Locations_SelectBy_LocationId] \n\t\t\t@LocationId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[LocationId],\n\t\t\t[ContentInspectionId],\n\t\t\t[LocationName],\n\t\t\t[IsArchived],\n\t\t\t[IsBeingProposed],\n\t\t\t[ProposedByUserId],\n\t\t\t[ConfirmedByUserId],\n\t\t\t[FalseInfoCount],\n\t\t\t[TrueInfoCount],\n\t\t\t[AdminInpsected],\n\t\t\t[DateLastChecked],\n\t\t\t[SourceUrl]\n\tFROM\t[Client].[Locations]\n\tWHERE\t[LocationId] = @LocationId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Client].[Locations_SelectBy_ProposedByUserId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Client].[Locations_SelectBy_ProposedByUserId]\n\nGO--\n\nCREATE PROCEDURE [Client].[Locations_SelectBy_ProposedByUserId] \n\t\t\t@ProposedByUserId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[LocationId],\n\t\t\t[ContentInspectionId],\n\t\t\t[LocationName],\n\t\t\t[IsArchived],\n\t\t\t[IsBeingProposed],\n\t\t\t[ProposedByUserId],\n\t\t\t[ConfirmedByUserId],\n\t\t\t[FalseInfoCount],\n\t\t\t[TrueInfoCount],\n\t\t\t[AdminInpsected],\n\t\t\t[DateLastChecked],\n\t\t\t[SourceUrl]\n\tFROM\t[Client].[Locations]\n\tWHERE\t[ProposedByUserId] = @ProposedByUserId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Client].[Organizations_Exists]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Client].[Organizations_Exists]\n\nGO--\n\nCREATE PROCEDURE [Client].[Organizations_Exists]\n\t\t\t@OrganizationId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[OrganizationId],\n\t\t\t[ContentInspectionId],\n\t\t\t[OrganizationName],\n\t\t\t[IsArchived],\n\t\t\t[IsBeingProposed],\n\t\t\t[ProposedByUserId],\n\t\t\t[ConfirmedByUserId],\n\t\t\t[FalseInfoCount],\n\t\t\t[TrueInfoCount],\n\t\t\t[AdminInpsected],\n\t\t\t[DateLastChecked],\n\t\t\t[SourceUrl]\n\tFROM\t[Client].[Organizations]\n\tWHERE\t(@OrganizationName IS NULL OR [OrganizationName] LIKE '%' + @OrganizationName + '%')\n\t\t\tAND (@SourceUrl IS NULL OR [SourceUrl] LIKE '%' + @SourceUrl + '%')\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Client].[Organizations_SelectAll]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Client].[Organizations_SelectAll]\n\nGO--\n\nCREATE PROCEDURE [Client].[Organizations_SelectAll]\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[OrganizationId],\n\t\t\t[ContentInspectionId],\n\t\t\t[OrganizationName],\n\t\t\t[IsArchived],\n\t\t\t[IsBeingProposed],\n\t\t\t[ProposedByUserId],\n\t\t\t[ConfirmedByUserId],\n\t\t\t[FalseInfoCount],\n\t\t\t[TrueInfoCount],\n\t\t\t[AdminInpsected],\n\t\t\t[DateLastChecked],\n\t\t\t[SourceUrl]\n\tFROM\t[Client].[Organizations]\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Client].[Organizations_SelectBy_ConfirmedByUserId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Client].[Organizations_SelectBy_ConfirmedByUserId]\n\nGO--\n\nCREATE PROCEDURE [Client].[Organizations_SelectBy_ConfirmedByUserId] \n\t\t\t@ConfirmedByUserId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[OrganizationId],\n\t\t\t[ContentInspectionId],\n\t\t\t[OrganizationName],\n\t\t\t[IsArchived],\n\t\t\t[IsBeingProposed],\n\t\t\t[ProposedByUserId],\n\t\t\t[ConfirmedByUserId],\n\t\t\t[FalseInfoCount],\n\t\t\t[TrueInfoCount],\n\t\t\t[AdminInpsected],\n\t\t\t[DateLastChecked],\n\t\t\t[SourceUrl]\n\tFROM\t[Client].[Organizations]\n\tWHERE\t[ConfirmedByUserId] = @ConfirmedByUserId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Client].[Organizations_SelectBy_ContentInspectionId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Client].[Organizations_SelectBy_ContentInspectionId]\n\nGO--\n\nCREATE PROCEDURE [Client].[Organizations_SelectBy_ContentInspectionId] \n\t\t\t@ContentInspectionId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[OrganizationId],\n\t\t\t[ContentInspectionId],\n\t\t\t[OrganizationName],\n\t\t\t[IsArchived],\n\t\t\t[IsBeingProposed],\n\t\t\t[ProposedByUserId],\n\t\t\t[ConfirmedByUserId],\n\t\t\t[FalseInfoCount],\n\t\t\t[TrueInfoCount],\n\t\t\t[AdminInpsected],\n\t\t\t[DateLastChecked],\n\t\t\t[SourceUrl]\n\tFROM\t[Client].[Organizations]\n\tWHERE\t[ContentInspectionId] = @ContentInspectionId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Client].[Organizations_SelectBy_OrganizationId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Client].[Organizations_SelectBy_OrganizationId]\n\nGO--\n\nCREATE PROCEDURE [Client].[Organizations_SelectBy_OrganizationId] \n\t\t\t@OrganizationId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[OrganizationId],\n\t\t\t[ContentInspectionId],\n\t\t\t[OrganizationName],\n\t\t\t[IsArchived],\n\t\t\t[IsBeingProposed],\n\t\t\t[ProposedByUserId],\n\t\t\t[ConfirmedByUserId],\n\t\t\t[FalseInfoCount],\n\t\t\t[TrueInfoCount],\n\t\t\t[AdminInpsected],\n\t\t\t[DateLastChecked],\n\t\t\t[SourceUrl]\n\tFROM\t[Client].[Organizations]\n\tWHERE\t[OrganizationId] = @OrganizationId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Client].[Organizations_SelectBy_ProposedByUserId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Client].[Organizations_SelectBy_ProposedByUserId]\n\nGO--\n\nCREATE PROCEDURE [Client].[Organizations_SelectBy_ProposedByUserId] \n\t\t\t@ProposedByUserId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[OrganizationId],\n\t\t\t[ContentInspectionId],\n\t\t\t[OrganizationName],\n\t\t\t[IsArchived],\n\t\t\t[IsBeingProposed],\n\t\t\t[ProposedByUserId],\n\t\t\t[ConfirmedByUserId],\n\t\t\t[FalseInfoCount],\n\t\t\t[TrueInfoCount],\n\t\t\t[AdminInpsected],\n\t\t\t[DateLastChecked],\n\t\t\t[SourceUrl]\n\tFROM\t[Client].[Organizations]\n\tWHERE\t[ProposedByUserId] = @ProposedByUserId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Client].[TableVersion_Delete]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Client].[TableVersion_Delete]\n\nGO--\n\nCREATE PROCEDURE [Client].[TableVersion_Delete] \n\t\t\t@TableId int\nAS --Generated--\nBEGIN\n\n\tDELETE FROM\t[Client].[TableVersion]\n\tWHERE\t[TableId] = @TableId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Client].[TableVersion_Exists]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Client].[TableVersion_Exists]\n\nGO--\n\nCREATE PROCEDURE [Client].[TableVersion_Exists]\n\t\t\t@TableId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[TableId],\n\t\t\t[TableName],\n\t\t\t[Version]\n\tFROM\t[Client].[TableVersion]\n\tWHERE\t(@TableName IS NULL OR [TableName] LIKE '%' + @TableName + '%')\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Client].[TableVersion_SelectAll]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Client].[TableVersion_SelectAll]\n\nGO--\n\nCREATE PROCEDURE [Client].[TableVersion_SelectAll]\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[TableId],\n\t\t\t[TableName],\n\t\t\t[Version]\n\tFROM\t[Client].[TableVersion]\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Client].[TableVersion_SelectBy_TableId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Client].[TableVersion_SelectBy_TableId]\n\nGO--\n\nCREATE PROCEDURE [Client].[TableVersion_SelectBy_TableId] \n\t\t\t@TableId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[TableId],\n\t\t\t[TableName],\n\t\t\t[Version]\n\tFROM\t[Client].[TableVersion]\n\tWHERE\t[TableId] = @TableId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Client].[TableVersion_Update]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Client].[TableVersion_Update]\n\nGO--\n\nCREATE PROCEDURE [Client].[TableVersion_Update] \n\t\t\t@TableId int,\n\t\t\t@TableName varchar(150),\n\t\t\t@Version int\nAS --Generated--\nBEGIN\n\n\tUPDATE\t[Client].[TableVersion] SET \n\t\t\t[TableName] = @TableName,\n\t\t\t[Version] = @Version\n\tWHERE\t[TableId] = @TableId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Client].[Users_Exists]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Client].[Users_Exists]\n\nGO--\n\nCREATE PROCEDURE [Client].[Users_Exists]\n\t\t\t@UserId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[UserId],\n\t\t\t[DisplayName]\n\tFROM\t[Client].[Users]\n\tWHERE\t(@DisplayName IS NULL OR [DisplayName] LIKE '%' + @DisplayName + '%')\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Client].[Users_SelectAll]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Client].[Users_SelectAll]\n\nGO--\n\nCREATE PROCEDURE [Client].[Users_SelectAll]\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[UserId],\n\t\t\t[DisplayName]\n\tFROM\t[Client].[Users]\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Client].[Users_SelectByUser_Current]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Client].[Users_SelectByUser_Current]\n\nGO--\n\nCREATE PROCEDURE [Client].[Users_SelectByUser_Current]\n\t@AuthUserId int\nAS\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t*\n\tFROM\t[Client].[Users]\n\tWHERE\t[UserId] = @AuthUserId\n\nEND\nGO--\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Client].[Users_SelectByUser_UpdateProfile]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Client].[Users_SelectByUser_UpdateProfile]\n\nGO--\n\nCREATE PROCEDURE [Client].[Users_SelectByUser_UpdateProfile]\n\t@AuthUserId int,\n\t@DisplayName varchar(50),\n\t@Email varchar(100)\nAS\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t[CandidateId] as [ListKey],\n\t\t[CandidateName] AS [ListLabel]\t\t\t\n\tFROM\t[Data].[Candidate]\n\tWHERE\t(@CandidateName IS NULL OR [CandidateName] LIKE '%' + @CandidateName + '%')\n\tORDER BY [ListLabel] ASC\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Candidate_Search]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Candidate_Search]\n\nGO--\n\nCREATE PROCEDURE [Data].[Candidate_Search] \n\t\t\t@CandidateName varchar(150) = NULL\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[CandidateId],\n\t\t\t[UserId],\n\t\t\t[ContentInspectionId],\n\t\t\t[LocationId],\n\t\t\t[OrganizationId],\n\t\t\t[CandidateName]\n\tFROM\t[Data].[Candidate]\n\tWHERE\t(@CandidateName IS NULL OR [CandidateName] LIKE '%' + @CandidateName + '%')\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Candidate_SelectAll]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Candidate_SelectAll]\n\nGO--\n\nCREATE PROCEDURE [Data].[Candidate_SelectAll]\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[CandidateId],\n\t\t\t[UserId],\n\t\t\t[ContentInspectionId],\n\t\t\t[LocationId],\n\t\t\t[OrganizationId],\n\t\t\t[CandidateName]\n\tFROM\t[Data].[Candidate]\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Candidate_SelectBy_CandidateId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Candidate_SelectBy_CandidateId]\n\nGO--\n\nCREATE PROCEDURE [Data].[Candidate_SelectBy_CandidateId] \n\t\t\t@CandidateId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[CandidateId],\n\t\t\t[UserId],\n\t\t\t[ContentInspectionId],\n\t\t\t[LocationId],\n\t\t\t[OrganizationId],\n\t\t\t[CandidateName]\n\tFROM\t[Data].[Candidate]\n\tWHERE\t[CandidateId] = @CandidateId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Candidate_SelectBy_ContentInspectionId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Candidate_SelectBy_ContentInspectionId]\n\nGO--\n\nCREATE PROCEDURE [Data].[Candidate_SelectBy_ContentInspectionId] \n\t\t\t@ContentInspectionId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[CandidateId],\n\t\t\t[UserId],\n\t\t\t[ContentInspectionId],\n\t\t\t[LocationId],\n\t\t\t[OrganizationId],\n\t\t\t[CandidateName]\n\tFROM\t[Data].[Candidate]\n\tWHERE\t[ContentInspectionId] = @ContentInspectionId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Candidate_SelectBy_LocationId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Candidate_SelectBy_LocationId]\n\nGO--\n\nCREATE PROCEDURE [Data].[Candidate_SelectBy_LocationId] \n\t\t\t@LocationId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[CandidateId],\n\t\t\t[UserId],\n\t\t\t[ContentInspectionId],\n\t\t\t[LocationId],\n\t\t\t[OrganizationId],\n\t\t\t[CandidateName]\n\tFROM\t[Data].[Candidate]\n\tWHERE\t[LocationId] = @LocationId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Candidate_SelectBy_OrganizationId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Candidate_SelectBy_OrganizationId]\n\nGO--\n\nCREATE PROCEDURE [Data].[Candidate_SelectBy_OrganizationId] \n\t\t\t@OrganizationId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[CandidateId],\n\t\t\t[UserId],\n\t\t\t[ContentInspectionId],\n\t\t\t[LocationId],\n\t\t\t[OrganizationId],\n\t\t\t[CandidateName]\n\tFROM\t[Data].[Candidate]\n\tWHERE\t[OrganizationId] = @OrganizationId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Candidate_SelectBy_UserId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Candidate_SelectBy_UserId]\n\nGO--\n\nCREATE PROCEDURE [Data].[Candidate_SelectBy_UserId] \n\t\t\t@UserId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[CandidateId],\n\t\t\t[UserId],\n\t\t\t[ContentInspectionId],\n\t\t\t[LocationId],\n\t\t\t[OrganizationId],\n\t\t\t[CandidateName]\n\tFROM\t[Data].[Candidate]\n\tWHERE\t[UserId] = @UserId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Candidate_Update]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Candidate_Update]\n\nGO--\n\nCREATE PROCEDURE [Data].[Candidate_Update] \n\t\t\t@CandidateId int,\n\t\t\t@UserId int,\n\t\t\t@ContentInspectionId int,\n\t\t\t@LocationId int,\n\t\t\t@OrganizationId int,\n\t\t\t@CandidateName varchar(150)\nAS --Generated--\nBEGIN\n\n\tUPDATE\t[Data].[Candidate] SET \n\t\t\t[UserId] = @UserId,\n\t\t\t[ContentInspectionId] = @ContentInspectionId,\n\t\t\t[LocationId] = @LocationId,\n\t\t\t[OrganizationId] = @OrganizationId,\n\t\t\t[CandidateName] = @CandidateName\n\tWHERE\t[CandidateId] = @CandidateId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[CandidateMetaData_Delete]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[CandidateMetaData_Delete]\n\nGO--\n\nCREATE PROCEDURE [Data].[CandidateMetaData_Delete] \n\t\t\t@CandidateMetaDataId int\nAS --Generated--\nBEGIN\n\n\tDELETE FROM\t[Data].[CandidateMetaData]\n\tWHERE\t[CandidateMetaDataId] = @CandidateMetaDataId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[CandidateMetaData_Exists]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[CandidateMetaData_Exists]\n\nGO--\n\nCREATE PROCEDURE [Data].[CandidateMetaData_Exists]\n\t\t\t@CandidateMetaDataId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[CandidateMetaDataId],\n\t\t\t[ContentInspectionId],\n\t\t\t[CandidateId],\n\t\t\t[MetaDataId],\n\t\t\t[MetaDataValue]\n\tFROM\t[Data].[CandidateMetaData]\n\tWHERE\t(@MetaDataValue IS NULL OR [MetaDataValue] LIKE '%' + @MetaDataValue + '%')\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[CandidateMetaData_SelectAll]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[CandidateMetaData_SelectAll]\n\nGO--\n\nCREATE PROCEDURE [Data].[CandidateMetaData_SelectAll]\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[CandidateMetaDataId],\n\t\t\t[ContentInspectionId],\n\t\t\t[CandidateId],\n\t\t\t[MetaDataId],\n\t\t\t[MetaDataValue]\n\tFROM\t[Data].[CandidateMetaData]\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[CandidateMetaData_SelectBy_CandidateId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[CandidateMetaData_SelectBy_CandidateId]\n\nGO--\n\nCREATE PROCEDURE [Data].[CandidateMetaData_SelectBy_CandidateId] \n\t\t\t@CandidateId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[CandidateMetaDataId],\n\t\t\t[ContentInspectionId],\n\t\t\t[CandidateId],\n\t\t\t[MetaDataId],\n\t\t\t[MetaDataValue]\n\tFROM\t[Data].[CandidateMetaData]\n\tWHERE\t[CandidateId] = @CandidateId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[CandidateMetaData_SelectBy_CandidateMetaDataId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[CandidateMetaData_SelectBy_CandidateMetaDataId]\n\nGO--\n\nCREATE PROCEDURE [Data].[CandidateMetaData_SelectBy_CandidateMetaDataId] \n\t\t\t@CandidateMetaDataId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[CandidateMetaDataId],\n\t\t\t[ContentInspectionId],\n\t\t\t[CandidateId],\n\t\t\t[MetaDataId],\n\t\t\t[MetaDataValue]\n\tFROM\t[Data].[CandidateMetaData]\n\tWHERE\t[CandidateMetaDataId] = @CandidateMetaDataId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[CandidateMetaData_SelectBy_ContentInspectionId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[CandidateMetaData_SelectBy_ContentInspectionId]\n\nGO--\n\nCREATE PROCEDURE [Data].[CandidateMetaData_SelectBy_ContentInspectionId] \n\t\t\t@ContentInspectionId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[CandidateMetaDataId],\n\t\t\t[ContentInspectionId],\n\t\t\t[CandidateId],\n\t\t\t[MetaDataId],\n\t\t\t[MetaDataValue]\n\tFROM\t[Data].[CandidateMetaData]\n\tWHERE\t[ContentInspectionId] = @ContentInspectionId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[CandidateMetaData_SelectBy_MetaDataId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[CandidateMetaData_SelectBy_MetaDataId]\n\nGO--\n\nCREATE PROCEDURE [Data].[CandidateMetaData_SelectBy_MetaDataId] \n\t\t\t@MetaDataId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[CandidateMetaDataId],\n\t\t\t[ContentInspectionId],\n\t\t\t[CandidateId],\n\t\t\t[MetaDataId],\n\t\t\t[MetaDataValue]\n\tFROM\t[Data].[CandidateMetaData]\n\tWHERE\t[MetaDataId] = @MetaDataId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[CandidateMetaData_Update]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[CandidateMetaData_Update]\n\nGO--\n\nCREATE PROCEDURE [Data].[CandidateMetaData_Update] \n\t\t\t@CandidateMetaDataId int,\n\t\t\t@ContentInspectionId int,\n\t\t\t@CandidateId int,\n\t\t\t@MetaDataId int,\n\t\t\t@MetaDataValue varchar(max)\nAS --Generated--\nBEGIN\n\n\tUPDATE\t[Data].[CandidateMetaData] SET \n\t\t\t[ContentInspectionId] = @ContentInspectionId,\n\t\t\t[CandidateId] = @CandidateId,\n\t\t\t[MetaDataId] = @MetaDataId,\n\t\t\t[MetaDataValue] = @MetaDataValue\n\tWHERE\t[CandidateMetaDataId] = @CandidateMetaDataId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[ContentInspection_Delete]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[ContentInspection_Delete]\n\nGO--\n\nCREATE PROCEDURE [Data].[ContentInspection_Delete] \n\t\t\t@ContentInspectionId int\nAS --Generated--\nBEGIN\n\n\tDELETE FROM\t[Data].[ContentInspection]\n\tWHERE\t[ContentInspectionId] = @ContentInspectionId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[ContentInspection_Exists]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[ContentInspection_Exists]\n\nGO--\n\nCREATE PROCEDURE [Data].[ContentInspection_Exists]\n\t\t\t@ContentInspectionId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[ContentInspectionId],\n\t\t\t[IsArchived],\n\t\t\t[IsBeingProposed],\n\t\t\t[ProposedByUserId],\n\t\t\t[ConfirmedByUserId],\n\t\t\t[FalseInfoCount],\n\t\t\t[TrueInfoCount],\n\t\t\t[AdminInpsected],\n\t\t\t[DateLastChecked],\n\t\t\t[SourceUrl]\n\tFROM\t[Data].[ContentInspection]\n\tWHERE\t(@SourceUrl IS NULL OR [SourceUrl] LIKE '%' + @SourceUrl + '%')\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[ContentInspection_SelectAll]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[ContentInspection_SelectAll]\n\nGO--\n\nCREATE PROCEDURE [Data].[ContentInspection_SelectAll]\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[ContentInspectionId],\n\t\t\t[IsArchived],\n\t\t\t[IsBeingProposed],\n\t\t\t[ProposedByUserId],\n\t\t\t[ConfirmedByUserId],\n\t\t\t[FalseInfoCount],\n\t\t\t[TrueInfoCount],\n\t\t\t[AdminInpsected],\n\t\t\t[DateLastChecked],\n\t\t\t[SourceUrl]\n\tFROM\t[Data].[ContentInspection]\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[ContentInspection_SelectBy_ConfirmedByUserId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[ContentInspection_SelectBy_ConfirmedByUserId]\n\nGO--\n\nCREATE PROCEDURE [Data].[ContentInspection_SelectBy_ConfirmedByUserId] \n\t\t\t@ConfirmedByUserId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[ContentInspectionId],\n\t\t\t[IsArchived],\n\t\t\t[IsBeingProposed],\n\t\t\t[ProposedByUserId],\n\t\t\t[ConfirmedByUserId],\n\t\t\t[FalseInfoCount],\n\t\t\t[TrueInfoCount],\n\t\t\t[AdminInpsected],\n\t\t\t[DateLastChecked],\n\t\t\t[SourceUrl]\n\tFROM\t[Data].[ContentInspection]\n\tWHERE\t[ConfirmedByUserId] = @ConfirmedByUserId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[ContentInspection_SelectBy_ContentInspectionId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[ContentInspection_SelectBy_ContentInspectionId]\n\nGO--\n\nCREATE PROCEDURE [Data].[ContentInspection_SelectBy_ContentInspectionId] \n\t\t\t@ContentInspectionId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[ContentInspectionId],\n\t\t\t[IsArchived],\n\t\t\t[IsBeingProposed],\n\t\t\t[ProposedByUserId],\n\t\t\t[ConfirmedByUserId],\n\t\t\t[FalseInfoCount],\n\t\t\t[TrueInfoCount],\n\t\t\t[AdminInpsected],\n\t\t\t[DateLastChecked],\n\t\t\t[SourceUrl]\n\tFROM\t[Data].[ContentInspection]\n\tWHERE\t[ContentInspectionId] = @ContentInspectionId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[ContentInspection_SelectBy_ProposedByUserId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[ContentInspection_SelectBy_ProposedByUserId]\n\nGO--\n\nCREATE PROCEDURE [Data].[ContentInspection_SelectBy_ProposedByUserId] \n\t\t\t@ProposedByUserId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[ContentInspectionId],\n\t\t\t[IsArchived],\n\t\t\t[IsBeingProposed],\n\t\t\t[ProposedByUserId],\n\t\t\t[ConfirmedByUserId],\n\t\t\t[FalseInfoCount],\n\t\t\t[TrueInfoCount],\n\t\t\t[AdminInpsected],\n\t\t\t[DateLastChecked],\n\t\t\t[SourceUrl]\n\tFROM\t[Data].[ContentInspection]\n\tWHERE\t[ProposedByUserId] = @ProposedByUserId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[ContentInspection_Update]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[ContentInspection_Update]\n\nGO--\n\nCREATE PROCEDURE [Data].[ContentInspection_Update] \n\t\t\t@ContentInspectionId int,\n\t\t\t@IsArchived bit,\n\t\t\t@IsBeingProposed bit,\n\t\t\t@ProposedByUserId int,\n\t\t\t@ConfirmedByUserId int,\n\t\t\t@FalseInfoCount int,\n\t\t\t@TrueInfoCount int,\n\t\t\t@AdminInpsected bit,\n\t\t\t@DateLastChecked datetime,\n\t\t\t@SourceUrl varchar(250)\nAS --Generated--\nBEGIN\n\n\tUPDATE\t[Data].[ContentInspection] SET \n\t\t\t[IsArchived] = @IsArchived,\n\t\t\t[IsBeingProposed] = @IsBeingProposed,\n\t\t\t[ProposedByUserId] = @ProposedByUserId,\n\t\t\t[ConfirmedByUserId] = @ConfirmedByUserId,\n\t\t\t[FalseInfoCount] = @FalseInfoCount,\n\t\t\t[TrueInfoCount] = @TrueInfoCount,\n\t\t\t[AdminInpsected] = @AdminInpsected,\n\t\t\t[DateLastChecked] = @DateLastChecked,\n\t\t\t[SourceUrl] = @SourceUrl\n\tWHERE\t[ContentInspectionId] = @ContentInspectionId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Election_Delete]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Election_Delete]\n\nGO--\n\nCREATE PROCEDURE [Data].[Election_Delete] \n\t\t\t@ElectionId int\nAS --Generated--\nBEGIN\n\n\tDELETE FROM\t[Data].[Election]\n\tWHERE\t[ElectionId] = @ElectionId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Election_Exists]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Election_Exists]\n\nGO--\n\nCREATE PROCEDURE [Data].[Election_Exists]\n\t\t\t@ElectionId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[ElectionId],\n\t\t\t[ContentInspectionId],\n\t\t\t[ElectionLevelId],\n\t\t\t[LocationId],\n\t\t\t[VotingDate]\n\tFROM\t[Data].[Election]\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Election_SelectBy_ContentInspectionId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Election_SelectBy_ContentInspectionId]\n\nGO--\n\nCREATE PROCEDURE [Data].[Election_SelectBy_ContentInspectionId] \n\t\t\t@ContentInspectionId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[ElectionId],\n\t\t\t[ContentInspectionId],\n\t\t\t[ElectionLevelId],\n\t\t\t[LocationId],\n\t\t\t[VotingDate]\n\tFROM\t[Data].[Election]\n\tWHERE\t[ContentInspectionId] = @ContentInspectionId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Election_SelectBy_ElectionId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Election_SelectBy_ElectionId]\n\nGO--\n\nCREATE PROCEDURE [Data].[Election_SelectBy_ElectionId] \n\t\t\t@ElectionId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[ElectionId],\n\t\t\t[ContentInspectionId],\n\t\t\t[ElectionLevelId],\n\t\t\t[LocationId],\n\t\t\t[VotingDate]\n\tFROM\t[Data].[Election]\n\tWHERE\t[ElectionId] = @ElectionId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Election_SelectBy_ElectionLevelId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Election_SelectBy_ElectionLevelId]\n\nGO--\n\nCREATE PROCEDURE [Data].[Election_SelectBy_ElectionLevelId] \n\t\t\t@ElectionLevelId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[ElectionId],\n\t\t\t[ContentInspectionId],\n\t\t\t[ElectionLevelId],\n\t\t\t[LocationId],\n\t\t\t[VotingDate]\n\tFROM\t[Data].[Election]\n\tWHERE\t[ElectionLevelId] = @ElectionLevelId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Election_SelectBy_LocationId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Election_SelectBy_LocationId]\n\nGO--\n\nCREATE PROCEDURE [Data].[Election_SelectBy_LocationId] \n\t\t\t@LocationId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[ElectionId],\n\t\t\t[ContentInspectionId],\n\t\t\t[ElectionLevelId],\n\t\t\t[LocationId],\n\t\t\t[VotingDate]\n\tFROM\t[Data].[Election]\n\tWHERE\t[LocationId] = @LocationId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Election_Update]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Election_Update]\n\nGO--\n\nCREATE PROCEDURE [Data].[Election_Update] \n\t\t\t@ElectionId int,\n\t\t\t@ContentInspectionId int,\n\t\t\t@ElectionLevelId int,\n\t\t\t@LocationId int,\n\t\t\t@VotingDate datetime\nAS --Generated--\nBEGIN\n\n\tUPDATE\t[Data].[Election] SET \n\t\t\t[ContentInspectionId] = @ContentInspectionId,\n\t\t\t[ElectionLevelId] = @ElectionLevelId,\n\t\t\t[LocationId] = @LocationId,\n\t\t\t[VotingDate] = @VotingDate\n\tWHERE\t[ElectionId] = @ElectionId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[ElectionCandidate_Delete]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[ElectionCandidate_Delete]\n\nGO--\n\nCREATE PROCEDURE [Data].[ElectionCandidate_Delete] \n\t\t\t@ElectionCandidateId int\nAS --Generated--\nBEGIN\n\n\tDELETE FROM\t[Data].[ElectionCandidate]\n\tWHERE\t[ElectionCandidateId] = @ElectionCandidateId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[ElectionCandidate_Exists]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[ElectionCandidate_Exists]\n\nGO--\n\nCREATE PROCEDURE [Data].[ElectionCandidate_Exists]\n\t\t\t@ElectionCandidateId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[ElectionCandidateId],\n\t\t\t[ContentInspectionId],\n\t\t\t[CandidateId],\n\t\t\t[ElectionId],\n\t\t\t[IsWinner],\n\t\t\t[ReportedVoteCount]\n\tFROM\t[Data].[ElectionCandidate]\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[ElectionCandidate_SelectBy_CandidateId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[ElectionCandidate_SelectBy_CandidateId]\n\nGO--\n\nCREATE PROCEDURE [Data].[ElectionCandidate_SelectBy_CandidateId] \n\t\t\t@CandidateId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[ElectionCandidateId],\n\t\t\t[ContentInspectionId],\n\t\t\t[CandidateId],\n\t\t\t[ElectionId],\n\t\t\t[IsWinner],\n\t\t\t[ReportedVoteCount]\n\tFROM\t[Data].[ElectionCandidate]\n\tWHERE\t[CandidateId] = @CandidateId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[ElectionCandidate_SelectBy_ContentInspectionId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[ElectionCandidate_SelectBy_ContentInspectionId]\n\nGO--\n\nCREATE PROCEDURE [Data].[ElectionCandidate_SelectBy_ContentInspectionId] \n\t\t\t@ContentInspectionId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[ElectionCandidateId],\n\t\t\t[ContentInspectionId],\n\t\t\t[CandidateId],\n\t\t\t[ElectionId],\n\t\t\t[IsWinner],\n\t\t\t[ReportedVoteCount]\n\tFROM\t[Data].[ElectionCandidate]\n\tWHERE\t[ContentInspectionId] = @ContentInspectionId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[ElectionCandidate_SelectBy_ElectionCandidateId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[ElectionCandidate_SelectBy_ElectionCandidateId]\n\nGO--\n\nCREATE PROCEDURE [Data].[ElectionCandidate_SelectBy_ElectionCandidateId] \n\t\t\t@ElectionCandidateId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[ElectionCandidateId],\n\t\t\t[ContentInspectionId],\n\t\t\t[CandidateId],\n\t\t\t[ElectionId],\n\t\t\t[IsWinner],\n\t\t\t[ReportedVoteCount]\n\tFROM\t[Data].[ElectionCandidate]\n\tWHERE\t[ElectionCandidateId] = @ElectionCandidateId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[ElectionCandidate_SelectBy_ElectionId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[ElectionCandidate_SelectBy_ElectionId]\n\nGO--\n\nCREATE PROCEDURE [Data].[ElectionCandidate_SelectBy_ElectionId] \n\t\t\t@ElectionId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[ElectionCandidateId],\n\t\t\t[ContentInspectionId],\n\t\t\t[CandidateId],\n\t\t\t[ElectionId],\n\t\t\t[IsWinner],\n\t\t\t[ReportedVoteCount]\n\tFROM\t[Data].[ElectionCandidate]\n\tWHERE\t[ElectionId] = @ElectionId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[ElectionCandidate_Update]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[ElectionCandidate_Update]\n\nGO--\n\nCREATE PROCEDURE [Data].[ElectionCandidate_Update] \n\t\t\t@ElectionCandidateId int,\n\t\t\t@ContentInspectionId int,\n\t\t\t@CandidateId int,\n\t\t\t@ElectionId int,\n\t\t\t@IsWinner bit,\n\t\t\t@ReportedVoteCount bit\nAS --Generated--\nBEGIN\n\n\tUPDATE\t[Data].[ElectionCandidate] SET \n\t\t\t[ContentInspectionId] = @ContentInspectionId,\n\t\t\t[CandidateId] = @CandidateId,\n\t\t\t[ElectionId] = @ElectionId,\n\t\t\t[IsWinner] = @IsWinner,\n\t\t\t[ReportedVoteCount] = @ReportedVoteCount\n\tWHERE\t[ElectionCandidateId] = @ElectionCandidateId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[ElectionLevel_Delete]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[ElectionLevel_Delete]\n\nGO--\n\nCREATE PROCEDURE [Data].[ElectionLevel_Delete] \n\t\t\t@ElectionLevelId int\nAS --Generated--\nBEGIN\n\n\tDELETE FROM\t[Data].[ElectionLevel]\n\tWHERE\t[ElectionLevelId] = @ElectionLevelId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[ElectionLevel_Exists]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[ElectionLevel_Exists]\n\nGO--\n\nCREATE PROCEDURE [Data].[ElectionLevel_Exists]\n\t\t\t@ElectionLevelId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t[ElectionLevelId] as [ListKey],\n\t\t[ElectionLevelTitle] AS [ListLabel]\t\t\t\n\tFROM\t[Data].[ElectionLevel]\n\tWHERE\t(@ElectionLevelTitle IS NULL OR [ElectionLevelTitle] LIKE '%' + @ElectionLevelTitle + '%')\n\tORDER BY [ListLabel] ASC\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[ElectionLevel_Search]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[ElectionLevel_Search]\n\nGO--\n\nCREATE PROCEDURE [Data].[ElectionLevel_Search] \n\t\t\t@ElectionLevelTitle varchar(150) = NULL\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[ElectionLevelId],\n\t\t\t[ContentInspectionId],\n\t\t\t[ElectionLevelTitle]\n\tFROM\t[Data].[ElectionLevel]\n\tWHERE\t(@ElectionLevelTitle IS NULL OR [ElectionLevelTitle] LIKE '%' + @ElectionLevelTitle + '%')\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[ElectionLevel_SelectAll]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[ElectionLevel_SelectAll]\n\nGO--\n\nCREATE PROCEDURE [Data].[ElectionLevel_SelectAll]\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[ElectionLevelId],\n\t\t\t[ContentInspectionId],\n\t\t\t[ElectionLevelTitle]\n\tFROM\t[Data].[ElectionLevel]\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[ElectionLevel_SelectBy_ContentInspectionId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[ElectionLevel_SelectBy_ContentInspectionId]\n\nGO--\n\nCREATE PROCEDURE [Data].[ElectionLevel_SelectBy_ContentInspectionId] \n\t\t\t@ContentInspectionId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[ElectionLevelId],\n\t\t\t[ContentInspectionId],\n\t\t\t[ElectionLevelTitle]\n\tFROM\t[Data].[ElectionLevel]\n\tWHERE\t[ContentInspectionId] = @ContentInspectionId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[ElectionLevel_SelectBy_ElectionLevelId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[ElectionLevel_SelectBy_ElectionLevelId]\n\nGO--\n\nCREATE PROCEDURE [Data].[ElectionLevel_SelectBy_ElectionLevelId] \n\t\t\t@ElectionLevelId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[ElectionLevelId],\n\t\t\t[ContentInspectionId],\n\t\t\t[ElectionLevelTitle]\n\tFROM\t[Data].[ElectionLevel]\n\tWHERE\t[ElectionLevelId] = @ElectionLevelId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[ElectionLevel_Update]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[ElectionLevel_Update]\n\nGO--\n\nCREATE PROCEDURE [Data].[ElectionLevel_Update] \n\t\t\t@ElectionLevelId int,\n\t\t\t@ContentInspectionId int,\n\t\t\t@ElectionLevelTitle varchar(150)\nAS --Generated--\nBEGIN\n\n\tUPDATE\t[Data].[ElectionLevel] SET \n\t\t\t[ContentInspectionId] = @ContentInspectionId,\n\t\t\t[ElectionLevelTitle] = @ElectionLevelTitle\n\tWHERE\t[ElectionLevelId] = @ElectionLevelId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[ElectionLevelMetaDataXref_Delete]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[ElectionLevelMetaDataXref_Delete]\n\nGO--\n\nCREATE PROCEDURE [Data].[ElectionLevelMetaDataXref_Delete] \n\t\t\t@ElectionLevelMetaDataXrefId int\nAS --Generated--\nBEGIN\n\n\tDELETE FROM\t[Data].[ElectionLevelMetaDataXref]\n\tWHERE\t[ElectionLevelMetaDataXrefId] = @ElectionLevelMetaDataXrefId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[ElectionLevelMetaDataXref_Exists]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[ElectionLevelMetaDataXref_Exists]\n\nGO--\n\nCREATE PROCEDURE [Data].[ElectionLevelMetaDataXref_Exists]\n\t\t\t@ElectionLevelMetaDataXrefId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[ElectionLevelMetaDataXrefId],\n\t\t\t[ContentInspectionId],\n\t\t\t[ElectionLevelId],\n\t\t\t[MetaDataId]\n\tFROM\t[Data].[ElectionLevelMetaDataXref]\n\tWHERE\t(@MetaDataId IS NULL OR [MetaDataId] LIKE '%' + @MetaDataId + '%')\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[ElectionLevelMetaDataXref_SelectAll]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[ElectionLevelMetaDataXref_SelectAll]\n\nGO--\n\nCREATE PROCEDURE [Data].[ElectionLevelMetaDataXref_SelectAll]\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[ElectionLevelMetaDataXrefId],\n\t\t\t[ContentInspectionId],\n\t\t\t[ElectionLevelId],\n\t\t\t[MetaDataId]\n\tFROM\t[Data].[ElectionLevelMetaDataXref]\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[ElectionLevelMetaDataXref_SelectBy_ContentInspectionId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[ElectionLevelMetaDataXref_SelectBy_ContentInspectionId]\n\nGO--\n\nCREATE PROCEDURE [Data].[ElectionLevelMetaDataXref_SelectBy_ContentInspectionId] \n\t\t\t@ContentInspectionId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[ElectionLevelMetaDataXrefId],\n\t\t\t[ContentInspectionId],\n\t\t\t[ElectionLevelId],\n\t\t\t[MetaDataId]\n\tFROM\t[Data].[ElectionLevelMetaDataXref]\n\tWHERE\t[ContentInspectionId] = @ContentInspectionId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[ElectionLevelMetaDataXref_SelectBy_ElectionLevelId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[ElectionLevelMetaDataXref_SelectBy_ElectionLevelId]\n\nGO--\n\nCREATE PROCEDURE [Data].[ElectionLevelMetaDataXref_SelectBy_ElectionLevelId] \n\t\t\t@ElectionLevelId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[ElectionLevelMetaDataXrefId],\n\t\t\t[ContentInspectionId],\n\t\t\t[ElectionLevelId],\n\t\t\t[MetaDataId]\n\tFROM\t[Data].[ElectionLevelMetaDataXref]\n\tWHERE\t[ElectionLevelId] = @ElectionLevelId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[ElectionLevelMetaDataXref_SelectBy_ElectionLevelMetaDataXrefId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[ElectionLevelMetaDataXref_SelectBy_ElectionLevelMetaDataXrefId]\n\nGO--\n\nCREATE PROCEDURE [Data].[ElectionLevelMetaDataXref_SelectBy_ElectionLevelMetaDataXrefId] \n\t\t\t@ElectionLevelMetaDataXrefId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[ElectionLevelMetaDataXrefId],\n\t\t\t[ContentInspectionId],\n\t\t\t[ElectionLevelId],\n\t\t\t[MetaDataId]\n\tFROM\t[Data].[ElectionLevelMetaDataXref]\n\tWHERE\t[ElectionLevelMetaDataXrefId] = @ElectionLevelMetaDataXrefId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[ElectionLevelMetaDataXref_SelectBy_MetaDataId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[ElectionLevelMetaDataXref_SelectBy_MetaDataId]\n\nGO--\n\nCREATE PROCEDURE [Data].[ElectionLevelMetaDataXref_SelectBy_MetaDataId] \n\t\t\t@MetaDataId nchar(10)\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[ElectionLevelMetaDataXrefId],\n\t\t\t[ContentInspectionId],\n\t\t\t[ElectionLevelId],\n\t\t\t[MetaDataId]\n\tFROM\t[Data].[ElectionLevelMetaDataXref]\n\tWHERE\t[MetaDataId] = @MetaDataId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[ElectionLevelMetaDataXref_Update]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[ElectionLevelMetaDataXref_Update]\n\nGO--\n\nCREATE PROCEDURE [Data].[ElectionLevelMetaDataXref_Update] \n\t\t\t@ElectionLevelMetaDataXrefId int,\n\t\t\t@ContentInspectionId int,\n\t\t\t@ElectionLevelId int,\n\t\t\t@MetaDataId nchar(10) = NULL\nAS --Generated--\nBEGIN\n\n\tUPDATE\t[Data].[ElectionLevelMetaDataXref] SET \n\t\t\t[ContentInspectionId] = @ContentInspectionId,\n\t\t\t[ElectionLevelId] = @ElectionLevelId,\n\t\t\t[MetaDataId] = @MetaDataId\n\tWHERE\t[ElectionLevelMetaDataXrefId] = @ElectionLevelMetaDataXrefId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Location_Delete]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Location_Delete]\n\nGO--\n\nCREATE PROCEDURE [Data].[Location_Delete] \n\t\t\t@LocationId int\nAS --Generated--\nBEGIN\n\n\tDELETE FROM\t[Data].[Location]\n\tWHERE\t[LocationId] = @LocationId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Location_Exists]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Location_Exists]\n\nGO--\n\nCREATE PROCEDURE [Data].[Location_Exists]\n\t\t\t@LocationId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t[LocationId] as [ListKey],\n\t\t[LocationName] AS [ListLabel]\t\t\t\n\tFROM\t[Data].[Location]\n\tWHERE\t(@LocationName IS NULL OR [LocationName] LIKE '%' + @LocationName + '%')\n\tORDER BY [ListLabel] ASC\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Location_Search]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Location_Search]\n\nGO--\n\nCREATE PROCEDURE [Data].[Location_Search] \n\t\t\t@LocationName varchar(150) = NULL\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[LocationId],\n\t\t\t[ContentInspectionId],\n\t\t\t[LocationName]\n\tFROM\t[Data].[Location]\n\tWHERE\t(@LocationName IS NULL OR [LocationName] LIKE '%' + @LocationName + '%')\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Location_SelectAll]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Location_SelectAll]\n\nGO--\n\nCREATE PROCEDURE [Data].[Location_SelectAll]\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[LocationId],\n\t\t\t[ContentInspectionId],\n\t\t\t[LocationName]\n\tFROM\t[Data].[Location]\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Location_SelectBy_ContentInspectionId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Location_SelectBy_ContentInspectionId]\n\nGO--\n\nCREATE PROCEDURE [Data].[Location_SelectBy_ContentInspectionId] \n\t\t\t@ContentInspectionId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[LocationId],\n\t\t\t[ContentInspectionId],\n\t\t\t[LocationName]\n\tFROM\t[Data].[Location]\n\tWHERE\t[ContentInspectionId] = @ContentInspectionId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Location_SelectBy_LocationId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Location_SelectBy_LocationId]\n\nGO--\n\nCREATE PROCEDURE [Data].[Location_SelectBy_LocationId] \n\t\t\t@LocationId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[LocationId],\n\t\t\t[ContentInspectionId],\n\t\t\t[LocationName]\n\tFROM\t[Data].[Location]\n\tWHERE\t[LocationId] = @LocationId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Location_Update]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Location_Update]\n\nGO--\n\nCREATE PROCEDURE [Data].[Location_Update] \n\t\t\t@LocationId int,\n\t\t\t@ContentInspectionId int,\n\t\t\t@LocationName varchar(150)\nAS --Generated--\nBEGIN\n\n\tUPDATE\t[Data].[Location] SET \n\t\t\t[ContentInspectionId] = @ContentInspectionId,\n\t\t\t[LocationName] = @LocationName\n\tWHERE\t[LocationId] = @LocationId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[MetaData_Delete]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[MetaData_Delete]\n\nGO--\n\nCREATE PROCEDURE [Data].[MetaData_Delete] \n\t\t\t@MetaDataId int\nAS --Generated--\nBEGIN\n\n\tDELETE FROM\t[Data].[MetaData]\n\tWHERE\t[MetaDataId] = @MetaDataId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[MetaData_Exists]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[MetaData_Exists]\n\nGO--\n\nCREATE PROCEDURE [Data].[MetaData_Exists]\n\t\t\t@MetaDataId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t[MetaDataId] as [ListKey],\n\t\t[MetaDataName] AS [ListLabel]\t\t\t\n\tFROM\t[Data].[MetaData]\n\tWHERE\t(@MetaDataName IS NULL OR [MetaDataName] LIKE '%' + @MetaDataName + '%')\n\tORDER BY [ListLabel] ASC\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[MetaData_Search]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[MetaData_Search]\n\nGO--\n\nCREATE PROCEDURE [Data].[MetaData_Search] \n\t\t\t@MetaDataName varchar(150) = NULL\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[MetaDataId],\n\t\t\t[ContentInspectionId],\n\t\t\t[MetaDataName],\n\t\t\t[IsRequired],\n\t\t\t[AppliesAtAllLevels],\n\t\t\t[AppliesToCandidates],\n\t\t\t[AppliesToOrganizations]\n\tFROM\t[Data].[MetaData]\n\tWHERE\t(@MetaDataName IS NULL OR [MetaDataName] LIKE '%' + @MetaDataName + '%')\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[MetaData_SelectAll]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[MetaData_SelectAll]\n\nGO--\n\nCREATE PROCEDURE [Data].[MetaData_SelectAll]\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[MetaDataId],\n\t\t\t[ContentInspectionId],\n\t\t\t[MetaDataName],\n\t\t\t[IsRequired],\n\t\t\t[AppliesAtAllLevels],\n\t\t\t[AppliesToCandidates],\n\t\t\t[AppliesToOrganizations]\n\tFROM\t[Data].[MetaData]\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[MetaData_SelectBy_ContentInspectionId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[MetaData_SelectBy_ContentInspectionId]\n\nGO--\n\nCREATE PROCEDURE [Data].[MetaData_SelectBy_ContentInspectionId] \n\t\t\t@ContentInspectionId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[MetaDataId],\n\t\t\t[ContentInspectionId],\n\t\t\t[MetaDataName],\n\t\t\t[IsRequired],\n\t\t\t[AppliesAtAllLevels],\n\t\t\t[AppliesToCandidates],\n\t\t\t[AppliesToOrganizations]\n\tFROM\t[Data].[MetaData]\n\tWHERE\t[ContentInspectionId] = @ContentInspectionId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[MetaData_SelectBy_MetaDataId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[MetaData_SelectBy_MetaDataId]\n\nGO--\n\nCREATE PROCEDURE [Data].[MetaData_SelectBy_MetaDataId] \n\t\t\t@MetaDataId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[MetaDataId],\n\t\t\t[ContentInspectionId],\n\t\t\t[MetaDataName],\n\t\t\t[IsRequired],\n\t\t\t[AppliesAtAllLevels],\n\t\t\t[AppliesToCandidates],\n\t\t\t[AppliesToOrganizations]\n\tFROM\t[Data].[MetaData]\n\tWHERE\t[MetaDataId] = @MetaDataId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[MetaData_Update]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[MetaData_Update]\n\nGO--\n\nCREATE PROCEDURE [Data].[MetaData_Update] \n\t\t\t@MetaDataId int,\n\t\t\t@ContentInspectionId int,\n\t\t\t@MetaDataName varchar(150),\n\t\t\t@IsRequired bit,\n\t\t\t@AppliesAtAllLevels bit,\n\t\t\t@AppliesToCandidates bit,\n\t\t\t@AppliesToOrganizations bit\nAS --Generated--\nBEGIN\n\n\tUPDATE\t[Data].[MetaData] SET \n\t\t\t[ContentInspectionId] = @ContentInspectionId,\n\t\t\t[MetaDataName] = @MetaDataName,\n\t\t\t[IsRequired] = @IsRequired,\n\t\t\t[AppliesAtAllLevels] = @AppliesAtAllLevels,\n\t\t\t[AppliesToCandidates] = @AppliesToCandidates,\n\t\t\t[AppliesToOrganizations] = @AppliesToOrganizations\n\tWHERE\t[MetaDataId] = @MetaDataId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Organization_Delete]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Organization_Delete]\n\nGO--\n\nCREATE PROCEDURE [Data].[Organization_Delete] \n\t\t\t@OrganizationId int\nAS --Generated--\nBEGIN\n\n\tDELETE FROM\t[Data].[Organization]\n\tWHERE\t[OrganizationId] = @OrganizationId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Organization_Exists]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Organization_Exists]\n\nGO--\n\nCREATE PROCEDURE [Data].[Organization_Exists]\n\t\t\t@OrganizationId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t[OrganizationId] as [ListKey],\n\t\t[OrganizationName] AS [ListLabel]\t\t\t\n\tFROM\t[Data].[Organization]\n\tWHERE\t(@OrganizationName IS NULL OR [OrganizationName] LIKE '%' + @OrganizationName + '%')\n\tORDER BY [ListLabel] ASC\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Organization_Search]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Organization_Search]\n\nGO--\n\nCREATE PROCEDURE [Data].[Organization_Search] \n\t\t\t@OrganizationName varchar(250) = NULL\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[OrganizationId],\n\t\t\t[ContentInspectionId],\n\t\t\t[OrganizationName]\n\tFROM\t[Data].[Organization]\n\tWHERE\t(@OrganizationName IS NULL OR [OrganizationName] LIKE '%' + @OrganizationName + '%')\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Organization_SelectAll]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Organization_SelectAll]\n\nGO--\n\nCREATE PROCEDURE [Data].[Organization_SelectAll]\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[OrganizationId],\n\t\t\t[ContentInspectionId],\n\t\t\t[OrganizationName]\n\tFROM\t[Data].[Organization]\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Organization_SelectBy_ContentInspectionId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Organization_SelectBy_ContentInspectionId]\n\nGO--\n\nCREATE PROCEDURE [Data].[Organization_SelectBy_ContentInspectionId] \n\t\t\t@ContentInspectionId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[OrganizationId],\n\t\t\t[ContentInspectionId],\n\t\t\t[OrganizationName]\n\tFROM\t[Data].[Organization]\n\tWHERE\t[ContentInspectionId] = @ContentInspectionId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Organization_SelectBy_OrganizationId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Organization_SelectBy_OrganizationId]\n\nGO--\n\nCREATE PROCEDURE [Data].[Organization_SelectBy_OrganizationId] \n\t\t\t@OrganizationId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[OrganizationId],\n\t\t\t[ContentInspectionId],\n\t\t\t[OrganizationName]\n\tFROM\t[Data].[Organization]\n\tWHERE\t[OrganizationId] = @OrganizationId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Organization_Update]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Organization_Update]\n\nGO--\n\nCREATE PROCEDURE [Data].[Organization_Update] \n\t\t\t@OrganizationId int,\n\t\t\t@ContentInspectionId int,\n\t\t\t@OrganizationName varchar(250)\nAS --Generated--\nBEGIN\n\n\tUPDATE\t[Data].[Organization] SET \n\t\t\t[ContentInspectionId] = @ContentInspectionId,\n\t\t\t[OrganizationName] = @OrganizationName\n\tWHERE\t[OrganizationId] = @OrganizationId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[OrganizationMetaData_Delete]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[OrganizationMetaData_Delete]\n\nGO--\n\nCREATE PROCEDURE [Data].[OrganizationMetaData_Delete] \n\t\t\t@OrganizationMetaDataId int\nAS --Generated--\nBEGIN\n\n\tDELETE FROM\t[Data].[OrganizationMetaData]\n\tWHERE\t[OrganizationMetaDataId] = @OrganizationMetaDataId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[OrganizationMetaData_Exists]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[OrganizationMetaData_Exists]\n\nGO--\n\nCREATE PROCEDURE [Data].[OrganizationMetaData_Exists]\n\t\t\t@OrganizationMetaDataId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[OrganizationMetaDataId],\n\t\t\t[ContentInspectionId],\n\t\t\t[OrganizationId],\n\t\t\t[MetaDataId],\n\t\t\t[MetaDataValue]\n\tFROM\t[Data].[OrganizationMetaData]\n\tWHERE\t(@MetaDataValue IS NULL OR [MetaDataValue] LIKE '%' + @MetaDataValue + '%')\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[OrganizationMetaData_SelectAll]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[OrganizationMetaData_SelectAll]\n\nGO--\n\nCREATE PROCEDURE [Data].[OrganizationMetaData_SelectAll]\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[OrganizationMetaDataId],\n\t\t\t[ContentInspectionId],\n\t\t\t[OrganizationId],\n\t\t\t[MetaDataId],\n\t\t\t[MetaDataValue]\n\tFROM\t[Data].[OrganizationMetaData]\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[OrganizationMetaData_SelectBy_ContentInspectionId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[OrganizationMetaData_SelectBy_ContentInspectionId]\n\nGO--\n\nCREATE PROCEDURE [Data].[OrganizationMetaData_SelectBy_ContentInspectionId] \n\t\t\t@ContentInspectionId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[OrganizationMetaDataId],\n\t\t\t[ContentInspectionId],\n\t\t\t[OrganizationId],\n\t\t\t[MetaDataId],\n\t\t\t[MetaDataValue]\n\tFROM\t[Data].[OrganizationMetaData]\n\tWHERE\t[ContentInspectionId] = @ContentInspectionId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[OrganizationMetaData_SelectBy_MetaDataId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[OrganizationMetaData_SelectBy_MetaDataId]\n\nGO--\n\nCREATE PROCEDURE [Data].[OrganizationMetaData_SelectBy_MetaDataId] \n\t\t\t@MetaDataId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[OrganizationMetaDataId],\n\t\t\t[ContentInspectionId],\n\t\t\t[OrganizationId],\n\t\t\t[MetaDataId],\n\t\t\t[MetaDataValue]\n\tFROM\t[Data].[OrganizationMetaData]\n\tWHERE\t[MetaDataId] = @MetaDataId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[OrganizationMetaData_SelectBy_OrganizationId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[OrganizationMetaData_SelectBy_OrganizationId]\n\nGO--\n\nCREATE PROCEDURE [Data].[OrganizationMetaData_SelectBy_OrganizationId] \n\t\t\t@OrganizationId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[OrganizationMetaDataId],\n\t\t\t[ContentInspectionId],\n\t\t\t[OrganizationId],\n\t\t\t[MetaDataId],\n\t\t\t[MetaDataValue]\n\tFROM\t[Data].[OrganizationMetaData]\n\tWHERE\t[OrganizationId] = @OrganizationId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[OrganizationMetaData_SelectBy_OrganizationMetaDataId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[OrganizationMetaData_SelectBy_OrganizationMetaDataId]\n\nGO--\n\nCREATE PROCEDURE [Data].[OrganizationMetaData_SelectBy_OrganizationMetaDataId] \n\t\t\t@OrganizationMetaDataId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[OrganizationMetaDataId],\n\t\t\t[ContentInspectionId],\n\t\t\t[OrganizationId],\n\t\t\t[MetaDataId],\n\t\t\t[MetaDataValue]\n\tFROM\t[Data].[OrganizationMetaData]\n\tWHERE\t[OrganizationMetaDataId] = @OrganizationMetaDataId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[OrganizationMetaData_Update]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[OrganizationMetaData_Update]\n\nGO--\n\nCREATE PROCEDURE [Data].[OrganizationMetaData_Update] \n\t\t\t@OrganizationMetaDataId int,\n\t\t\t@ContentInspectionId int,\n\t\t\t@OrganizationId int,\n\t\t\t@MetaDataId int,\n\t\t\t@MetaDataValue varchar(max)\nAS --Generated--\nBEGIN\n\n\tUPDATE\t[Data].[OrganizationMetaData] SET \n\t\t\t[ContentInspectionId] = @ContentInspectionId,\n\t\t\t[OrganizationId] = @OrganizationId,\n\t\t\t[MetaDataId] = @MetaDataId,\n\t\t\t[MetaDataValue] = @MetaDataValue\n\tWHERE\t[OrganizationMetaDataId] = @OrganizationMetaDataId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[TableVersion_Delete]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[TableVersion_Delete]\n\nGO--\n\nCREATE PROCEDURE [Data].[TableVersion_Delete] \n\t\t\t@TableId int\nAS --Generated--\nBEGIN\n\n\tDELETE FROM\t[Data].[TableVersion]\n\tWHERE\t[TableId] = @TableId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[TableVersion_Exists]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[TableVersion_Exists]\n\nGO--\n\nCREATE PROCEDURE [Data].[TableVersion_Exists]\n\t\t\t@TableId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[TableId],\n\t\t\t[TableName],\n\t\t\t[Version]\n\tFROM\t[Data].[TableVersion]\n\tWHERE\t(@TableName IS NULL OR [TableName] LIKE '%' + @TableName + '%')\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[TableVersion_SelectAll]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[TableVersion_SelectAll]\n\nGO--\n\nCREATE PROCEDURE [Data].[TableVersion_SelectAll]\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[TableId],\n\t\t\t[TableName],\n\t\t\t[Version]\n\tFROM\t[Data].[TableVersion]\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[TableVersion_SelectBy_TableId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[TableVersion_SelectBy_TableId]\n\nGO--\n\nCREATE PROCEDURE [Data].[TableVersion_SelectBy_TableId] \n\t\t\t@TableId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[TableId],\n\t\t\t[TableName],\n\t\t\t[Version]\n\tFROM\t[Data].[TableVersion]\n\tWHERE\t[TableId] = @TableId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[TableVersion_Update]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[TableVersion_Update]\n\nGO--\n\nCREATE PROCEDURE [Data].[TableVersion_Update] \n\t\t\t@TableId int,\n\t\t\t@TableName varchar(150),\n\t\t\t@Version int\nAS --Generated--\nBEGIN\n\n\tUPDATE\t[Data].[TableVersion] SET \n\t\t\t[TableName] = @TableName,\n\t\t\t[Version] = @Version\n\tWHERE\t[TableId] = @TableId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Voter_Delete]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Voter_Delete]\n\nGO--\n\nCREATE PROCEDURE [Data].[Voter_Delete] \n\t\t\t@VoterId int\nAS --Generated--\nBEGIN\n\n\tDELETE FROM\t[Data].[Voter]\n\tWHERE\t[VoterId] = @VoterId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Voter_Exists]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Voter_Exists]\n\nGO--\n\nCREATE PROCEDURE [Data].[Voter_Exists]\n\t\t\t@VoterId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t[VoterId] as [ListKey],\n\t\t[VoterName] AS [ListLabel]\t\t\t\n\tFROM\t[Data].[Voter]\n\tWHERE\t(@VoterName IS NULL OR [VoterName] LIKE '%' + @VoterName + '%')\n\tORDER BY [ListLabel] ASC\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Voter_Search]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Voter_Search]\n\nGO--\n\nCREATE PROCEDURE [Data].[Voter_Search] \n\t\t\t@VoterName varchar(150) = NULL,\n\t\t\t@PostalCode char(6) = NULL\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[VoterId],\n\t\t\t[UserId],\n\t\t\t[ContentInspectionId],\n\t\t\t[LocationId],\n\t\t\t[VoterName],\n\t\t\t[PostalCode],\n\t\t\t[FavoriteOrganizationId]\n\tFROM\t[Data].[Voter]\n\tWHERE\t(@VoterName IS NULL OR [VoterName] LIKE '%' + @VoterName + '%')\n\t\t\tAND (@PostalCode IS NULL OR [PostalCode] LIKE '%' + @PostalCode + '%')\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Voter_SelectAll]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Voter_SelectAll]\n\nGO--\n\nCREATE PROCEDURE [Data].[Voter_SelectAll]\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[VoterId],\n\t\t\t[UserId],\n\t\t\t[ContentInspectionId],\n\t\t\t[LocationId],\n\t\t\t[VoterName],\n\t\t\t[PostalCode],\n\t\t\t[FavoriteOrganizationId]\n\tFROM\t[Data].[Voter]\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Voter_SelectBy_ContentInspectionId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Voter_SelectBy_ContentInspectionId]\n\nGO--\n\nCREATE PROCEDURE [Data].[Voter_SelectBy_ContentInspectionId] \n\t\t\t@ContentInspectionId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[VoterId],\n\t\t\t[UserId],\n\t\t\t[ContentInspectionId],\n\t\t\t[LocationId],\n\t\t\t[VoterName],\n\t\t\t[PostalCode],\n\t\t\t[FavoriteOrganizationId]\n\tFROM\t[Data].[Voter]\n\tWHERE\t[ContentInspectionId] = @ContentInspectionId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Voter_SelectBy_FavoriteOrganizationId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Voter_SelectBy_FavoriteOrganizationId]\n\nGO--\n\nCREATE PROCEDURE [Data].[Voter_SelectBy_FavoriteOrganizationId] \n\t\t\t@FavoriteOrganizationId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[VoterId],\n\t\t\t[UserId],\n\t\t\t[ContentInspectionId],\n\t\t\t[LocationId],\n\t\t\t[VoterName],\n\t\t\t[PostalCode],\n\t\t\t[FavoriteOrganizationId]\n\tFROM\t[Data].[Voter]\n\tWHERE\t[FavoriteOrganizationId] = @FavoriteOrganizationId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Voter_SelectBy_LocationId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Voter_SelectBy_LocationId]\n\nGO--\n\nCREATE PROCEDURE [Data].[Voter_SelectBy_LocationId] \n\t\t\t@LocationId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[VoterId],\n\t\t\t[UserId],\n\t\t\t[ContentInspectionId],\n\t\t\t[LocationId],\n\t\t\t[VoterName],\n\t\t\t[PostalCode],\n\t\t\t[FavoriteOrganizationId]\n\tFROM\t[Data].[Voter]\n\tWHERE\t[LocationId] = @LocationId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Voter_SelectBy_UserId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Voter_SelectBy_UserId]\n\nGO--\n\nCREATE PROCEDURE [Data].[Voter_SelectBy_UserId] \n\t\t\t@UserId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[VoterId],\n\t\t\t[UserId],\n\t\t\t[ContentInspectionId],\n\t\t\t[LocationId],\n\t\t\t[VoterName],\n\t\t\t[PostalCode],\n\t\t\t[FavoriteOrganizationId]\n\tFROM\t[Data].[Voter]\n\tWHERE\t[UserId] = @UserId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Voter_SelectBy_VoterId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Voter_SelectBy_VoterId]\n\nGO--\n\nCREATE PROCEDURE [Data].[Voter_SelectBy_VoterId] \n\t\t\t@VoterId int\nAS --Generated--\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[VoterId],\n\t\t\t[UserId],\n\t\t\t[ContentInspectionId],\n\t\t\t[LocationId],\n\t\t\t[VoterName],\n\t\t\t[PostalCode],\n\t\t\t[FavoriteOrganizationId]\n\tFROM\t[Data].[Voter]\n\tWHERE\t[VoterId] = @VoterId\n\nEND\nGO--\n-----------------------------------------------------------------------------------\n--Do not modify this file, instead use an alter proc to over-write the procedure.--\n--Make sure you follow the same expected interface of parameters, and resultsets.--\n-----------------------------------------------------------------------------------\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Data].[Voter_Update]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Data].[Voter_Update]\n\nGO--\n\nCREATE PROCEDURE [Data].[Voter_Update] \n\t\t\t@VoterId int,\n\t\t\t@UserId int,\n\t\t\t@ContentInspectionId int,\n\t\t\t@LocationId int,\n\t\t\t@VoterName varchar(150),\n\t\t\t@PostalCode char(6),\n\t\t\t@FavoriteOrganizationId int\nAS --Generated--\nBEGIN\n\n\tUPDATE\t[Data].[Voter] SET \n\t\t\t[UserId] = @UserId,\n\t\t\t[ContentInspectionId] = @ContentInspectionId,\n\t\t\t[LocationId] = @LocationId,\n\t\t\t[VoterName] = @VoterName,\n\t\t\t[PostalCode] = @PostalCode,\n\t\t\t[FavoriteOrganizationId] = @FavoriteOrganizationId\n\tWHERE\t[VoterId] = @VoterId\n\nEND\nGO--\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Auth].[Permission_SelectBy_UserId]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Auth].[Permission_SelectBy_UserId]\n\nGO--\n\nCREATE PROCEDURE [Auth].[Permission_SelectBy_UserId] \n\t\t\t@UserId int\nAS \nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[PermissionId],\n\t\t\t[PermissionName],\n\t\t\t[Title],\n\t\t\t[IsRead]\n\tFROM\t[Auth].[Permission]\n\tWHERE\t\n\t[PermissionId] IN -- Anonymous / All users permissions\n\t(\tSELECT\t[PermissionId]\n\t\tFROM\t[Auth].[RolePermission] RP\n\t\tINNER JOIN\n\t\t\t\t[Auth].[Role] R\n\t\t\t\tON RP.[RoleId] = R.[RoleId]\n\t\tWHERE\n\t\t\t(R.[ApplyToAnon] = 1 OR (R.[ApplyToAllUsers] = 1 AND @UserId > 0))\n\t\t\tAND R.[IsActive] = 1\n\t) OR [PermissionId] IN -- Specifically assigned permissions\n\t(\tSELECT\t[PermissionId]\n\t\tFROM\t[Auth].[RolePermission] RP\n\t\tINNER JOIN\n\t\t\t\t[Auth].[Role] R\n\t\t\t\tON RP.[RoleId] = R.[RoleId]\n\t\tINNER JOIN \n\t\t\t\t[Auth].[UserRole] UR\n\t\t\t\tON R.[RoleId] = UR.[RoleId]\n\t\tWHERE\n\t\t\tUR.[UserId] = @UserId\n\t\t\tAND R.[IsActive] = 1\n\t)\n\t\t\n\nEND\nGO--\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Client].[Organizations_SelectAll]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Client].[Organizations_SelectAll]\n\nGO--\n\nCREATE PROCEDURE [Client].[Organizations_SelectAll]\nAS \nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t*\n\tFROM\t[Client].[Organizations]\n\tORDER BY [OrganizationName] ASC\n\nEND\nGO--\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Client].[Users_SelectByUser_Current]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Client].[Users_SelectByUser_Current]\n\nGO--\n\nCREATE PROCEDURE [Client].[Users_SelectByUser_Current]\n\t@AuthUserId int\nAS\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t*\n\tFROM\t[Client].[Users]\n\tWHERE\t[UserId] = @AuthUserId\n\nEND\nGO--\n\nIF EXISTS(SELECT * FROM [dbo].[sysobjects] WHERE ID=object_id(N'[Client].[Users_SelectByUser_UpdateProfile]') AND OBJECTPROPERTY(id, N'IsProcedure')=1) DROP PROC [Client].[Users_SelectByUser_UpdateProfile]\n\nGO--\n\nCREATE PROCEDURE [Client].[Users_SelectByUser_UpdateProfile]\n\t@AuthUserId int,\n\t@DisplayName varchar(50),\n\t@Email varchar(100)\nAS\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Install/Files/SQL/alter/Database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT @SecurityAdminRoleId = [RoleId] FROM [Auth].[Role] WHERE [Title] = 'Security Admins'\nSELECT @AllUsersRoleId = [RoleId] FROM [Auth].[Role] WHERE [Title] = 'All Users'\nSELECT @AnonymousRoleId = [RoleId] FROM [Auth].[Role] WHERE [Title] = 'Anonymous Users'\nSELECT @SecurityAdminUserId = [UserId] FROM [Auth].[User] WHERE [UserName] = 'SecurityAdmin'\n\n-- Grant manage user role associations to security admin\nINSERT INTO [Auth].[RolePermission]([RoleId],[PermissionId])\n\tSELECT\t@SecurityAdminRoleId, [PermissionId]\n\tFROM\t[Auth].[Permission] P\n\tWHERE\t[PermissionName] LIKE 'Auth%'\n\tAND\t\tNOT EXISTS(\n\t\t\t\tSELECT * FROM [Auth].[RolePermission] RP \n\t\t\t\tWHERE [RoleId] = @SecurityAdminRoleId and RP.[PermissionId] = P.[PermissionId]\n\t\t\t)\n\n-- Grant write access to authenticated users\nINSERT INTO [Auth].[RolePermission]([RoleId],[PermissionId])\n\tSELECT\t@AllUsersRoleId, [PermissionId]\n\tFROM\t[Auth].[Permission] P\n\tWHERE\t[IsRead] = 0\n\tAND\t\tNOT [PermissionName] LIKE 'Auth%'\n\tAND\t\tNOT EXISTS(\n\t\t\t\tSELECT * FROM [Auth].[RolePermission] RP \n\t\t\t\tWHERE [RoleId] = @AllUsersRoleId and RP.[PermissionId] = P.[PermissionId]\n\t\t\t)\n\n-- Grant read access to anonymous users (and authenticated users)\nINSERT INTO [Auth].[RolePermission]([RoleId],[PermissionId])\n\tSELECT\t@AnonymousRoleId, [PermissionId]\n\tFROM\t[Auth].[Permission] P\n\tWHERE\t[IsRead] = 1\n\tAND\t\tNOT [PermissionName] LIKE 'Auth%'\n\tAND\t\tNOT EXISTS(\n\t\t\t\tSELECT * FROM [Auth].[RolePermission] RP \n\t\t\t\tWHERE [RoleId] = @AnonymousRoleId and RP.[PermissionId] = P.[PermissionId]\n\t\t\t)\n\nGO--\nIF NOT EXISTS(SELECT * FROM [Data].[ElectionLevel]) BEGIN\n\n\tDECLARE @Now DateTime",
  // {"repo_name": "DeNADev/mobage-jssdk-sample-payment", "path": "db_setting/query.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select LAST_INSERT_ID()",
  // {"repo_name": "sanelib/WebStarterKit", "path": "Deployment/SqlScripts/013_CreateNote.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\n\tN.[Id]\n\t,N.[Name]\n\t,N.[EntityTypeValue]\n\t,N.[ReferenceId]\n\t,N.[ReferenceName]\n\t,N.[Description]\n\t,N.[ImageData]\n\t,N.[RevisionNumber]\n\t,N.[CreatedBy]\n\t,N.[CreatedOn]\n\t,N.[ModifiedBy]\n\t,N.[ModifiedOn]\n\tFrom Note N\n\tWHERE N.[Id] = @Id\n\nGO\n\n\nIF OBJECT_ID('dbo.[usp_NoteUpdate]', N'P') IS NOT NULL\nDROP PROCEDURE[dbo].[usp_NoteUpdate]\nGO\n\n/****** Object:  StoredProcedure [dbo].[usp_NoteUpdate]    Script Date: 4/29/2014 2:24:05 PM ******/\nCREATE PROC [dbo].[usp_NoteUpdate]\n\t@Id  [uniqueidentifier]\n\t,@Name [nvarchar](256)\n\t,@EntityTypeValue [char](2) \n\t,@ReferenceId [uniqueidentifier] \n\t,@ReferenceName [nvarchar](256)\n\t,@Description [nvarchar](2048)\n\t,@ImageData [varchar](max)\n\t,@UserID  [uniqueidentifier]\n\nAS\n\tSET NOCOUNT ON \n\tSET XACT_ABORT ON\n\n\tBEGIN TRAN\n\n\tUPDATE [dbo].[Note]\n\tSET [Id] = @Id, [Name] = @Name, [EntityTypeValue] = @EntityTypeValue, [ReferenceId] = @ReferenceId, [ReferenceName] = @ReferenceName, [Description] = @Description, [ImageData]= @ImageData, [RevisionNumber] = [RevisionNumber] + 1, [ModifiedBy] = @UserId, [ModifiedOn] = GETDATE()\tWHERE [Id] = @Id\n\n\n\tINSERT INTO [dbo].[Note_log] ([Id], [Name], [EntityTypeValue], [ReferenceId], [ReferenceName], [Description], [ImageData], [RevisionNumber], [CreatedBy], [CreatedOn], [ModifiedBy], [ModifiedOn])\n\tSELECT\n\tN.[Id]\n\t,N.[Name]\n\t,N.[EntityTypeValue]\n\t,N.[ReferenceId]\n\t,N.[ReferenceName]\n\t,N.[Description]\n\t,N.[ImageData]\n\t,N.[RevisionNumber]\n\t,N.[CreatedBy]\n\t,N.[CreatedOn]\n\t,N.[ModifiedBy]\n\t,N.[ModifiedOn]\n\tFrom Note N\n\n\tWHERE N.[Id] = @Id\n\n\n\tCOMMIT",
  // {"repo_name": "sanelib/WebStarterKit", "path": "Deployment/SqlScripts/013_CreateNote.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\n\tN.[Id]\n\t,N.[Name]\n\t,N.[EntityTypeValue]\n\t,N.[ReferenceId]\n\t,N.[ReferenceName]\n\t,N.[Description]\n\t,N.[ImageData]\n\t,N.[RevisionNumber]\n\t,N.[CreatedBy]\n\t,N.[CreatedOn]\n\t,N.[ModifiedBy]\n\t,N.[ModifiedOn]\n\tFrom Note N\n\tWHERE N.[Id] = @Id\n\nGO\n\n\nIF OBJECT_ID('dbo.[usp_NoteDelete]', N'P') IS NOT NULL\nDROP PROCEDURE[dbo].[usp_NoteDelete]\nGO\n\n/****** Object:  StoredProcedure [dbo].[usp_NoteDelete]    Script Date: 4/29/2014 2:24:05 PM ******/\nCREATE PROC [dbo].[usp_NoteDelete]\n\t@Id uniqueidentifier\nAS\nSET NOCOUNT ON\nSET XACT_ABORT ON\n\nBEGIN TRAN\n\tDELETE FROM [dbo].[Note] WHERE  [Id] = @Id\nCOMMIT",
  // {"repo_name": "Menkachev/Java", "path": "Java DB Fundamentals/Database Basics/03. Build-In Functions - String, Math, Date, etc. functions, Wildcards, LIKE/10. Countries Holding 'A'.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT \n    `country_name`, `iso_code`\nFROM\n    `countries`\nWHERE\n    `country_name` LIKE '%a%a%a%'\nORDER BY `iso_code`",
  // {"repo_name": "tilemapjp/OpenTileMap", "path": "sql/sqlite.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT CASE (SELECT count(*) FROM sqlite_master WHERE type='table' AND name='spatial_ref_sys')\n    WHEN 1 THEN (SELECT 1) \n    ELSE (SELECT InitSpatialMetaData())\nEND",
  // {"repo_name": "tilemapjp/OpenTileMap", "path": "sql/sqlite.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT CASE (SELECT count(*) FROM sqlite_master WHERE type='trigger' AND name='ggi_mapgeoms_geoms')\n    WHEN 1 THEN (SELECT 1)\n    ELSE (SELECT AddGeometryColumn('mapgeoms', 'geoms', 4326, 'GEOMETRY', 'XY', 1))\nEND",
  // {"repo_name": "tilemapjp/OpenTileMap", "path": "sql/sqlite.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT CASE (SELECT count(*) FROM sqlite_master WHERE type='table' AND name='idx_mapgeoms_geoms')\n    WHEN 1 THEN (SELECT 1)\n    ELSE (SELECT CreateSpatialIndex('mapgeoms','geoms'))\nEND",
  // {"repo_name": "tilemapjp/OpenTileMap", "path": "sql/sqlite.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT CASE (SELECT count(*) FROM sqlite_master WHERE type='trigger' AND name='ggi_maperas_eras')\n    WHEN 1 THEN (SELECT 1)\n    ELSE (SELECT AddGeometryColumn('maperas', 'eras', -1, 'GEOMETRY', 'XY', 1))\nEND",
  // {"repo_name": "tilemapjp/OpenTileMap", "path": "sql/sqlite.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT CASE (SELECT count(*) FROM sqlite_master WHERE type='table' AND name='idx_maperas_eras')\n    WHEN 1 THEN (SELECT 1)\n    ELSE (SELECT CreateSpatialIndex('maperas','eras'))\nEND",
  // {"repo_name": "spatialdev/PMT", "path": "Database/ChangeScripts/2.0.6/cs_2.0.6._a.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM(\nSELECT (xpath('/iati-activity/iati-identifier/text()', node.xml))[1]::text AS \"iati-identifier\"  \n,(xpath('/iati-activity/reporting-org/text()', node.xml))[1]::text AS \"reporting-org\", (xpath('/iati-activity/reporting-org/@type', node.xml))[1]::text AS \"reporting-org_type\"\n,(xpath('/iati-activity/title/text()', node.xml))[1]::text AS \"title\"\n,(xpath('/iati-activity/participating-org/text()', node.xml))::text[] AS \"participating-org\",(xpath('/iati-activity/participating-org/@role', node.xml))::text[] AS \"participating-org_role\",(xpath('/iati-activity/participating-org/@type', node.xml))::text[] AS \"participating-org_type\"\n,(xpath('/iati-activity/recipient-country/text()', node.xml))::text[] AS \"recipient-country\",(xpath('/iati-activity/recipient-country/@code', node.xml))::text[] AS \"recipient-country_code\" ,(xpath('/iati-activity/recipient-country/@percentage', node.xml))::text[] AS \"recipient-country_percentage\"\n,(xpath('/iati-activity/description/text()', node.xml))[1]::text AS \"description\"\n,(xpath('/iati-activity/activity-date/@iso-date', node.xml))::text[] AS \"activity-date\", (xpath('/iati-activity/activity-date/@type', node.xml))::text[] AS \"activity-date_type\"\n,(xpath('/iati-activity/activity-status/text()', node.xml))[1]::text AS \"activity-status\",(xpath('/iati-activity/activity-status/@code', node.xml))[1]::text AS \"activity-status_code\"\n,(xpath('/iati-activity/sector/text()', node.xml))::text[] AS \"sector\", (xpath('/iati-activity/sector/@code', node.xml))::text[] AS \"sector_code\"\n,(xpath('/iati-activity/transaction', node.xml))::xml[] AS \"transaction\"\n,(xpath('/iati-activity/contact-info', node.xml))::xml[] AS \"contact-info\"\n,(xpath('/iati-activity/location', node.xml))::xml[] AS \"location\"\n,(xpath('/iati-activity/budget', node.xml))::xml[] AS \"budget\"\nFROM(SELECT unnest(xpath('/iati-activities/iati-activity', xml))::xml AS xml from xml\nWHERE project_id = 1) AS node) foo\nWHERE title = '' or title is null\n\n\nselect a.project_id, a.activity_id, a.title, a.description, a.start_date, a.end_date, a.active\nfrom activity a\nleft join(\nselect * from activity_taxonomy at\njoin classification c\non at.classification_id = c.classification_id\nwhere taxonomy_id = (select taxonomy_id from taxonomy where name = 'Sector')\n) foo\non a.activity_id = foo.activity_id\nwhere foo.name is null and project_id = 3\norder by a.project_id, a.activity_id, a.title\n\nselect * from pmt_data_groups()",
  // {"repo_name": "spatialdev/PMT", "path": "Database/ChangeScripts/2.0.6/cs_2.0.6._a.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT xml_id, project_id, action, type, taxonomy, data_group, error FROM xml where project_id is not null order by project_id",
  // {"repo_name": "Agirish/drill-test-framework", "path": "framework/resources/Functional/s3minio/filetypes/dir_data.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from s3minio.tmp.`filetypes/dir`",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM c1",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM child",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM child2",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT quote(x) FROM pA",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT quote(c) FROM cA",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT quote(c) FROM cB",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT quote(x) FROM pA ORDER BY rowid",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT count(*) FROM c1",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT d, c FROM c1",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM p1",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM artist",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM track",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM parent",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM parent ORDER BY rowid",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT 'xxx'",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT a FROM child",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM apollo",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT typeof(c), c, typeof(d), d FROM apollo",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT IFNULL(y, 'null') FROM child",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM p",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM c1",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM c2",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM c3",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT sql FROM sqlite_master WHERE type = 'table'",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM c1",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM c2",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM c3",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM log",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM log",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM p",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM p",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM c5",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM c3",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT sql FROM sqlite_master WHERE name = 't1'",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT sql FROM sqlite_master WHERE name = 'c'",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/e_fkey-2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT sql FROM sqlite_master WHERE name = 'c'",
  // {"repo_name": "AlexTitenko/sqlserver-kit", "path": "Scripts/Bufer_Cache_Info.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\n    indexes.name AS index_name,\n    objects.name AS object_name,\n    objects.type_desc AS object_type_description,\n    COUNT(*) AS buffer_cache_pages,\n    COUNT(*) * 8 / 1024  AS buffer_cache_used_MB,\n    SUM(allocation_units.used_pages) AS pages_in_index,\n    SUM(allocation_units.used_pages) * 8 /1024 AS total_index_size_MB,\n    CAST((CAST(COUNT(*) AS DECIMAL) / CAST(SUM(allocation_units.used_pages) AS DECIMAL) * 100) AS DECIMAL(5,2)) AS percent_of_pages_in_memory\nFROM sys.dm_os_buffer_descriptors\nINNER JOIN sys.allocation_units\nON allocation_units.allocation_unit_id = dm_os_buffer_descriptors.allocation_unit_id\nINNER JOIN sys.partitions\nON ((allocation_units.container_id = partitions.hobt_id AND type IN (1,3))\nOR (allocation_units.container_id = partitions.partition_id AND type IN (2)))\nINNER JOIN sys.objects\nON partitions.object_id = objects.object_id\nINNER JOIN sys.indexes\nON objects.object_id = indexes.object_id\nAND partitions.index_id = indexes.index_id\nWHERE allocation_units.type IN (1,2,3)\nAND objects.is_ms_shipped = 0\nAND dm_os_buffer_descriptors.database_id = DB_ID()\nGROUP BY indexes.name,\n         objects.name,\n         objects.type_desc\nORDER BY CAST((CAST(COUNT(*) AS DECIMAL) / CAST(SUM(allocation_units.used_pages) AS DECIMAL) * 100) AS DECIMAL(5,2)) DESC",
  // {"repo_name": "AlexTitenko/sqlserver-kit", "path": "Scripts/Bufer_Cache_Info.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\n    objects.name AS object_name,\n    objects.type_desc AS object_type_description,\n    COUNT(*) AS buffer_cache_pages,\n    CAST(COUNT(*) * 8 AS DECIMAL) / 1024  AS buffer_cache_total_MB,\n    CAST(SUM(CAST(dm_os_buffer_descriptors.free_space_in_bytes AS BIGINT)) AS DECIMAL) / 1024 / 1024 AS buffer_cache_free_space_in_MB,\n    CAST((CAST(SUM(CAST(dm_os_buffer_descriptors.free_space_in_bytes AS BIGINT)) AS DECIMAL) / 1024 / 1024) / (CAST(COUNT(*) * 8 AS DECIMAL) / 1024) * 100 AS DECIMAL(5,2)) AS buffer_cache_percent_free_space\nFROM sys.dm_os_buffer_descriptors\nINNER JOIN sys.allocation_units\nON allocation_units.allocation_unit_id = dm_os_buffer_descriptors.allocation_unit_id\nINNER JOIN sys.partitions\nON ((allocation_units.container_id = partitions.hobt_id AND type IN (1,3))\nOR (allocation_units.container_id = partitions.partition_id AND type IN (2)))\nINNER JOIN sys.objects\nON partitions.object_id = objects.object_id\nWHERE allocation_units.type IN (1,2,3)\nAND objects.is_ms_shipped = 0\nAND dm_os_buffer_descriptors.database_id = DB_ID()\nGROUP BY objects.name,\n            objects.type_desc,\n            objects.object_id\nHAVING COUNT(*) > 0\nORDER BY COUNT(*) DESC",
  // {"repo_name": "AlexTitenko/sqlserver-kit", "path": "Scripts/Bufer_Cache_Info.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\n    databases.name AS database_name,\n    COUNT(*) AS buffer_cache_total_pages,\n    SUM(CASE WHEN dm_os_buffer_descriptors.is_modified = 1\n                THEN 1\n                ELSE 0\n        END) AS buffer_cache_dirty_pages,\n    SUM(CASE WHEN dm_os_buffer_descriptors.is_modified = 1\n                THEN 0\n                ELSE 1\n        END) AS buffer_cache_clean_pages,\n    SUM(CASE WHEN dm_os_buffer_descriptors.is_modified = 1\n                THEN 1\n                ELSE 0\n        END) * 8 / 1024 AS buffer_cache_dirty_page_MB,\n    SUM(CASE WHEN dm_os_buffer_descriptors.is_modified = 1\n                THEN 0\n                ELSE 1\n        END) * 8 / 1024 AS buffer_cache_clean_page_MB\nFROM sys.dm_os_buffer_descriptors\nINNER JOIN sys.databases\nON dm_os_buffer_descriptors.database_id = databases.database_id\nGROUP BY databases.name",
  // {"repo_name": "AlexTitenko/sqlserver-kit", "path": "Scripts/Bufer_Cache_Info.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\n    indexes.name AS index_name,\n    objects.name AS object_name,\n    objects.type_desc AS object_type_description,\n    COUNT(*) AS buffer_cache_total_pages,\n    SUM(CASE WHEN dm_os_buffer_descriptors.is_modified = 1\n                THEN 1\n                ELSE 0\n        END) AS buffer_cache_dirty_pages,\n    SUM(CASE WHEN dm_os_buffer_descriptors.is_modified = 1\n                THEN 0\n                ELSE 1\n        END) AS buffer_cache_clean_pages,\n    SUM(CASE WHEN dm_os_buffer_descriptors.is_modified = 1\n                THEN 1\n                ELSE 0\n        END) * 8 / 1024 AS buffer_cache_dirty_page_MB,\n    SUM(CASE WHEN dm_os_buffer_descriptors.is_modified = 1\n                THEN 0\n                ELSE 1\n        END) * 8 / 1024 AS buffer_cache_clean_page_MB\nFROM sys.dm_os_buffer_descriptors\nINNER JOIN sys.allocation_units\nON allocation_units.allocation_unit_id = dm_os_buffer_descriptors.allocation_unit_id\nINNER JOIN sys.partitions\nON ((allocation_units.container_id = partitions.hobt_id AND type IN (1,3))\nOR (allocation_units.container_id = partitions.partition_id AND type IN (2)))\nINNER JOIN sys.objects\nON partitions.object_id = objects.object_id\nINNER JOIN sys.indexes\nON objects.object_id = indexes.object_id\nAND partitions.index_id = indexes.index_id\nWHERE allocation_units.type IN (1,2,3)\nAND objects.is_ms_shipped = 0\nAND dm_os_buffer_descriptors.database_id = DB_ID()\nGROUP BY indexes.name,\n         objects.name,\n         objects.type_desc\nORDER BY COUNT(*) DESC",
  // {"repo_name": "ppKrauss/base-terminologia-controlada", "path": "src/sql_mode2/term_lib.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT term_lib.jrpc_ret('123'::text,'i1')",
  // {"repo_name": "ppKrauss/base-terminologia-controlada", "path": "src/sql_mode2/term_lib.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT term_lib.jrpc_ret(array['123'])",
  // {"repo_name": "Agirish/drill-test-framework", "path": "framework/resources/Functional/subqueries/not_in/s2_d9.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select count(*) from j2 where d9 not in ( select d9 from j1)",
  // {"repo_name": "edespino/gpdb", "path": "src/test/regress/sql/enum.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 'mauve'::rainbow",
  // {"repo_name": "edespino/gpdb", "path": "src/test/regress/sql/enum.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM enumtest WHERE col <> 'orange' ORDER BY col",
  // {"repo_name": "edespino/gpdb", "path": "src/test/regress/sql/enum.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM enumtest WHERE col > 'yellow' ORDER BY col",
  // {"repo_name": "edespino/gpdb", "path": "src/test/regress/sql/enum.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM enumtest WHERE col >= 'yellow' ORDER BY col",
  // {"repo_name": "edespino/gpdb", "path": "src/test/regress/sql/enum.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM enumtest WHERE col < 'green' ORDER BY col",
  // {"repo_name": "edespino/gpdb", "path": "src/test/regress/sql/enum.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM enumtest WHERE col <= 'green' ORDER BY col",
  // {"repo_name": "edespino/gpdb", "path": "src/test/regress/sql/enum.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 'red'::text::rainbow = 'red'::rainbow",
  // {"repo_name": "edespino/gpdb", "path": "src/test/regress/sql/enum.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT max(col) FROM enumtest",
  // {"repo_name": "edespino/gpdb", "path": "src/test/regress/sql/enum.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT max(col) FROM enumtest WHERE col < 'green'",
  // {"repo_name": "edespino/gpdb", "path": "src/test/regress/sql/enum.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM enumtest WHERE col = 'orange'",
  // {"repo_name": "edespino/gpdb", "path": "src/test/regress/sql/enum.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT min(col) FROM enumtest",
  // {"repo_name": "edespino/gpdb", "path": "src/test/regress/sql/enum.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 'red'::rgb",
  // {"repo_name": "edespino/gpdb", "path": "src/test/regress/sql/enum.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 'purple'::rgb",
  // {"repo_name": "edespino/gpdb", "path": "src/test/regress/sql/enum.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 'purple'::rainbow::rgb",
  // {"repo_name": "edespino/gpdb", "path": "src/test/regress/sql/enum.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT ('{red,green,blue}'::rainbow[])[2]",
  // {"repo_name": "edespino/gpdb", "path": "src/test/regress/sql/enum.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 'red' = ANY ('{red,green,blue}'::rainbow[])",
  // {"repo_name": "edespino/gpdb", "path": "src/test/regress/sql/enum.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 'yellow' = ANY ('{red,green,blue}'::rainbow[])",
  // {"repo_name": "edespino/gpdb", "path": "src/test/regress/sql/enum.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 'red' = ALL ('{red,green,blue}'::rainbow[])",
  // {"repo_name": "edespino/gpdb", "path": "src/test/regress/sql/enum.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 'red' = ALL ('{red,red}'::rainbow[])",
  // {"repo_name": "edespino/gpdb", "path": "src/test/regress/sql/enum.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT enum_last('green'::rainbow)",
  // {"repo_name": "edespino/gpdb", "path": "src/test/regress/sql/enum.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT enum_range(NULL::rainbow)",
  // {"repo_name": "edespino/gpdb", "path": "src/test/regress/sql/enum.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT enum_range('orange'::rainbow, 'green'::rainbow)",
  // {"repo_name": "edespino/gpdb", "path": "src/test/regress/sql/enum.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT enum_range(NULL, 'green'::rainbow)",
  // {"repo_name": "edespino/gpdb", "path": "src/test/regress/sql/enum.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT enum_range('orange'::rainbow, NULL)",
  // {"repo_name": "edespino/gpdb", "path": "src/test/regress/sql/enum.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT enum_range(NULL::rainbow, NULL)",
  // {"repo_name": "edespino/gpdb", "path": "src/test/regress/sql/enum.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT echo_me('red'::rainbow)",
  // {"repo_name": "edespino/gpdb", "path": "src/test/regress/sql/enum.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT echo_me('red')",
  // {"repo_name": "edespino/gpdb", "path": "src/test/regress/sql/enum.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM pg_enum WHERE NOT EXISTS\n  (SELECT 1 FROM pg_type WHERE pg_type.oid = enumtypid)",
  // {"repo_name": "Spiderz11/ACLTracker", "path": "db_work/DB_create_script.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select hitcount, checked, lasthit, fk_hitcount_status\n\t\t\tinto old_hit, checkd, lastd, hit_status\n\t\t\tfrom acl\n\t\t\twhere acl.hash_uid = in_hash and fk_device = in_device",
  // {"repo_name": "nifannn/HackerRank", "path": "Practice/SQL/weather_observation_station_6/WeatherObservationStation6.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT CITY FROM STATION WHERE CITY REGEXP '^[aeiou]'",
  // {"repo_name": "kavinyao/SKBPR", "path": "basic-stat.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT COUNT(*) AS SESSION_WITH_REFER_NUMBER FROM user U WHERE U.refer IS NOT NULL AND U.refer != '' AND U.refer != 'null'",
  // {"repo_name": "kavinyao/SKBPR", "path": "basic-stat.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT COUNT(*) AS VISIT_NUMBER FROM visit",
  // {"repo_name": "kavinyao/SKBPR", "path": "basic-stat.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT COUNT(*) AS PRODUCT_VISIT_NUMBER FROM visit WHERE pagetype = 'product'",
  // {"repo_name": "kavinyao/SKBPR", "path": "basic-stat.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT count(*) AS LAND_ON_HOMEPAGE_NUMBER FROM (SELECT U.userid, MIN(v.time), v.pagetype pt FROM user U JOIN visit V ON U.userid = V.userid WHERE U.refer IS NOT NULL AND U.refer != '' AND U.refer != 'null' GROUP BY V.userid) t WHERE pt = 'home'",
  // {"repo_name": "badal/jacman-core", "path": "lib/jacman/core/sql_do_not_use/jacinthe_export_drupal_sql/smf_abonnement.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\n  abonnement_id                                                      aid,\n  client_final.tiers_drupal                                          uid,\n  abonnement_annee                                                   annee,\n  revue_nom                                                          revue,\n  abonnement_nbre                                                    nbre,\n  type_abonnement_nom                                                type,\n  if(payeur.tiers_id != client_final.tiers_id, payeur.tiers_nom, '') payeur,\n  abonnement_reference_commande                                      reference\nINTO OUTFILE \"::DUMP_FILE::\" ::SQL_DUMP_OPTIONS::\nFROM jacinthed.abonnement\nLEFT JOIN jacinthed.client_sage ON abonnement_client_sage = client_sage_id\nLEFT JOIN jacinthed.tiers client_final ON client_final.tiers_id = client_sage_client_final\nLEFT JOIN jacinthed.tiers payeur ON payeur.tiers_id = client_sage_paiement_chez\nLEFT JOIN jacinthed.revue ON revue_id = abonnement_revue\nLEFT JOIN jacinthed.type_abonnement ON type_abonnement_id = abonnement_type\nWHERE client_final.tiers_drupal IS NOT NULL\nAND abonnement_ignorer = 0\nAND abonnement_annee > YEAR(curdate()) - ::YEARS::",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select date '2019-01-01\\t'",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select date '2020-01-01\u4e2d\u6587'",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select make_date(2019, 1, 1), make_date(12, 12, 12)",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select current_date = current_date",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select UNIX_DATE(DATE('1970-01-01')), UNIX_DATE(DATE('2020-12-04')), UNIX_DATE(null)",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select to_date(null), to_date('2016-12-31'), to_date('2016-12-31', 'yyyy-MM-dd')",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select next_day(\"2015-07-23\", \"xx\")",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select next_day(\"2015-07-23 12:12:12\", \"Mon\")",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select next_day(timestamp_ntz\"2015-07-23 12:12:12\", \"Mon\")",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select next_day(\"xx\", \"Mon\")",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select next_day(null, \"Mon\")",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select next_day(null, \"xx\")",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select date_add('2011-11-11', 1)",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select date_add('2011-11-11', 1Y)",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select date_add('2011-11-11', 1S)",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select date_add('2011-11-11', 1.0)",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select date_add('2011-11-11', 1E1)",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select date_add('2011-11-11', '1.2')",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select date_add(date'2011-11-11', null)",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select date_add(timestamp_ntz'2011-11-11 12:12:12', 1)",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select date_sub('2011-11-11', 1)",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select date_sub('2011-11-11', 1Y)",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select date_sub('2011-11-11', 1S)",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select date_sub('2011-11-11', 1.0)",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select date_sub('2011-11-11', 1E1)",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select date_sub(date'2011-11-11', '1.2')",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select date_sub(date'2011-11-11', null)",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select date_sub(timestamp_ntz'2011-11-11 12:12:12', 1)",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select date_sub('2011-11-11', int_str) from date_view",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select date_add(date_str, 1) from date_view",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select date_sub(date_str, 1) from date_view",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select date '2001-09-28' + 7Y",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select 7S + date '2001-09-28'",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select date '2001-10-01' - 7",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select '2001-10-01' - date '2001-09-28'",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select date '2001-09-28' - null",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select null - date '2019-10-06'",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select date '2001-09-28' - date_str from date_view",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select '1' + date'2011-11-11'",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select null + date'2011-11-11'",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select from_json('{\"d\":\"26/October/2015\"}', 'd Date', map('dateFormat', 'dd/MMMMM/yyyy'))",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select from_csv('26/October/2015', 'd Date', map('dateFormat', 'dd/MMMMM/yyyy'))",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select date_add(MILLISECOND, -1, timestamp'2022-02-25 01:02:03.456')",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select dateadd(SECOND, 58, timestamp'2022-02-25 01:02:03')",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select date_add(MINUTE, -100, date'2022-02-25')",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select dateadd(HOUR, -1, timestamp'2022-02-25 01:02:03')",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select date_add(DAY, 367, date'2022-02-25')",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select dateadd(WEEK, -4, timestamp'2022-02-25 01:02:03')",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select date_add(MONTH, -1, timestamp'2022-02-25 01:02:03')",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select dateadd(QUARTER, 5, date'2022-02-25')",
  // {"repo_name": "vinodkc/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/date.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select date_add(YEAR, 1, date'2022-02-25')",
  // {"repo_name": "siuccwd/IOER", "path": "Database/Scripts/LinkChecker_script.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT Id, Url, IsRegex, Created, CreatedBy, LastUpdated, LastUpdatedBy\n\tFROM Known404Pages\nEND\n\nGO\n/****** Object:  StoredProcedure [dbo].[KnownBadContentGetAll]    Script Date: 9/27/2015 11:22:17 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n-- =============================================\n-- Author:\t\tJerome Grimmer\n-- Create date: 8/17/2015\n-- Description:\tRetrieve all known bad content from database\n-- =============================================\nCREATE PROCEDURE [dbo].[KnownBadContentGetAll]\nAS\nBEGIN\n\t-- SET NOCOUNT ON added to prevent extra result sets from\n\t-- interfering with SELECT statements.\n\tSET NOCOUNT ON",
  // {"repo_name": "siuccwd/IOER", "path": "Database/Scripts/LinkChecker_script.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT Id, HostName, Content, Created, CreatedBy, LastUpdated, LastUpdatedBy\n\tFROM KnownBadContent\nEND\n\nGO\n/****** Object:  StoredProcedure [dbo].[KnownBadTitleGetAll]    Script Date: 9/27/2015 11:22:17 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n-- =============================================\n-- Author:\t\tJerome Grimmer\n-- Create date: 6/15/2015\n-- Description:\tGet all known Bad Titles\n-- =============================================\nCREATE PROCEDURE [dbo].[KnownBadTitleGetAll]\nAS\nBEGIN\n\t-- SET NOCOUNT ON added to prevent extra result sets from\n\t-- interfering with SELECT statements.\n\tSET NOCOUNT ON",
  // {"repo_name": "siuccwd/IOER", "path": "Database/Scripts/LinkChecker_script.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT Id, HostName, Title, TitleIsRegex, Created, CreatedBy,\n\t\tLastUpdated, LastUpdatedBy\n\tFROM KnownBadTitle\nEND\n\nGO\n/****** Object:  StoredProcedure [dbo].[Resource.CollectionAdd]    Script Date: 9/27/2015 11:22:17 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n-- =============================================\n-- Author:\t\tJerome Grimmer\n-- Create date: 3/6/2014\n-- Description:\tAdd resource to a collection\n-- =============================================\nCREATE PROCEDURE [dbo].[Resource.CollectionAdd]\n\t@ResourceIntId int, @LibrarySectionId int, @Created datetime, @CreatedById int\nAS\nBEGIN\n\t-- SET NOCOUNT ON added to prevent extra result sets from\n\t-- interfering with SELECT statements.\n\tSET NOCOUNT ON",
  // {"repo_name": "siuccwd/IOER", "path": "Database/Scripts/LinkChecker_script.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT Id, LibrarySectionId, ResourceIntId, IsActive, Comment, Created, CreatedById\n\tFROM [IsleContent].[dbo].[Library.Resource]\n\tWHERE ResourceIntId = @ResourceIntId\nEND\n\nGO\n/****** Object:  StoredProcedure [dbo].[Resource.LinkAddUpdate]    Script Date: 9/27/2015 11:22:17 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n-- =============================================\n-- Author:\t\tJerome Grimmer\n-- Create date: 6/11/2013\n-- Description:\tUpdate Resource.Links with new and updated resource URLs\n-- =============================================\nCREATE PROCEDURE [dbo].[Resource.LinkAddUpdate]\nAS\nBEGIN\n\t-- SET NOCOUNT ON added to prevent extra result sets from\n\t-- interfering with SELECT statements.\n\tSET NOCOUNT ON",
  // {"repo_name": "siuccwd/IOER", "path": "Database/Scripts/LinkChecker_script.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT ResourceIntId, LastCheckDate, HostName, IsDeleted, NbrDnsErrors, NbrTimeouts, NbrInternalServerErrors, NbrUnableToConnect, ResourceUrl\n\tFROM [Resource.Link] rl\n\tINNER JOIN [Isle_IOER].dbo.[Resource] res ON rl.ResourceIntId = res.Id\n\tWHERE res.ResourceUrl = @Url\nEND\n\nGO\n/****** Object:  StoredProcedure [dbo].[Resource.LinkSelectForPhase2]    Script Date: 9/27/2015 11:22:17 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n-- =============================================\n-- Author:\t\tJerome Grimmer\n-- Create date: 6/12/2013\n-- Description:\tSELECT resources which need a phase 2 check\n-- =============================================\nCREATE PROCEDURE [dbo].[Resource.LinkSelectForPhase2]\nAS\nBEGIN\n\t-- SET NOCOUNT ON added to prevent extra result sets from\n\t-- interfering with SELECT statements.\n\tSET NOCOUNT ON",
  // {"repo_name": "siuccwd/IOER", "path": "Database/Scripts/LinkChecker_script.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT ResourceIntId, LastCheckDate, HostName, IsDeleted, NbrDnsErrors, NbrTimeouts, NbrInternalServerErrors, NbrUnableToConnect, ResourceUrl\n\tFROM [Resource.Link] rl\n\tINNER JOIN [Isle_IOER].dbo.[Resource] res ON rl.ResourceIntId = res.Id\n\tWHERE rl.IsDeleted <> 'True' AND\n\t\tNbrDnsErrors > 0 OR NbrTimeouts > 0 OR NbrInternalServerErrors > 0 OR NbrUnableToConnect > 0\n\tORDER BY LastCheckDate DESC, ResourceIntId ASC\nEND\n\nGO\n/****** Object:  StoredProcedure [dbo].[Resource.LinkSelectLeastRecentlyChecked]    Script Date: 9/27/2015 11:22:17 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n-- =============================================\n-- Author:\t\tJerome Grimmer\n-- Create date: 6/12/2013\n-- Description:\tSELECT TOP x (non-deleted) least recently checked resources\n-- =============================================\nCREATE PROCEDURE [dbo].[Resource.LinkSelectLeastRecentlyChecked]\n\t@MaxRows int\nAS\nBEGIN\n\t-- SET NOCOUNT ON added to prevent extra result sets from\n\t-- interfering with SELECT statements.\n\tSET NOCOUNT ON",
  // {"repo_name": "siuccwd/IOER", "path": "Database/Scripts/LinkChecker_script.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT TOP (@MaxRows) ResourceIntId, LastCheckDate, HostName, IsDeleted, NbrDnsErrors, NbrTimeouts, NbrInternalServerErrors, NbrUnableToConnect, ResourceUrl\n\tFROM [Resource.Link] rl\n\tINNER JOIN [Isle_IOER].dbo.[Resource] res ON rl.ResourceIntId = res.Id\n\tWHERE rl.IsDeleted <> 'True'\n\tORDER BY LastCheckDate DESC, ResourceIntId ASC\nEND\n\nGO\n/****** Object:  StoredProcedure [dbo].[Resource.LinkUpdate]    Script Date: 9/27/2015 11:22:17 AM ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n-- =============================================\n-- Author:\t\tJerome Grimmer\n-- Create date: 6/12/2013\n-- Description:\tUpdate a Resource.Link row\n-- =============================================\nCREATE PROCEDURE [dbo].[Resource.LinkUpdate]\n\t@ResourceIntId int,\n\t@LastCheckDate datetime,\n\t@IsDeleted int,\n\t@NbrDnsErrors int,\n\t@NbrTimeouts int,\n\t@NbrInternalServerErrors int,\n\t@NbrUnableToConnect int\nAS\nBEGIN\n\t-- SET NOCOUNT ON added to prevent extra result sets from\n\t-- interfering with SELECT statements.\n\tSET NOCOUNT ON",
  // {"repo_name": "analyst-collective/dbt", "path": "performance/projects/01_2000_simple_models/models/path_142/node_1422.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select 1 as id\nunion all\nselect * from {{ ref('node_0') }}\nunion all\nselect * from {{ ref('node_110') }}\nunion all\nselect * from {{ ref('node_204') }}\nunion all\nselect * from {{ ref('node_1159') }}\nunion all\nselect * from {{ ref('node_1299') }}",
  // {"repo_name": "support-project/knowledge", "path": "src/main/resources/org/support/project/web/dao/sql/UserAliasDao/UserAliasDao_physical_select_on_key.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM USER_ALIAS\n WHERE \nAUTH_KEY = ?\n AND USER_ID = ?",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from csq_t1 where csq_t1.x >ALL (select csq_t2.x from csq_t2 where csq_t2.y=csq_t1.y) order by 1",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select csq_t1.x, (select sum(bar.x) from csq_t1 bar where bar.x = csq_t1.x) as sum from csq_t1 order by csq_t1.x",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select csq_t1.x, (select bar.x from csq_t1 bar where bar.x = csq_t1.x) as sum from csq_t1 order by csq_t1.x",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from mrs_t1 where exists (select x from mrs_t1 where x < -1) order by 1",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from mrs_t1 where exists (select x from mrs_t1 where x = 1) order by 1",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from mrs_t1 where x in (select x-95 from mrs_t1) or x < 5 order by 1",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from mrs_u1 join mrs_u2 on mrs_u1.a=mrs_u2.a where mrs_u1.a in (1,11) or mrs_u2.a in (select a from mrs_u1 where a=1) order by 1",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT a.attname\n, pg_catalog.format_type(a.atttypid, a.atttypmod)\n\n, ( SELECT substring(pg_catalog.pg_get_expr(d.adbin, d.adrelid) for 128)\n FROM pg_catalog.pg_attrdef d\nWHERE d.adrelid = a.attrelid AND d.adnum = a.attnum AND a.atthasdef\n)\n, a.attnotnull\n, a.attnum\n, a.attstorage\n, pg_catalog.col_description(a.attrelid, a.attnum)\n, ( SELECT s.attoptions\nFROM pg_attribute_storage s\nWHERE s.attrelid = a.attrelid AND s.attnum = a.attnum\n) newcolumn\n\nFROM pg_catalog.pg_attribute a\nWHERE a.attrelid = 't3cozlib'::regclass AND a.attnum > 0 AND NOT a.attisdropped\nORDER BY a.attnum",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from csq_m1",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from csq_d1",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select count(*) from csq_t1 t1 where a > (SELECT x.b FROM ( select avg(a)::int as b,'haha'::text from csq_t1 t2 where t2.a=t1.d) x )",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select count(*) from csq_t1 t1 where a > ( select avg(a)::int from csq_t1 t2 where t2.a=t1.d)",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM csq_r WHERE a IN (SELECT * FROM csq_f(csq_r.a))",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM csq_r WHERE a not IN (SELECT * FROM csq_f(csq_r.a))",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM csq_r WHERE exists (SELECT * FROM csq_f(csq_r.a))",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM csq_r WHERE not exists (SELECT * FROM csq_f(csq_r.a))",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM csq_r WHERE a > (SELECT csq_f FROM csq_f(csq_r.a) limit 1)",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM csq_r WHERE a < ANY (SELECT csq_f FROM csq_f(csq_r.a))",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM csq_r WHERE a <= ALL (SELECT csq_f FROM csq_f(csq_r.a))",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from csq_pullup t0 where 1= (select count(*) from csq_pullup t1 where t0.t=t1.t)",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from csq_pullup t0 where 1= (select count(*) from csq_pullup t1 where t0.t=t1.v)",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from csq_pullup t0 where 1= (select count(*) from csq_pullup t1 where t0.n=t1.n)",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from csq_pullup t0 where 1= (select count(*) from csq_pullup t1 where t0.n + 1=t1.n + 1)",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from csq_pullup t0 where 1= (select count(*) from csq_pullup t1 where t0.n + 1=t1.i + 1)",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from csq_pullup t0 where not exists (select 1 from csq_pullup t1 where t0.t=t1.t and t1.i = 1)",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from csq_pullup t0 where not exists (select 1 from csq_pullup t1 where t0.i=t1.i + 1)",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from subselect_t1 where x in (select y from subselect_t2)",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from subselect_t1 where x in (select y from subselect_t2 union all select y from subselect_t2)",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select count(*) from subselect_t1 where x in (select y from subselect_t2)",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select count(*) from subselect_t1 where x in (select y from subselect_t2 union all select y from subselect_t2)",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select count(*) from \n       ( select 1 as FIELD_1 union all select 2 as FIELD_1 ) TABLE_1 \n       where FIELD_1 in ( select 1 as FIELD_1 union all select 1 as FIELD_1 union all select 1 as FIELD_1 )",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from t1 where a=1 and a=2 and a > (select t2.b from t2)",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from t1 where a=1 and a=2 and a > (select t2.b from t2)\nunion all\nselect * from t1 where a=1 and a=2 and a > (select t2.b from t2)",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from t1,\n(select * from t1 where a=1 and a=2 and a > (select t2.b from t2)) foo\nwhere t1.a = foo.a",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select 1 from t1 where a in (select b from t2 where a = 1 limit 1)",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select 1 from t1 where a in (select b from t2 where a = 1 offset 1)",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select i, t from initplan_x\nexcept\nselect g, t from initplan_x,\n                 generate_series(0, (select max(content) from initplan_y)) g\norder by 1",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from initplan_test where row(j, m) = (select j, m from initplan_test where i = 1)",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select id from tbl_25484 where 3 = (select 3 where 3 = (select num))",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select s_name from xsupplier\nwhere s_suppkey in (\n  select g.l_suppkey from xlineitem g\n)",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from nested_in_tbl t1  where tc1 in\n  (select 1 from nested_in_tbl t2 where tc1 in\n    (select 1 from nested_in_tbl t3 where t3.tc2 = t2.tc2))",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM bar_s T1 WHERE c = (SELECT max(c) FROM bar_s T2 WHERE T2.d = T1.d GROUP BY c) AND c < 10",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT bar_s.c from bar_s, foo_s WHERE foo_s.a=2 AND foo_s.b = (SELECT max(b) FROM foo_s WHERE bar_s.c = 9)",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/regress/sql/subselect_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT bar_s.c FROM bar_s, foo_s WHERE foo_s.b = (SELECT max(i) FROM baz_s WHERE bar_s.c = 9) AND foo_s.b = bar_s.d::int4",
  // {"repo_name": "50wu/gpdb", "path": "src/test/regress/sql/uao_compaction/index2.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT COUNT(*) FROM table_index2",
  // {"repo_name": "50wu/gpdb", "path": "src/test/regress/sql/uao_compaction/index2.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT COUNT(*) FROM table_index2 WHERE a > 0",
  // {"repo_name": "jpgerke/bds-files", "path": "chapter-13-out-of-memory/ucsc_example_vars.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT chrom, chromStart, chromEnd, strand, name\nFROM snp137Common\nWHERE name IN(\"rs12255372\", \"rs333\", \"rs1333049\", \"rs4988235\")",
  // {"repo_name": "rvs/gpdb", "path": "src/test/tinc/tincrepo/mpp/gpdb/tests/storage/pg_twophase/commit_create_tests/post_sql/sql/create_table_with_oid_post.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select count(*) from cr_table_with_oid",
  // {"repo_name": "bitblender/drill", "path": "exec/java-exec/src/test/resources/window/aggregate_rows_unbounded_current_baseline.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT\n\tCOUNT(*) OVER(PARTITION BY position_id ORDER BY sub, employee_id) AS `count`\nFROM %s",
  // {"repo_name": "mikl/bookmeister", "path": "server/sql/bookmarks/load-all.sql", "language": "SQL", "license": "isc", "dataset": "codeparrot/github-code"}
  "SELECT * FROM bookmarks.bookmarks\nORDER BY created_at DESC",
  // {"repo_name": "railpage/railpagecore", "path": "db.dist/db.structure.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT location.*, 3956 * 2 * ASIN(SQRT(POWER(SIN((location_lat - location.lat) * pi() / 180 / 2), 2) + COS(location_lat * pi() / 180) * COS(location.lat * pi() / 180) * POWER(SIN((location_lon - location.long) * pi() / 180 / 2), 2))) AS distance \r\nFROM location \r\nWHERE location.long BETWEEN lon1 AND lon2\r\nAND location.lat BETWEEN lat1 AND lat2\r\nHAVING distance < dist\r\nORDER BY distance",
  // {"repo_name": "railpage/railpagecore", "path": "db.dist/db.structure.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT location.lat, location.long INTO location_lat, location_lon FROM location WHERE location.id = location_id LIMIT 1",
  // {"repo_name": "railpage/railpagecore", "path": "db.dist/db.structure.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT flickr_geodata.*, 3956 * 2 * ASIN(SQRT(POWER(SIN((location.lat - flickr_geodata.lat) * pi() / 180 / 2), 2) + COS(location.lat * pi() / 180) * COS(flickr_geodata.lat * pi() / 180) * POWER(SIN((location.long - flickr_geodata.lon) * pi() / 180 / 2), 2))) AS distance \r\nFROM flickr_geodata, location \r\nWHERE location.id = location_id\r\nAND flickr_geodata.lon BETWEEN lon1 AND lon2\r\nAND flickr_geodata.lat BETWEEN lat1 AND lat2\r\nHAVING distance < dist\r\nORDER BY distance",
  // {"repo_name": "railpage/railpagecore", "path": "db.dist/db.structure.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT flickr_geodata.*, 3956 * 2 * ASIN(SQRT(POWER(SIN((lat - flickr_geodata.lat) * pi() / 180 / 2), 2) + COS(lat * pi() / 180) * COS(flickr_geodata.lat * pi() / 180) * POWER(SIN((lon - flickr_geodata.lon) * pi() / 180 / 2), 2))) AS distance \r\nFROM flickr_geodata\r\nWHERE flickr_geodata.lon BETWEEN lon1 AND lon2\r\nAND flickr_geodata.lat BETWEEN lat1 AND lat2\r\nHAVING distance < dist\r\nORDER BY distance",
  // {"repo_name": "SPDEVGUY/VotingInfoWebsite", "path": "VotingInfo/Database/SQL/Alter/06-Procs/00-Generated/Data/Organization/[Data].[Organization_SelectBy_ContentInspectionId].sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\n\t\t\t[OrganizationId],\n\t\t\t[ContentInspectionId],\n\t\t\t[OrganizationName]\n\tFROM\t[Data].[Organization]\n\tWHERE\t[ContentInspectionId] = @ContentInspectionId\n\nEND",
  // {"repo_name": "shlomi-noach/common_schema", "path": "tests/root/duplicate_grantee/02/test.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select \n  count(password) = 2 and count(distinct password) = 1 \nfrom \n  mysql.user \nwhere \n  user in ('cs_test_user', 'cs_test_user_cp') \n  and host='localhost'",
  // {"repo_name": "crst/pgui", "path": "src/pgui/queries/list-storage.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\n  t.schemaname,\n  t.tablename,\n  pg_total_relation_size(quote_ident(t.schemaname) || '.' || quote_ident(t.tablename)) / 1024 / 1024  AS schema_size,\n  nt.num_tuples :: BIGINT\nFROM pg_tables t\nJOIN (\n  SELECT\n   n.nspname AS schemaname,\n   relname   AS tablename,\n   reltuples AS num_tuples\n  FROM pg_class c\n  JOIN pg_namespace n ON c.relnamespace = n.oid\n) nt ON nt.schemaname = t.schemaname AND nt.tablename = t.tablename\nWHERE t.schemaname <> 'information_schema' AND t.schemaname NOT LIKE 'pg_%'\nORDER BY schema_size DESC",
  // {"repo_name": "angelosuarez/PUNTO_VENTA", "path": "src/db/declarar_funciones.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT MIN(date_balance), MAX(date_balance) INTO min, max FROM balance_temp",
  // {"repo_name": "angelosuarez/PUNTO_VENTA", "path": "src/db/declarar_funciones.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * INTO registro FROM log order by id desc limit 1",
  // {"repo_name": "hidayanto56/KKP", "path": "Script/t02beli.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT kdsup FROM m04supl\n\n\n\nSELECT t02_id, tanggal,  \nm03.kd_tabung AS kd_tabung, m03.jenis_tabung AS jenis_tabung, \nm03.harga AS harga, m04.kdsup AS kdsup, \nm04.nmsup AS nmsup, jumlah, t02.keterangan \nFROM kkp.t02beli t02\nINNER JOIN m03tabu m03\nON m03.kd_tabung = t02.kd_tabung\nINNER JOIN m04supl m04\nON m04.kdsup = t02.kdsupl",
  // {"repo_name": "hidayanto56/KKP", "path": "Script/t02beli.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT t02_id, tanggal,  \nm03.kd_tabung AS kd_tabung, m03.jenis_tabung AS jenis_tabung, \nm03.harga AS harga, m04.kdsup AS kdsup, \nm04.nmsup AS nmsup, jumlah, t02.keterangan \nFROM kkp.t02beli t02\nINNER JOIN m03tabu m03\nON m03.kd_tabung = t02.kd_tabung\nINNER JOIN m04supl m04\nON m04.kdsup = t02.kdsupl\nWHERE tanggal = ? AND m03.kd_tabung LIKE ? AND m04.kdsup LIKE ?",
  // {"repo_name": "lintzc/gpdb", "path": "src/test/tinc/tincrepo/dml/functional/sql_partition/mpp21090_drop_lastcol_dml_timestamptz_ao.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM mpp21090_drop_lastcol_dml_timestamptz ORDER BY 1,2,3,4",
  // {"repo_name": "minwoo-jung/pinpoint", "path": "commons/src/test/resources/sample-01.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT CATENTRY_ID\n, PARTNUMBER\n, BUSCHN_ID\n, HEADNAME\n, VENDOR_ID\n, BRAND_KOR_NM\n, BRAND_CD\n, ITNCATENTRYNM\n, DISP_TYPE_CD\n, CATENTTYPE\n, PRIOD_DLVR_YN\n, DLVREXPNSCALCTYPE\n, ADLT_GOODS_YN\n, DCCP_EXCPT_YN\n, CHC_CHILD_YN\n, DEFSORT\n, DEFSORTCNT\n, JOIN_CNT\n, SCORE\n, CO_BUY_ID\n, EVERYCPEXCPTYN\n, CARDCHRGDCEXCPTYN\n, LUMPSUMDCEXCPTYN\n, MULTI_CD\n, GOODEVALYN\n, FC_GOODS_PROM_DC (B.BUSCHN_ID, FC_PARSER(\u2018$\u2019||B.PRICEOFFERPRICE, #, \u2018$\u2019), B.CATENTRY_ID, B.MULTI_CD) FC_DC_VAL\n, CATALOG_ID\n, CATALOG_NM\n, CAT1_CD\n, CAT1_NAME\n, CAT2_CD\n, CAT2_NAME\n, CAT3_CD\n, CAT3_NAME\n, CAT4_CD\n, CAT4_NAME\n, CAT5_CD\n, CAT5_NAME\n, INIT_REGI_DTTM\n, ALLI_MALL_GOODS_CD\n, DUTY_USE_DUR\n, MM_RNTAL_PRC\n, MIN_CNTRB_PFRATE\n, CAT_NAME\n, PRICEOFFERPRICE\n, CARD_BNFT\n, GIFT_BNFT\n, CASE WHEN B.DISP_TYPE_CD = \u2018$\u2019\nTHEN FC_GET_PACK_DLVR_FEE(B.BUSCHN_ID, B.CATENTRY_ID, B.MULTI_CD, ?, FC_PARSER(\u2018$\u2019||B.PRICEOFFERPRICE, #, \u2018$\u2019))\nELSE FC_GET_GOODS_DLVR_FEE(B.BUSCHN_ID, B.CATENTRY_ID, B.MULTI_CD, ?, FC_PARSER(\u2018$\u2019||B.PRICEOFFERPRICE, #, \u2018$\u2019))\nEND DLVR_PRICE\n, \u2018$\u2019 CO_CD\n, \u2018$\u2019 DEVICE_CHN_ID\n, DECODE) AS PRC_SORT\n, \u2018$\u2019 AS ORDER_YN\nFROM (SELECT CATENTRY_ID\n, PARTNUMBER\n, BUSCHN_ID\n, HEADNAME\n, VENDOR_ID\n, BRAND_KOR_NM\n, BRAND_CD\n, ITNCATENTRYNM\n, DISP_TYPE_CD\n, CATENTTYPE\n, PRIOD_DLVR_YN\n, DLVREXPNSCALCTYPE\n, ADLT_GOODS_YN\n, DCCP_EXCPT_YN\n, CHC_CHILD_YN\n, DEFSORT\n, DEFSORTCNT\n, JOIN_CNT\n, NVL AS SCORE\n, CO_BUY_ID\n, EVERYCPEXCPTYN\n, CARDCHRGDCEXCPTYN\n, LUMPSUMDCEXCPTYN\n, MULTI_CD\n, GOODEVALYN\n, CATALOG_ID\n, CATALOG_NM\n, CAT1_CD\n, CAT1_NAME\n, CAT2_CD\n, CAT2_NAME\n, CAT3_CD\n, CAT3_NAME\n, CAT4_CD\n, CAT4_NAME\n, CAT5_CD\n, CAT5_NAME\n, INIT_REGI_DTTM\n, ALLI_MALL_GOODS_CD\n, DUTY_USE_DUR\n, MM_RNTAL_PRC\n, MIN_CNTRB_PFRATE\n, SUBSTR-#) AS CAT_NAME\n, FC_GOODS_PRC_DC (A.BUSCHN_ID, ?, NULL, A.CATENTRY_ID, A.MULTI_CD, NULL, NULL, ?) AS PRICEOFFERPRICE\n, FC_GET_OFFER_CARDEVENT_BATCH (A.BUSCHN_ID, ?, SYSDATE, A.CATENTRY_ID, A.MULTI_CD, ?) AS CARD_BNFT\n, \u2018$\u2019 AS GIFT_BNFT\nFROM (SELECT\n/*+ LEADING USE_NL(XD XM) INDEX */\nXD.CATENTRY_ID\n, XD.PARTNUMBER\n, XD.BUSCHN_ID\n, FC_HEADNM(XD.CATENTRY_ID) AS HEADNAME\n, NVL (XD.VENDOR_ID, #) VENDOR_ID\n, NVL (XD.BRAND_NM, \u2018$\u2019) BRAND_KOR_NM\n, NVL (TO_CHAR (XD.BRAND_CD), \u2018$\u2019) BRAND_CD\n, XD.NAME AS ITNCATENTRYNM\n, NVL (XD.DISP_TYPE_CD, \u2018$\u2019) DISP_TYPE_CD\n, NVL (XD.CATENTTYPE, \u2018$\u2019) CATENTTYPE\n, NVL (XD.PRIOD_DLVR_YN, \u2018$\u2019) PRIOD_DLVR_YN\n, NVL (XD.OUTGO_LOC_CD, \u2018$\u2019) OUTGO_LOC_CD\n, NVL (XD.DLVR_WAY_CD1, \u2018$\u2019) DLVR_WAY_CD1\n, NVL (XD.AGREE_DLINE, \u2018$\u2019) AGREE_DLINE\n, NVL (XD.ADLT_GOODS_YN, \u2018$\u2019) ADLT_GOODS_YN\n, NVL (XD.DCCP_EXCPT_YN, \u2018$\u2019) DCCP_EXCPT_YN\n, NVL (XD.CHC_CHILD_YN, \u2018$\u2019) CHC_CHILD_YN\n, NVL (XD.STYLE_MNG_YN, \u2018$\u2019) STYLE_MNG_YN\n, XD.CLICK_NUM AS DEFSORT\n, XD.RANK_QTY AS DEFSORTCNT\n, XD.JOIN_CNT\n, XD.STAR AS SCORE\n, \u2018$\u2019 AS CO_BUY_ID\n, NVL (XD.EVERYCPEXCPTYN, \u2018$\u2019) AS EVERYCPEXCPTYN\n, NVL (XD.CARDCHRGDCEXCPTYN, \u2018$\u2019) AS CARDCHRGDCEXCPTYN\n, NVL (XD.LUMPSUMDCEXCPTYN, \u2018$\u2019) AS LUMPSUMDCEXCPTYN\n, XD.MULTI_CD\n, NVL (XD.ALLI_MALL_GOODS_CD, \u2018$\u2019) AS ALLI_MALL_GOODS_CD\n, NVL (XD.DUTY_USE_DUR, #) AS DUTY_USE_DUR\n, NVL (XD.MM_RNTAL_PRC, #) AS MM_RNTAL_PRC\n, \u2018$\u2019 AS GOODEVALYN\n, XD.CATALOG_ID\n, XD.CATALOG_NM\n, XD.CAT1_CD\n, XD.CAT1_NAME\n, XD.CAT2_CD\n, XD.CAT2_NAME\n, XD.CAT3_CD\n, XD.CAT3_NAME\n, XD.CAT4_CD\n, XD.CAT4_NAME\n, XD.CAT5_CD\n, XD.CAT5_NAME\n, XD.INIT_REGI_DTTM\n, XM.MIN_CNTRB_PFRATE\n, NVL AS DLVREXPNSCALCTYPE\n, DECODE || DECODE || DECODE || DECODE || XD.CAT5_NAME AS CAT_NAME\nFROM XCATENTRY_DISP XD\n, XMD_MD_PFRATE_MNG_DTL XM\nWHERE XD.MDCD = XM.MD_CD(+)\nAND XD.SALESTAT = \u2018$\u2019\nAND CATENTTYPE NOT IN (\u2018$\u2019, \u2018$\u2019)\nAND XD.CATENTRY_ID IN (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\nAND XD.FLAG <> \u2018$\u2019\nAND XD.BUSCHN_ID = FC_GET_CHNCD (XD.CATENTRY_ID, ?)\nAND DECODE = \u2018$\u2019\n)A )B\nWHERE #=#\nAND # = CASE\nWHEN DISP_TYPE_CD IN (#, #, #, #, #, #, #, #, #)\nTHEN #\nWHEN FC_PARSER(\u2018$\u2019||B.PRICEOFFERPRICE, #, \u2018$\u2019) <= #\nTHEN #\nELSE #\nEND\nORDER BY DEFSORTCNT ASC, INIT_REGI_DTTM DESC",
  // {"repo_name": "shaotao/Leetcode", "path": "coding/rising_temperature/rising_temperature.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select Id from Weather as a where Temperature > (select Temperature from Weather as b where a.Date=b.Date+1)",
  // {"repo_name": "mattwright324/youtube-comment-suite", "path": "src/main/resources/io/mattw/youtube/commentsuite/db/sql/dql_get_video_ids_by_group.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT video_id FROM videos\nWHERE video_id IN (\n    SELECT video_id FROM gitem_video\n    JOIN group_gitem USING (gitem_id)\n    WHERE group_id = ?\n) ORDER BY publish_date DESC",
  // {"repo_name": "hemmerling/sql-stanford2013", "path": "src/16_olap/OLAPqueries.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select itemID, sum(price)\nfrom Sales\ngroup by itemID",
  // {"repo_name": "hemmerling/sql-stanford2013", "path": "src/16_olap/OLAPqueries.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select sum(p)\nfrom Cube C, Store S, Item I\nwhere C.storeID = S.storeID and C.itemID = I.itemID\nand state = 'CA' and color = 'blue' and custID is null",
  // {"repo_name": "hemmerling/sql-stanford2013", "path": "src/16_olap/OLAPqueries.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select sum(p)\nfrom Cube C, Store S, Item I\nwhere C.storeID = S.storeID and C.itemID = I.itemID\nand state = 'CA' and color = 'blue' and custID is not null",
  // {"repo_name": "hemmerling/sql-stanford2013", "path": "src/16_olap/OLAPqueries.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select sum(price)\nfrom Sales F, Store S, Item I\nwhere F.storeID = S.storeID and F.itemID = I.itemID\nand state = 'CA' and color = 'blue' and F.custID is not null",
  // {"repo_name": "hemmerling/sql-stanford2013", "path": "src/16_olap/OLAPqueries.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select state, county, city, sum(price)\nfrom Sales F, Store S\nwhere F.storeID = S.storeID\ngroup by state, county, city with rollup",
  // {"repo_name": "z16385947/sql-parser", "path": "src/test/resources/com/foundationdb/sql/parser/union-all-1.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 'foo' FROM t1\nUNION ALL\nSELECT 'bar' FROM t2",
  // {"repo_name": "hornn/interviews", "path": "src/test/regress/sql/bkuprestore_advance_check.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from v1",
  // {"repo_name": "hornn/interviews", "path": "src/test/regress/sql/bkuprestore_advance_check.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from t1",
  // {"repo_name": "hornn/interviews", "path": "src/test/regress/sql/bkuprestore_advance_check.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from oids",
  // {"repo_name": "hornn/interviews", "path": "src/test/regress/sql/bkuprestore_advance_check.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select oid from oids where 1 = 0",
  // {"repo_name": "hornn/interviews", "path": "src/test/regress/sql/bkuprestore_advance_check.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from idxt",
  // {"repo_name": "hornn/interviews", "path": "src/test/regress/sql/bkuprestore_advance_check.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select C3ToBit('OK')",
  // {"repo_name": "hornn/interviews", "path": "src/test/regress/sql/bkuprestore_advance_check.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select C3ToBit(NULL)",
  // {"repo_name": "hornn/interviews", "path": "src/test/regress/sql/bkuprestore_advance_check.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select 'ABC'::char(3)::bit(3)",
  // {"repo_name": "hornn/interviews", "path": "src/test/regress/sql/bkuprestore_advance_check.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select incr(100)",
  // {"repo_name": "hornn/interviews", "path": "src/test/regress/sql/bkuprestore_advance_check.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select decr(100)",
  // {"repo_name": "hornn/interviews", "path": "src/test/regress/sql/bkuprestore_advance_check.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from tt1",
  // {"repo_name": "hornn/interviews", "path": "src/test/regress/sql/bkuprestore_advance_check.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from tt2",
  // {"repo_name": "hornn/interviews", "path": "src/test/regress/sql/bkuprestore_advance_check.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from rt",
  // {"repo_name": "hornn/interviews", "path": "src/test/regress/sql/bkuprestore_advance_check.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from rt",
  // {"repo_name": "hornn/interviews", "path": "src/test/regress/sql/bkuprestore_advance_check.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select nextval('seq')",
  // {"repo_name": "hornn/interviews", "path": "src/test/regress/sql/bkuprestore_advance_check.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select nextval('seq')",
  // {"repo_name": "hornn/interviews", "path": "src/test/regress/sql/bkuprestore_advance_check.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from t2",
  // {"repo_name": "hornn/interviews", "path": "src/test/regress/sql/bkuprestore_advance_check.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from t3",
  // {"repo_name": "hornn/interviews", "path": "src/test/regress/sql/bkuprestore_advance_check.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from t4",
  // {"repo_name": "hornn/interviews", "path": "src/test/regress/sql/bkuprestore_advance_check.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from t5",
  // {"repo_name": "hornn/interviews", "path": "src/test/regress/sql/bkuprestore_advance_check.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select relpages, reltuples from pg_class where relname = 't3'",
  // {"repo_name": "LiveOak/nlsy-links-determination-2017", "path": "data-public/metadata/database/generate-db-97.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT Max([AlgorithmVersion]) as MaxVersion\n  FROM Archive.[tblRelatedValuesArchive]\n\nEND\nGO\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n\nCREATE PROCEDURE [Process].[prcResponseRetrieveSubset]\nAS\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "sashker/yeti-web", "path": "sql/main/57_58.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT into v_customer_auth ca.*\n    from class4.customers_auth ca\n        JOIN public.contractors c ON c.id=ca.customer_id\n        WHERE ca.enabled AND\n            ca.ip>>=v_remote_ip AND\n            prefix_range(ca.dst_prefix)@>prefix_range(v_ret.dst_prefix_in) AND\n            prefix_range(ca.src_prefix)@>prefix_range(v_ret.src_prefix_in) AND\n            (ca.pop_id=i_pop_id or ca.pop_id is null) and\n            COALESCE(ca.x_yeti_auth,'')=v_x_yeti_auth AND\n            COALESCE(nullif(ca.uri_domain,'')=v_uri_domain,true) AND\n            c.enabled\n            and c.customer\n        ORDER BY masklen(ca.ip) DESC, length(ca.dst_prefix) DESC, length(ca.src_prefix) DESC\n        LIMIT 1",
  // {"repo_name": "sashker/yeti-web", "path": "sql/main/57_58.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT INTO STRICT v_c_acc * FROM billing.accounts  WHERE id=v_customer_auth.account_id",
  // {"repo_name": "sashker/yeti-web", "path": "sql/main/57_58.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT into v_orig_gw * from class4.gateways WHERE id=v_customer_auth.gateway_id",
  // {"repo_name": "sashker/yeti-web", "path": "sql/main/57_58.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT INTO v_rp * from class4.routing_plans WHERE id=v_customer_auth.routing_plan_id",
  // {"repo_name": "sashker/yeti-web", "path": "sql/main/57_58.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT into v_destination d.*/*,switch.tracelog(d.*)*/ from class4.destinations d\n    WHERE\n        prefix_range(prefix)@>prefix_range(v_routing_key)\n        AND rateplan_id=v_customer_auth.rateplan_id\n        AND enabled\n        AND valid_from <= v_now\n        AND valid_till >= v_now\n    ORDER BY length(prefix) DESC limit 1",
  // {"repo_name": "sashker/yeti-web", "path": "sql/main/57_58.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select into v_rateplan * from class4.rateplans where id=v_customer_auth.rateplan_id",
  // {"repo_name": "sashker/yeti-web", "path": "sql/main/57_58.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * from switch8.preprocess_all()",
  // {"repo_name": "giggals/Software-University", "path": "Basic CRUD - Exercise/CRUD/19. Find First 10 Started Projects.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT TOP(10) *\nFROM Projects\nORDER BY StartDate ,\n          [Name]",
  // {"repo_name": "madgik/exareme", "path": "Exareme-Docker/src/mip-algorithms/HISTOGRAMS/2/local.template.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select * from defaultDB.partialhistogramresults",
  // {"repo_name": "OneHourGameJam/OneHourGameJam", "path": "SQL/versions/16_rekeyEntriesToUserIdAndAddUsersForOldEntries.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT MAX(user_id) AS max_user_id into @maxUserId FROM user",
  // {"repo_name": "LucidDB/luciddb", "path": "luciddb/test/sql/conv_types/conv_numeric/bigint_load.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from datatype_target",
  // {"repo_name": "maxim-kuzmin/Makc2017", "path": "src/Makc2017.Database/dbo/DummyTree/DummyTree_Proc_GetList.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select \n\t\t@PageNumFrom = [From], \n\t\t@PageNumTo = [To] \n\tfrom \n\t\t[core].[Func_GetPageNumberRage](@PageNumber, @PageSize)",
  // {"repo_name": "maxim-kuzmin/Makc2017", "path": "src/Makc2017.Database/dbo/DummyTree/DummyTree_Proc_GetList.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select \n\t\tABS([Val]) --TotalCount: \u0431\u0435\u0440\u0451\u043c \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 [Val], \u0447\u0442\u043e\u0431\u044b \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0435\u0433\u043e \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0447\u0438\u0441\u043b\u043e\u043c.\n\tfrom \n\t\t@Cache \n\twhere \n\t\t[Num] = 0",
  // {"repo_name": "maxim-kuzmin/Makc2017", "path": "src/Makc2017.Database/dbo/DummyTree/DummyTree_Proc_GetList.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select\t\t\n\t\tt.*,\n\t\td.*\n\tfrom\n\t\t@Cache h\n\t\tinner join [dbo].[DummyTree_Func_GetData](@Axis, @TreeId, @TreeLevel, @Id) t on t.[Id] = h.[Val]\n\t\tinner join [dbo].[Dummy_Func_GetData](@Id) d on d.[Id] = t.[DummyId]\n\twhere\n\t\th.[Num] > 0\n\torder by\n\t\th.[Num]",
  // {"repo_name": "George221b/SoftUni-Tasks", "path": "DatabasesBasicsMSSQL-Server/Exam-24Apr2017/ExamWashingMachineService.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT @totalCostOfParts = SUM(op.Quantity * p.Price)\n\t  FROM Jobs AS j\n\t INNER JOIN Orders AS o\n\t    ON o.JobId = j.JobId\n\t INNER JOIN OrderParts AS op\n\t    ON op.OrderId = o.OrderId\n\t INNER JOIN Parts AS p\n\t    ON p.PartId = op.PartId\n\t WHERE j.JobId = @JobId\n\n\tIF (@totalCostOfParts IS NULL)   \n\t\tSET @totalCostOfParts = 0",
  // {"repo_name": "mediawiki-utilities/python-mwsessions", "path": "sql/archives.enwiki_2015-08.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT \n  ar_rev_id as id,\n  ar_page_id as page_id,\n  ar_user as user_id,\n  ar_user_text as user_text,\n  ar_timestamp as timestamp,\n  ar_sha1 as sha1,\n  ar_len as len,\n  ar_deleted as deleted,\n  True as archived\nFROM archive\nWHERE ar_timestamp BETWEEN \"20131104144204\" AND \"20150801\"\nORDER BY ar_timestamp ASC, ar_rev_id ASC",
  // {"repo_name": "halfak/Monthly-Active-Editors-Model", "path": "sql/joined_editor_months.en.mobile.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\n    em.*,\n    lui.attached_method\nFROM editor_month em\nINNER JOIN local_user_info lui USING (wiki, user_id)\nLEFT JOIN log.ServerSideAccountCreation_5487345 ssac ON\n    em.wiki = ssac.wiki AND\n    event_userId = user_id\nWHERE \n    em.wiki IN (\"enwiki\") AND \n    event_displayMobile = 1\nORDER BY em.wiki, month",
  // {"repo_name": "mldbai/mldb", "path": "drafts/rec/btr/query_purchases.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT\n    oh.uid, oh.order_date, ol.event_id, ol.sku\n    -- debug\n    --  oh.order_status, ol.line_type, ol.status\n    --  oh.order_id, ol.value_cad, oh.total_order_value_cad\nFROM order_lines as ol\n    JOIN order_headers as oh ON ol.order_id = oh.order_id\n    JOIN users_info as ui ON (ui.uid = oh.uid)\nWHERE\n    -- canada and recent\n    ui.country = 'CA'\n    AND oh.order_date > '2012-01-01'\n    -- this is what makes it a purchase for our purposes\n    AND oh.order_status = 'SHIPPED'\n    AND ol.line_type = 'SKU'\n    AND ol.status = 40\n--  ORDER BY oh.order_id DESC\n--  LIMIT 10000",
  // {"repo_name": "ctsoftvn/cts-w-1505-01", "path": "Src/CTS.W.150501/CTS.W.150501.Models/Resources/Dao/Admin/MasterCategoriesDao_GetPagerData.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT\r\n    mc.LocaleCd,\r\n\tcd1.CodeName AS LocaleName,\r\n\tmc.CategoryCd,\r\n\tmc.CategoryName,\r\n\tmc.SearchName,\r\n\tmc.LinkName,\r\n\tmc.SortKey,\r\n\tmc.VersionNo,\r\n\tmc.DeleteFlag,\r\n\tcd2.CodeName AS DeleteFlagName,\r\n\tse.MetaTitle,\r\n\tse.MetaDesc,\r\n\tse.MetaKeys\r\nFROM [MACategories] mc\r\n\tLEFT OUTER JOIN [MACodes] cd1\r\n\t\tON (cd1.LocaleCd = @ContextLocale\r\n\t\t\tAND cd1.CodeGroupCd = @GrpCdLocales\r\n\t\t\tAND cd1.CodeCd = mc.LocaleCd)\r\n\tLEFT OUTER JOIN [MACodes] cd2\r\n\t\tON (cd2.LocaleCd = @ContextLocale\r\n\t\t\tAND cd2.CodeGroupCd = @GrpCdDeleteFlag\r\n\t\t\tAND CAST(cd2.CodeCd AS BIT) = mc.DeleteFlag)\r\n\tLEFT OUTER JOIN [APSEOInfos] se\r\n\t\tON (se.LocaleCd = mc.LocaleCd\r\n\t\t\tAND se.SEOCd = mc.CategoryCd\r\n\t\t\tAND se.GroupCd = @GrpSeoMaCategories)\r\nWHERE\r\n\t(mc.LocaleCd = @LocaleCd OR @LocaleCd = '')\r\n\tAND (mc.CategoryName LIKE '%' + @CategoryName + '%'\r\n\t\tOR mc.SearchName LIKE '%' + @CategoryName + '%'\r\n\t\tOR @CategoryName = '')\r\n\tAND (mc.LinkName LIKE '%' + @LinkName + '%' OR @LinkName = '')\r\n\tAND (mc.DeleteFlag = @DeleteFlag OR @DeleteFlag IS NULL)\r\nORDER BY\r\n\t\\*OrderByClause*\\,\r\n\tmc.SortKey ASC,\r\n\tcd1.SortKey ASC",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/tkt3824-1.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM t3",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/tkt3824-1.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT rowid, x FROM t4 ORDER BY rowid",
  // {"repo_name": "dongjoon-hyun/benchmark", "path": "tpc-ds/tajo/68.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select  c_last_name\n       ,c_first_name\n       ,ca_city\n       ,bought_city\n       ,ss_ticket_number\n       ,extended_price\n       ,extended_tax\n       ,list_price\n from (select ss_ticket_number\n             ,ss_customer_sk\n             ,ca_city bought_city\n             ,sum(ss_ext_sales_price) extended_price \n             ,sum(ss_ext_list_price) list_price\n             ,sum(ss_ext_tax) extended_tax \n       from store_sales\n           ,date_dim\n           ,store\n           ,household_demographics\n           ,customer_address \n       where store_sales.ss_sold_date_sk = date_dim.d_date_sk\n         and store_sales.ss_store_sk = store.s_store_sk  \n        and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk\n        and store_sales.ss_addr_sk = customer_address.ca_address_sk\n        and date_dim.d_dom between 1 and 2 \n        and (household_demographics.hd_dep_count = 5 or\n             household_demographics.hd_vehicle_count= 3)\n        and date_dim.d_year in (1999,1999+1,1999+2)\n        and store.s_city in ('Midway','Fairview')\n       group by ss_ticket_number\n               ,ss_customer_sk\n               ,ss_addr_sk,ca_city) dn\n      ,customer\n      ,customer_address current_addr\n where ss_customer_sk = c_customer_sk\n   and customer.c_current_addr_sk = current_addr.ca_address_sk\n   and current_addr.ca_city <> bought_city\n order by c_last_name\n         ,ss_ticket_number\n limit 100",
  // {"repo_name": "avaje-common/avaje-classpath-scanner", "path": "src/test/resources/migration/dbsupport/mysql/sql/delimiter/V1__Delimiter.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select 1",
  // {"repo_name": "avaje-common/avaje-classpath-scanner", "path": "src/test/resources/migration/dbsupport/mysql/sql/delimiter/V1__Delimiter.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select 2",
  // {"repo_name": "octonion/basketball-public", "path": "ncaa_sr/sos/test_fixed.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select pl.parameter,pl.type,pl.level,bf.estimate\nfrom ncaa_sr._parameter_levels pl\nleft outer join ncaa_sr._basic_factors bf\n  on (bf.factor,bf.type)=(pl.parameter||pl.level,pl.type)\nwhere pl.type='fixed'\norder by parameter,level",
  // {"repo_name": "eknuth/pdxhash", "path": "data/query.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select substring(trim(ST_Geohash(wkb_geometry)) from 0 for 5) as pdx_hash, \n\t\tcount(*) as address_point_count \n\tfrom address_data group by pdx_hash order by address_point_count",
  // {"repo_name": "patuser/LetterCodes", "path": "invoice LC Official Disb mit splitrechnung.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT\n\t@intime = CONVERT(VARCHAR(8), invocie_date, 108) \nFROM\n\tinvoice_header \nWHERE\n\tINVOICE_ID = @IN",
  // {"repo_name": "patuser/LetterCodes", "path": "invoice LC Official Disb mit splitrechnung.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT\n\t@CASE = CASE_ID \nFROM\n\tinvoice_header \nWHERE\n\tINVOICE_ID = @IN",
  // {"repo_name": "patuser/LetterCodes", "path": "invoice LC Official Disb mit splitrechnung.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT\n\tTop 1 @OTHERS = invoice_id \nFROM\n\tINVOICE_HEADER \n\t\tJOIN BUDGET_LINE \n\t\tON invoice_header.INVOICE_ID = Budget_line.B_L_INVOICE_NUMBER \nWHERE\n\tinvoice_header.CASE_ID = @case AND\n\tCONVERT(VARCHAR(8), invocie_date, 108) = @intime",
  // {"repo_name": "patuser/LetterCodes", "path": "invoice LC Official Disb mit splitrechnung.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT\n\tisnull(CAST(WORK_CODE_TEXT.WORK_CODE_TEXT AS VARCHAR(MAX)),'')+ isnull(CAST(dbo.fGetMoneyformat(((BUDGET_LINE.B_L_AMOUNT)*C.CASE_ROLE_PERCENTS/100),\n\t'DE') AS VARCHAR(11)),\n\t'') \nFROM\n\tTIME_REGISTRATION \n\t\tRIGHT OUTER JOIN BUDGET_LINE \n\t\tON TIME_REGISTRATION.B_L_SEQ_NUMBER = BUDGET_LINE.B_L_SEQ_NUMBER AND\n\t\tTIME_REGISTRATION.B_L_CASE_ID = BUDGET_LINE.CASE_ID \n\t\tJOIN INVOICE_HEADER ih \n\t\tON @IN = ih.INVOICE_ID \n\t\tJOIN casting C \n\t\tON C.CASE_ID = ih.CASE_ID AND\n\t\tC.ACTOR_ID = ih.ACTOR_ID,\n\t\tWORK_CODE,\n\t\tWORK_CODE_TEXT \nWHERE\n\t( BUDGET_LINE.WORK_CODE_ID = WORK_CODE.WORK_CODE_ID ) AND\n\t( WORK_CODE.WORK_CODE_ID = WORK_CODE_TEXT.WORK_CODE_ID ) AND\n\t(( BUDGET_LINE.B_L_INVOICE_NUMBER = @OTHERS ) AND\n\t( WORK_CODE_TEXT.LANGUAGE_ID = @LA ) AND\n\t( WORK_CODE.WORK_CODE_TYPE IN ('O',\n\t'B') ) AND\n\t( ((BUDGET_LINE.B_L_AMOUNT)*C.CASE_ROLE_PERCENTS/100) <> 0 ) AND\n\t( BUDGET_LINE.B_L_AMOUNT IS NOT NULL ) )",
  // {"repo_name": "ontop/ontop-examples", "path": "2019-journal-cost/replication/wisconsin/unfoldings/mssql/jucq/jucq-35.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select *\nfrom\n(select qview1.unique2 as t0v0,  qview1.evenonepercent as t1v0,  qview1.stringu1 as t1v1,  qview1.string4 as t1v2,  qview2.evenonepercent as t2v0,  qview2.stringu1 as t2v1,  qview2.string4\nas t2v2 from\nt13_1m qview1,\nt14_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu1 is not null and\nqview1.string4 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu1 is not null and\nqview2.string4 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview1.evenonepercent as t1v0,  qview1.stringu1 as t1v1,  qview1.string4 as t1v2,  qview2.evenonepercent as t2v0,  qview2.stringu1 as t2v1,  qview2.stringu2\nas t2v2 from\nt13_1m qview1,\nt11_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu1 is not null and\nqview1.string4 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview1.evenonepercent as t1v0,  qview1.stringu1 as t1v1,  qview1.string4 as t1v2,  qview2.evenonepercent as t2v0,  qview2.stringu1 as t2v1,  qview2.stringu2\nas t2v2 from\nt13_1m qview1,\nt8_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu1 is not null and\nqview1.string4 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview1.evenonepercent as t1v0,  qview1.stringu1 as t1v1,  qview1.string4 as t1v2,  qview2.evenonepercent as t2v0,  qview2.stringu1 as t2v1,  qview2.stringu2\nas t2v2 from\nt13_1m qview1,\nt5_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu1 is not null and\nqview1.string4 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview1.evenonepercent as t1v0,  qview1.stringu1 as t1v1,  qview1.string4 as t1v2,  qview2.evenonepercent as t2v0,  qview2.stringu1 as t2v1,  qview2.stringu2\nas t2v2 from\nt13_1m qview1,\nt2_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu1 is not null and\nqview1.string4 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview1.evenonepercent as t1v0,  qview1.stringu1 as t1v1,  qview1.stringu2 as t1v2,  qview2.evenonepercent as t2v0,  qview2.stringu1 as t2v1,  qview2.string4\nas t2v2 from\nt10_1m qview1,\nt14_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu1 is not null and\nqview2.string4 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview1.evenonepercent as t1v0,  qview1.stringu1 as t1v1,  qview1.stringu2 as t1v2,  qview2.evenonepercent as t2v0,  qview2.stringu1 as t2v1,  qview2.stringu2\nas t2v2 from\nt10_1m qview1,\nt11_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview1.evenonepercent as t1v0,  qview1.stringu1 as t1v1,  qview1.stringu2 as t1v2,  qview2.evenonepercent as t2v0,  qview2.stringu1 as t2v1,  qview2.stringu2\nas t2v2 from\nt10_1m qview1,\nt8_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview1.evenonepercent as t1v0,  qview1.stringu1 as t1v1,  qview1.stringu2 as t1v2,  qview2.evenonepercent as t2v0,  qview2.stringu1 as t2v1,  qview2.stringu2\nas t2v2 from\nt10_1m qview1,\nt5_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview1.evenonepercent as t1v0,  qview1.stringu1 as t1v1,  qview1.stringu2 as t1v2,  qview2.evenonepercent as t2v0,  qview2.stringu1 as t2v1,  qview2.stringu2\nas t2v2 from\nt10_1m qview1,\nt2_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview1.evenonepercent as t1v0,  qview1.stringu1 as t1v1,  qview1.stringu2 as t1v2,  qview2.evenonepercent as t2v0,  qview2.stringu1 as t2v1,  qview2.string4\nas t2v2 from\nt7_1m qview1,\nt14_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu1 is not null and\nqview2.string4 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview1.evenonepercent as t1v0,  qview1.stringu1 as t1v1,  qview1.stringu2 as t1v2,  qview2.evenonepercent as t2v0,  qview2.stringu1 as t2v1,  qview2.stringu2\nas t2v2 from\nt7_1m qview1,\nt11_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview1.evenonepercent as t1v0,  qview1.stringu1 as t1v1,  qview1.stringu2 as t1v2,  qview2.evenonepercent as t2v0,  qview2.stringu1 as t2v1,  qview2.stringu2\nas t2v2 from\nt7_1m qview1,\nt8_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview1.evenonepercent as t1v0,  qview1.stringu1 as t1v1,  qview1.stringu2 as t1v2,  qview2.evenonepercent as t2v0,  qview2.stringu1 as t2v1,  qview2.stringu2\nas t2v2 from\nt7_1m qview1,\nt5_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview1.evenonepercent as t1v0,  qview1.stringu1 as t1v1,  qview1.stringu2 as t1v2,  qview2.evenonepercent as t2v0,  qview2.stringu1 as t2v1,  qview2.stringu2\nas t2v2 from\nt7_1m qview1,\nt2_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview1.evenonepercent as t1v0,  qview1.stringu1 as t1v1,  qview1.stringu2 as t1v2,  qview2.evenonepercent as t2v0,  qview2.stringu1 as t2v1,  qview2.string4\nas t2v2 from\nt4_1m qview1,\nt14_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu1 is not null and\nqview2.string4 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview1.evenonepercent as t1v0,  qview1.stringu1 as t1v1,  qview1.stringu2 as t1v2,  qview2.evenonepercent as t2v0,  qview2.stringu1 as t2v1,  qview2.stringu2\nas t2v2 from\nt4_1m qview1,\nt11_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview1.evenonepercent as t1v0,  qview1.stringu1 as t1v1,  qview1.stringu2 as t1v2,  qview2.evenonepercent as t2v0,  qview2.stringu1 as t2v1,  qview2.stringu2\nas t2v2 from\nt4_1m qview1,\nt8_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview1.evenonepercent as t1v0,  qview1.stringu1 as t1v1,  qview1.stringu2 as t1v2,  qview2.evenonepercent as t2v0,  qview2.stringu1 as t2v1,  qview2.stringu2\nas t2v2 from\nt4_1m qview1,\nt5_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview1.evenonepercent as t1v0,  qview1.stringu1 as t1v1,  qview1.stringu2 as t1v2,  qview2.evenonepercent as t2v0,  qview2.stringu1 as t2v1,  qview2.stringu2\nas t2v2 from\nt4_1m qview1,\nt2_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview1.evenonepercent as t1v0,  qview1.stringu1 as t1v1,  qview1.stringu2 as t1v2,  qview2.evenonepercent as t2v0,  qview2.stringu1 as t2v1,  qview2.string4\nas t2v2 from\nt1_1m qview1,\nt14_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu1 is not null and\nqview2.string4 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview1.evenonepercent as t1v0,  qview1.stringu1 as t1v1,  qview1.stringu2 as t1v2,  qview2.evenonepercent as t2v0,  qview2.stringu1 as t2v1,  qview2.stringu2\nas t2v2 from\nt1_1m qview1,\nt11_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview1.evenonepercent as t1v0,  qview1.stringu1 as t1v1,  qview1.stringu2 as t1v2,  qview2.evenonepercent as t2v0,  qview2.stringu1 as t2v1,  qview2.stringu2\nas t2v2 from\nt1_1m qview1,\nt8_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview1.evenonepercent as t1v0,  qview1.stringu1 as t1v1,  qview1.stringu2 as t1v2,  qview2.evenonepercent as t2v0,  qview2.stringu1 as t2v1,  qview2.stringu2\nas t2v2 from\nt1_1m qview1,\nt5_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview1.evenonepercent as t1v0,  qview1.stringu1 as t1v1,  qview1.stringu2 as t1v2,  qview2.evenonepercent as t2v0,  qview2.stringu1 as t2v1,  qview2.stringu2\nas t2v2 from\nt1_1m qview1,\nt2_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n) f_1, (select qview1.unique2 as t0v0,  qview2.evenonepercent as t3v0,  qview2.stringu1 as t3v1,  qview2.string4\nas t3v2 from\nt13_1m qview1,\nt15_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu1 is not null and\nqview1.string4 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu1 is not null and\nqview2.string4 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview2.evenonepercent as t3v0,  qview2.stringu1 as t3v1,  qview2.stringu2\nas t3v2 from\nt13_1m qview1,\nt12_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu1 is not null and\nqview1.string4 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview2.evenonepercent as t3v0,  qview2.stringu1 as t3v1,  qview2.stringu2\nas t3v2 from\nt13_1m qview1,\nt9_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu1 is not null and\nqview1.string4 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview2.evenonepercent as t3v0,  qview2.stringu1 as t3v1,  qview2.stringu2\nas t3v2 from\nt13_1m qview1,\nt6_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu1 is not null and\nqview1.string4 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview2.evenonepercent as t3v0,  qview2.stringu1 as t3v1,  qview2.stringu2\nas t3v2 from\nt13_1m qview1,\nt3_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu1 is not null and\nqview1.string4 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview2.evenonepercent as t3v0,  qview2.stringu1 as t3v1,  qview2.string4\nas t3v2 from\nt10_1m qview1,\nt15_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu1 is not null and\nqview2.string4 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview2.evenonepercent as t3v0,  qview2.stringu1 as t3v1,  qview2.stringu2\nas t3v2 from\nt10_1m qview1,\nt12_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview2.evenonepercent as t3v0,  qview2.stringu1 as t3v1,  qview2.stringu2\nas t3v2 from\nt10_1m qview1,\nt9_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview2.evenonepercent as t3v0,  qview2.stringu1 as t3v1,  qview2.stringu2\nas t3v2 from\nt10_1m qview1,\nt6_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview2.evenonepercent as t3v0,  qview2.stringu1 as t3v1,  qview2.stringu2\nas t3v2 from\nt10_1m qview1,\nt3_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview2.evenonepercent as t3v0,  qview2.stringu1 as t3v1,  qview2.string4\nas t3v2 from\nt7_1m qview1,\nt15_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu1 is not null and\nqview2.string4 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview2.evenonepercent as t3v0,  qview2.stringu1 as t3v1,  qview2.stringu2\nas t3v2 from\nt7_1m qview1,\nt12_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview2.evenonepercent as t3v0,  qview2.stringu1 as t3v1,  qview2.stringu2\nas t3v2 from\nt7_1m qview1,\nt9_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview2.evenonepercent as t3v0,  qview2.stringu1 as t3v1,  qview2.stringu2\nas t3v2 from\nt7_1m qview1,\nt6_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview2.evenonepercent as t3v0,  qview2.stringu1 as t3v1,  qview2.stringu2\nas t3v2 from\nt7_1m qview1,\nt3_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview2.evenonepercent as t3v0,  qview2.stringu1 as t3v1,  qview2.string4\nas t3v2 from\nt4_1m qview1,\nt15_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu1 is not null and\nqview2.string4 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview2.evenonepercent as t3v0,  qview2.stringu1 as t3v1,  qview2.stringu2\nas t3v2 from\nt4_1m qview1,\nt12_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview2.evenonepercent as t3v0,  qview2.stringu1 as t3v1,  qview2.stringu2\nas t3v2 from\nt4_1m qview1,\nt9_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview2.evenonepercent as t3v0,  qview2.stringu1 as t3v1,  qview2.stringu2\nas t3v2 from\nt4_1m qview1,\nt6_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview2.evenonepercent as t3v0,  qview2.stringu1 as t3v1,  qview2.stringu2\nas t3v2 from\nt4_1m qview1,\nt3_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview2.evenonepercent as t3v0,  qview2.stringu1 as t3v1,  qview2.string4\nas t3v2 from\nt1_1m qview1,\nt15_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu1 is not null and\nqview2.string4 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview2.evenonepercent as t3v0,  qview2.stringu1 as t3v1,  qview2.stringu2\nas t3v2 from\nt1_1m qview1,\nt12_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview2.evenonepercent as t3v0,  qview2.stringu1 as t3v1,  qview2.stringu2\nas t3v2 from\nt1_1m qview1,\nt9_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview2.evenonepercent as t3v0,  qview2.stringu1 as t3v1,  qview2.stringu2\nas t3v2 from\nt1_1m qview1,\nt6_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n\nunion\nselect qview1.unique2 as t0v0,  qview2.evenonepercent as t3v0,  qview2.stringu1 as t3v1,  qview2.stringu2\nas t3v2 from\nt1_1m qview1,\nt3_1m qview2\nwhere\n((qview1.onepercent >= 0) and (qview1.onepercent < 20)) and\nqview1.evenonepercent is not null and\nqview1.stringu2 is not null and\nqview1.stringu1 is not null and\nqview1.unique2 is not null and\n(qview1.unique2 = qview2.unique2) and\n((qview2.onepercent >= 10) and (qview2.onepercent < 30)) and\nqview2.evenonepercent is not null and\nqview2.stringu2 is not null and\nqview2.stringu1 is not null\n) f_2 where f_1.t0v0=f_2.t0v0",
  // {"repo_name": "leeevans/WebAPI", "path": "src/main/resources/resources/cohortdefinition/sql/additionalCriteria.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT @indexId as index_id, p.event_id\nFROM @eventTable P\nLEFT JOIN\n(\n  @criteriaQuery\n) A on A.person_id = P.person_id and @windowCriteria\nGROUP BY p.event_id\n@occurrenceCriteria",
  // {"repo_name": "kubeflow/community", "path": "devstats/config/metrics/shared/countries_tags.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select\n  distinct country_name\nfrom\n  gha_actors\nwhere\n  country_name is not null\n  and country_name != ''",
  // {"repo_name": "octonion/baseball-public", "path": "naia/sos/missing.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select distinct team_name,team_id\nfrom naia.results\nwhere team_id in (30051,24317,30111,30119,30039,791,30050,30104)",
  // {"repo_name": "CraigHarris/gpdb", "path": "src/test/tinc/tincrepo/mpp/gpdb/tests/catalog/schema_topology/sqls/ddls/joins/dmloverjoin1.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT a,b,c FROM update_test ORDER BY a,b",
  // {"repo_name": "CraigHarris/gpdb", "path": "src/test/tinc/tincrepo/mpp/gpdb/tests/catalog/schema_topology/sqls/ddls/joins/dmloverjoin1.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT a,b,c FROM update_test ORDER BY a,c",
  // {"repo_name": "CraigHarris/gpdb", "path": "src/test/tinc/tincrepo/mpp/gpdb/tests/catalog/schema_topology/sqls/ddls/joins/dmloverjoin1.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * from t1",
  // {"repo_name": "yeeunshim/tajo_test", "path": "tajo-core/src/test/resources/queries/TestCaseByCases/testTAJO418Case.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT\n  l_returnflag,\n  l_linestatus\n\nFROM (\n  SELECT\n    *\n  FROM\n    lineitem\n  WHERE\n    l_returnflag = 'N'\n\n  UNION ALL\n\n  SELECT\n    *\n  FROM\n    lineitem\n  WHERE\n    l_returnflag = 'R'\n) T\n\nGROUP BY\n  l_returnflag,\n\tl_linestatus\n\nORDER BY\n  l_returnflag,\n\tl_linestatus",
  // {"repo_name": "CraigHarris/gpdb", "path": "src/test/tinc/tincrepo/mpp/gpdb/tests/storage/uao/uaocs_ddl/sql/alter_ao_table_owner.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 1 AS VisimapPresent  FROM pg_appendonly WHERE visimapidxid is not NULL AND visimapidxid is not NULL AND relid=(SELECT oid FROM pg_class WHERE relname='sto_alt_uao4')",
  // {"repo_name": "CraigHarris/gpdb", "path": "src/test/tinc/tincrepo/mpp/gpdb/tests/storage/uao/uaocs_ddl/sql/alter_ao_table_owner.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select 1 as owner_changed from pg_class where relname='sto_alt_uao4' and relowner = (select oid from pg_roles where rolname = 'uao_user2')",
  // {"repo_name": "CraigHarris/gpdb", "path": "src/test/tinc/tincrepo/mpp/gpdb/tests/storage/uao/uaocs_ddl/sql/alter_ao_table_owner.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from sto_alt_uao4 order by 1",
  // {"repo_name": "CraigHarris/gpdb", "path": "src/test/tinc/tincrepo/mpp/gpdb/tests/storage/uao/uaocs_ddl/sql/alter_ao_table_owner.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select count(*) AS only_visi_tups from sto_alt_uao4",
  // {"repo_name": "CraigHarris/gpdb", "path": "src/test/tinc/tincrepo/mpp/gpdb/tests/storage/uao/uaocs_ddl/sql/alter_ao_table_owner.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select count(*)  AS invisi_and_visi_tups from sto_alt_uao4",
  // {"repo_name": "samoooop/db-project", "path": "sql/GetAllSubjectInMajor.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select c.*, mrc.student_year, concat(t.first_name,\" \",t.last_name) as managedTeacher\n\t\t, avgGrade.avgGrade\n\t\t, count(ccw.status) as W\n\t\t, count(ccf.status) as F\t\t\t\nfrom major m  inner join major_req_course mrc on m.mid =mrc.req_mid\n\t\tinner join course c on mrc.req_cid = c.cid\n        left outer join (\tselect  sum(scc.grade * c.credit)/sum(c.credit) AS avgGrade, c.cid as cid\n\t\t\t\t\t\tfrom \tsemester s inner join sem_consist_course scc on s.sem_sid = scc.student_id and s.semid = scc.semester_id\n\t\t\t\t\t\t\t\tinner join course c on scc.course_id = c.cid\n\t\t\t\t\t\twhere \tsubstring(scc.semester_id,1,4) = year(current_date()) + 541\n\t\t\t\t\t\t\t\tand scc.status = 'P'\n\t\t\t\t\t\tgroup by scc.course_id , c.cid) as avgGrade on avgGrade.cid = c.cid and avgGrade.cid = mrc.req_cid\n        left outer join teacher t on c.managed_tid = t.tid and m.managed_tid = t.tid\n        left outer join (\tselect scc.status ,scc.course_id as cid \n\t\t\t\t\t\t\tfrom sem_consist_course scc \n\t\t\t\t\t\t\twhere scc.status='W' and substring(scc.semester_id,1,4) = year(current_date()) + 541 ) as ccw on c.cid = ccw.cid and ccw.cid = mrc.req_cid and ccw.cid = avgGrade.cid\n\t\tleft outer join ( select scc.status ,scc.course_id as cid \n\t\t\t\t\t\t\tfrom sem_consist_course scc \n\t\t\t\t\t\t\twhere scc.status='P' and scc.grade = 0 and substring(scc.semester_id,1,4) = year(current_date())+ 541 ) as ccf on c.cid = ccf.cid and ccf.cid = mrc.req_cid and ccf.cid = avgGrade.cid and ccf.cid = ccw.cid    \nwhere m.mid = (select t.work_mid from teacher t where t.tid = ?)\ngroup by c.cid, mrc.req_cid, avgGrade.cid, ccw.cid, ccf.cid, mrc.student_year, t.first_name, t.last_name",
  // {"repo_name": "kinpa200296/DB_labs", "path": "Lab5/Lab5_1_5.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT Specification, Price, Residue\n\tFROM Stock\n    WHERE (GoodId = 101) AND (Residue > 100)",
  // {"repo_name": "SPDEVGUY/CALI-AI", "path": "Database/SQL/Alter/06-Procs/01-Custom/Client/[Client].[Users_SelectByUser_Current].sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t*\r\n\tFROM\t[Client].[Users]\r\n\tWHERE\t[UserId] = @AuthUserId\r\n\r\nEND",
  // {"repo_name": "jackc/sqlfmt", "path": "testdata/xmlelement.golden.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select\n  xmlelement(name foo),\n  xmlelement(name foo, xmlattributes('bar' as baz)),\n  xmlelement(name foo, xmlattributes(bar, baz)),\n  xmlelement(name foo, xmlattributes('bar' as baz), 'bo', 'dy'),\n  xmlelement(name foo, 'bo', 'dy')",
  // {"repo_name": "b-slim/hive", "path": "standalone-metastore/metastore-server/src/main/sql/mssql/upgrade-3.2.0-to-4.0.0.mssql.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 'Upgrading MetaStore schema from 3.2.0 to 4.0.0' AS MESSAGE",
  // {"repo_name": "b-slim/hive", "path": "standalone-metastore/metastore-server/src/main/sql/mssql/upgrade-3.2.0-to-4.0.0.mssql.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 'Finished upgrading MetaStore schema from 3.2.0 to 4.0.0' AS MESSAGE",
  // {"repo_name": "sureshthalamati/spark", "path": "sql/core/src/test/resources/tpcds-modifiedQueries/ss_max.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select \n  count(*) as total,\n  count(ss_sold_date_sk) as not_null_total,\n  count(distinct ss_sold_date_sk) as unique_days,\n  max(ss_sold_date_sk) as max_ss_sold_date_sk,\n  max(ss_sold_time_sk) as max_ss_sold_time_sk,\n  max(ss_item_sk) as max_ss_item_sk,\n  max(ss_customer_sk) as max_ss_customer_sk,\n  max(ss_cdemo_sk) as max_ss_cdemo_sk,\n  max(ss_hdemo_sk) as max_ss_hdemo_sk,\n  max(ss_addr_sk) as max_ss_addr_sk,\n  max(ss_store_sk) as max_ss_store_sk,\n  max(ss_promo_sk) as max_ss_promo_sk\nfrom store_sales",
  // {"repo_name": "sabertazimi/hust-lab", "path": "dataBase/lab2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM [SaleRecord]",
  // {"repo_name": "sabertazimi/hust-lab", "path": "dataBase/lab2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM [cellUser]",
  // {"repo_name": "sabertazimi/hust-lab", "path": "dataBase/lab2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM [phoneMFee]",
  // {"repo_name": "sabertazimi/hust-lab", "path": "dataBase/lab2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM [cellphone], [SaleRecord] WHERE [cellphone].[Ptype] = [SaleRecord].[Ptype]",
  // {"repo_name": "sabertazimi/hust-lab", "path": "dataBase/lab2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM [BHall], [SaleRecord] WHERE [BHall].[Hno] = [SaleRecord].[Hno]",
  // {"repo_name": "sabertazimi/hust-lab", "path": "dataBase/lab2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM [cellUser] WHERE [pnumber] = '13723332333'",
  // {"repo_name": "sabertazimi/hust-lab", "path": "dataBase/lab2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT [pnumber], SUM([mtotal]), DATEPART(YEAR, [mdate]) AS [year], DATEPART(MONTH, [mdate]) AS [month] FROM [phoneMFee] GROUP BY [pnumber], DATEPART(YEAR, [mdate]), DATEPART(MONTH, [mdate])",
  // {"repo_name": "sabertazimi/hust-lab", "path": "dataBase/lab2.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM [cellUser], [phoneFeeHistory] WHERE [cellUser].[pnumber] = [phoneFeeHistory].[pnumber] AND [pbalance] < 0",
  // {"repo_name": "feloy/pgproc", "path": "tests.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT true",
  // {"repo_name": "octonion/volleyball-m", "path": "ncaa_pbp_older/sos/current_ranking_geocoding.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select\nrk,school,div_id as div,str,ofs,dfs,sos\nfrom r\norder by rk asc",
  // {"repo_name": "bkiers/sqlite-parser", "path": "src/test/resources/tkt1501.test_1.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT a, b, 'abc' FROM t1\nUNION\nSELECT b, a, 'xyz' FROM t1\nORDER BY 2, 3",
  // {"repo_name": "analyst-collective/dbt", "path": "performance/projects/01_2000_simple_models/models/path_185/node_1855.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select 1 as id\nunion all\nselect * from {{ ref('node_0') }}\nunion all\nselect * from {{ ref('node_3') }}\nunion all\nselect * from {{ ref('node_6') }}\nunion all\nselect * from {{ ref('node_7') }}\nunion all\nselect * from {{ ref('node_52') }}\nunion all\nselect * from {{ ref('node_101') }}\nunion all\nselect * from {{ ref('node_684') }}",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/fts1i-1.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT content FROM t1 WHERE rowid = 1",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/fts1i-1.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT content FROM t1 WHERE rowid = 2",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/fts1i-1.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT content FROM t1 WHERE rowid = 3",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/fts1i-1.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT content FROM t1 WHERE rowid = 4",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/fts1i-1.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT content FROM t1 WHERE rowid = 5",
  // {"repo_name": "lintzc/gpdb", "path": "src/test/tinc/tincrepo/partitioning/staticselection/sql/static_selection_5.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from foo where b < 15 or b > 60",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval 4 month 2 weeks 3 microseconds * 1.5",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select (timestamp'2019-10-15' - timestamp'2019-10-14') / 1.5",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval 2147483647 month * 2",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval 2147483647 month / 0.5",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval 2147483647 day * 2",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval 2147483647 day / 0.5",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '2 seconds' / null",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '2 seconds' * null",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select null * interval '2 seconds'",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select -interval -1 month 1 day -1 second",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select +interval '-1 month 1 day -1 second'",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select +interval -1 month 1 day -1 second",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval -'1-1' year to month",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval -'-1-1' year to month",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval +'-1-1' year to month",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval - '1 2:3:4.001' day to second",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval +'1 2:3:4.001' day to second",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval -'-1 2:3:4.001' day to second",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select make_interval(1, 2)",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select make_interval(1, 2, 3)",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select make_interval(1, 2, 3, 4)",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select make_interval(1, 2, 3, 4, 5)",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select make_interval(1, 2, 3, 4, 5, 6)",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select make_interval(1, 2, 3, 4, 5, 6, 7.008009)",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select make_interval(1, 2, 3, 4, 0, 0, 123456789012.123456)",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select make_interval(0, 0, 0, 0, 0, 0, 1234567890123456789)",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select make_dt_interval(1, 2)",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select make_dt_interval(1, 2, 3)",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select make_dt_interval(1, 2, 3, 4.005006)",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select make_dt_interval(1, 0, 0, 123456789012.123456)",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select make_dt_interval(2147483647)",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select make_ym_interval(1, 2)",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select make_ym_interval(0, 1)",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select make_ym_interval(178956970, 7)",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select make_ym_interval(178956970, 8)",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select make_ym_interval(-178956970, -8)",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select make_ym_interval(-178956970, -9)",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select cast('+1 second' as interval)",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select cast('-1 second' as interval)",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select cast('+     1 second' as interval)",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select cast('-     1 second' as interval)",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select cast('- -1 second' as interval)",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select cast('- +1 second' as interval)",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval 1 year 2 month 3 week 4 day 5 hour 6 minute 7 seconds 8 millisecond 9 microsecond",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '30' year '25' month '-100' day '40' hour '80' minute '299.889987299' second",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '0-0' year to month",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '0 0:0:0' day to second",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '0 0:0:0.1' day to second",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '10-9' year to month",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '20 15' day to hour",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '20 15:40' day to minute",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '20 15:40:32.99899999' day to second",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '15:40' hour to minute",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '15:40:32.99899999' hour to second",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '40:32.99899999' minute to second",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '40:32' minute to second",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval 30 day day",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval 30 days days",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '20 15:40:32.99899999' day to minute",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '15:40:32.99899999' hour to minute",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '15:40.99899999' hour to second",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '15:40' hour to second",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '20 40:32.99899999' minute to second",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '3 year 1 hour'",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT interval '1 year 3 months 2 weeks 2 days 1 hour 3 minutes 2 seconds 100 millisecond 200 microseconds'",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval 1 fake_unit",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval 1 year to month",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '1' year to second",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '10-9' year to month '2-1' year to month",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '10-9' year to month '12:11:10' hour to second",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '1 15:11' day to minute '12:11:10' hour to second",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval 1 year '2-1' year to month",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval 1 year '12:11:10' hour to second",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '10-9' year to month '1' year",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '12:11:10' hour to second '1' year",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval (-30) day",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval (a + 1) day",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval 30 day day day",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval (-30) days",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval (a + 1) days",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval 30 days days days",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT INTERVAL '178956970-7' YEAR TO MONTH",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT INTERVAL '178956970-8' YEAR TO MONTH",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT INTERVAL '-178956970-8' YEAR TO MONTH",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT INTERVAL -'178956970-8' YEAR TO MONTH",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select\n  dateval,\n  dateval - interval '2-2' year to month,\n  dateval - interval '-2-2' year to month,\n  dateval + interval '2-2' year to month,\n  dateval + interval '-2-2' year to month,\n  - interval '2-2' year to month + dateval,\n  interval '2-2' year to month + dateval\nfrom interval_arithmetic",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select\n  tsval,\n  tsval - interval '2-2' year to month,\n  tsval - interval '-2-2' year to month,\n  tsval + interval '2-2' year to month,\n  tsval + interval '-2-2' year to month,\n  - interval '2-2' year to month + tsval,\n  interval '2-2' year to month + tsval\nfrom interval_arithmetic",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select\n  interval '2-2' year to month + interval '3-3' year to month,\n  interval '2-2' year to month - interval '3-3' year to month\nfrom interval_arithmetic",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select\n  tsval,\n  tsval - interval '99 11:22:33.123456789' day to second,\n  tsval - interval '-99 11:22:33.123456789' day to second,\n  tsval + interval '99 11:22:33.123456789' day to second,\n  tsval + interval '-99 11:22:33.123456789' day to second,\n  -interval '99 11:22:33.123456789' day to second + tsval,\n  interval '99 11:22:33.123456789' day to second + tsval\nfrom interval_arithmetic",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select\n  interval '99 11:22:33.123456789' day to second + interval '10 9:8:7.123456789' day to second,\n  interval '99 11:22:33.123456789' day to second - interval '10 9:8:7.123456789' day to second\nfrom interval_arithmetic",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval 'interval \\t 1\\tday'",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval 'interval\\t1\\tday'",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '1\\t' day",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '1 ' day",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '2-2\\t' year to month",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '-\\t2-2\\t' year to month",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '\\n0 12:34:46.789\\t' day to second",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '\\n-\\t10\\t 12:34:46.789\\t' day to second",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '\u4e2d\u6587 interval 1 day'",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval 'interval\u4e2d\u6587 1 day'",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval 'interval 1\u4e2d\u6587day'",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select a - b from values (interval '-2147483648 months', interval '2147483647 months') t(a, b)",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select b + interval '1 month' from values (interval '-2147483648 months', interval '2147483647 months') t(a, b)",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select a * 1.1 from values (interval '-2147483648 months', interval '2147483647 months') t(a, b)",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select a / 0.5 from values (interval '-2147483648 months', interval '2147483647 months') t(a, b)",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT\n  from_json('{\"a\":\"1 days\"}', 'a interval'),\n  to_json(from_json('{\"a\":\"1 days\"}', 'a interval')),\n  to_json(map('a', interval 25 month 100 day 130 minute)),\n  from_json(to_json(map('a', interval 25 month 100 day 130 minute)), 'a interval')",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '+'",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '+.'",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '1'",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '1.2'",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '- 2'",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '1 day -'",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '1 day 1'",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '1 day 2' day",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval 'interval 1' day",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select interval '-\\t 1' day",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT (INTERVAL '-178956970-8' YEAR TO MONTH) / 2",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT (INTERVAL '-178956970-8' YEAR TO MONTH) / 5",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT (INTERVAL '-178956970-8' YEAR TO MONTH) / -1",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT (INTERVAL '-178956970-8' YEAR TO MONTH) / -1L",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT (INTERVAL '-178956970-8' YEAR TO MONTH) / -1.0",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT (INTERVAL '-178956970-8' YEAR TO MONTH) / -1.0D",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT (INTERVAL '-106751991 04:00:54.775808' DAY TO SECOND) / 2",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT (INTERVAL '-106751991 04:00:54.775808' DAY TO SECOND) / 5",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT (INTERVAL '-106751991 04:00:54.775808' DAY TO SECOND) / -1",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT (INTERVAL '-106751991 04:00:54.775808' DAY TO SECOND) / -1L",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT (INTERVAL '-106751991 04:00:54.775808' DAY TO SECOND) / -1.0",
  // {"repo_name": "maropu/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/interval.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT (INTERVAL '-106751991 04:00:54.775808' DAY TO SECOND) / -1.0D",
  // {"repo_name": "glaudsonml/kurgan-ai", "path": "tools/sqlmap/procs/postgresql/dns_request.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT %RANDSTR3%()",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/tinc/tincrepo/mpp/gpdb/tests/storage/aoco_compression/other_tests/aoco_array_type.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "Select a2,a4 from ao_array where a1<10  order by a2,a4 limit 5",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/tinc/tincrepo/mpp/gpdb/tests/storage/aoco_compression/other_tests/aoco_array_type.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "Select a2,a4 from ao_array_compr where a1<10  order by a2,a4 limit 5",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/tinc/tincrepo/mpp/gpdb/tests/storage/aoco_compression/other_tests/aoco_array_type.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select 'compression_ratio' as compr_ratio, get_ao_compression_ratio('ao_array_compr')",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/tinc/tincrepo/mpp/gpdb/tests/storage/aoco_compression/other_tests/aoco_array_type.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "Select a2,a4 from co_array where a1<10  order by a2,a4 limit 5",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/tinc/tincrepo/mpp/gpdb/tests/storage/aoco_compression/other_tests/aoco_array_type.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "Select a2,a4 from co_array_zlib where a1<10  order by a2,a4 limit 5",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/tinc/tincrepo/mpp/gpdb/tests/storage/aoco_compression/other_tests/aoco_array_type.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select 'compression_ratio' as compr_ratio, get_ao_compression_ratio('co_array_zlib')",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/tinc/tincrepo/mpp/gpdb/tests/storage/aoco_compression/other_tests/aoco_array_type.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "Select a2,a4 from co_array_quicklz where a1<10  order by a2,a4 limit 5",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/tinc/tincrepo/mpp/gpdb/tests/storage/aoco_compression/other_tests/aoco_array_type.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select 'compression_ratio' as compr_ratio, get_ao_compression_ratio('co_array_quicklz')",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/tinc/tincrepo/mpp/gpdb/tests/storage/aoco_compression/other_tests/aoco_array_type.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "Select a2,a4 from co_array_rle where a1<10  order by a2,a4 limit 5",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/tinc/tincrepo/mpp/gpdb/tests/storage/aoco_compression/other_tests/aoco_array_type.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select 'compression_ratio' as compr_ratio, get_ao_compression_ratio('co_array_rle')",
  // {"repo_name": "ministryofjustice/cla_backend", "path": "cla_backend/apps/reports/sql/MIEOD.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\n    c.laa_reference,\n    c.reference,\n    category.code,\n    -- eod.created,\n    eod.modified,\n    eod_cat.category,\n    eod.notes,\n    UPPER(CAST(eod_cat.is_major as TEXT)),\n    cc_org.name as organisation\n    -- is_escalated is unknown currently\n    -- is_resolved is unknown currently\n    -- is_justified is unknown currently\nFROM legalaid_eoddetails AS eod\n    LEFT OUTER JOIN legalaid_eoddetailscategory as eod_cat ON eod_cat.eod_details_id = eod.id\n    JOIN legalaid_case AS c ON c.id = eod.case_id\n    LEFT OUTER JOIN diagnosis_diagnosistraversal AS diagnosis ON c.diagnosis_id = diagnosis.id\n    LEFT OUTER JOIN legalaid_category AS category ON diagnosis.category_id = category.id\n    LEFT OUTER JOIN call_centre_organisation AS cc_org ON cc_org.id = c.organisation_id\nWHERE c.created >= %s AND c.created < %s\nORDER BY c.created DESC",
  // {"repo_name": "bkiers/sqlite-parser", "path": "src/test/resources/descidx3.test_8.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT i FROM t1 ORDER BY a",
  // {"repo_name": "lintzc/gpdb", "path": "src/test/tinc/tincrepo/dml/functional/sql_partition/mpp21090_drop_midcol_dml_time_ao.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM mpp21090_drop_midcol_dml_time ORDER BY 1,2,3,4",
  // {"repo_name": "shlomi-noach/common_schema", "path": "tests/__legacy__/_truncate_array.sql/01/test.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select @size = 0",
  // {"repo_name": "ministryofjustice/prison-visits-2", "path": "db/views/count_visits_by_prison_and_calendar_dates_v01.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT prisons.name AS prison_name,\n       extract(year from visits.created_at)::integer AS year,\n       extract(month from visits.created_at)::integer AS month,\n       extract(day from visits.created_at)::integer AS day,\n       processing_state,\n       COUNT(*)\n  FROM visits\nINNER JOIN prisons ON prisons.id = visits.prison_id\nGROUP BY processing_state,\n         prison_name,\n         day,\n         month,\n         year",
  // {"repo_name": "Eonic/EonicWeb5", "path": "wwwroot/ewcommon/sqlUpdate/V5/5.0.32.0/spEmailOptOuts.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM tblOptOutAddresses\nEND",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/jrnlmode3-1.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM t1",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/jrnlmode3-1.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM t1",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/jrnlmode3-1.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM t1",
  // {"repo_name": "ysung-pivotal/incubator-hawq", "path": "src/test/regress/data/upgrade12/upg2_catupgrade_121.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT catDML('UPDATE pg_catalog.pg_appendonly set pagesize = 0",
  // {"repo_name": "ysung-pivotal/incubator-hawq", "path": "src/test/regress/data/upgrade12/upg2_catupgrade_121.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT catDML('COMMENT ON FUNCTION pg_catalog.pg_get_constraintdef(oid) IS ''constraint description''')",
  // {"repo_name": "ysung-pivotal/incubator-hawq", "path": "src/test/regress/data/upgrade12/upg2_catupgrade_121.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT catDML('COMMENT ON FUNCTION pg_catalog.pg_get_constraintdef(oid, bool) IS ''constraint description with pretty-print option''')",
  // {"repo_name": "ysung-pivotal/incubator-hawq", "path": "src/test/regress/data/upgrade12/upg2_catupgrade_121.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT catDML('COMMENT ON FUNCTION pg_catalog.pg_get_partition_rule_def(oid, bool) IS ''partition configuration for a given rule''')",
  // {"repo_name": "ysung-pivotal/incubator-hawq", "path": "src/test/regress/data/upgrade12/upg2_catupgrade_121.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT catDML('COMMENT ON FUNCTION pg_catalog.pg_get_partition_def(oid, bool) IS ''partition configuration for a given relation''')",
  // {"repo_name": "ysung-pivotal/incubator-hawq", "path": "src/test/regress/data/upgrade12/upg2_catupgrade_121.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT catDML('COMMENT ON FUNCTION pg_catalog.pg_get_partition_def(oid, bool, bool) IS ''partition configuration for a given relation''')",
  // {"repo_name": "ysung-pivotal/incubator-hawq", "path": "src/test/regress/data/upgrade12/upg2_catupgrade_121.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT catDML('COMMENT ON FUNCTION pg_catalog.pg_stat_get_activity(pid integer, OUT datid oid, OUT procpid integer, OUT usesysid oid, OUT application_name text, OUT current_query text, OUT waiting boolean, OUT xact_start timestamp with time zone, OUT query_start timestamp with time zone, OUT backend_start timestamp with time zone, OUT client_addr inet, OUT client_port integer, OUT sess_id integer) IS ''statistics: information about currently active backends''')",
  // {"repo_name": "OpenQueryStore/OpenQueryStore", "path": "setup/install_gather_statistics.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT @collection_active   = [collection_active],\n\t\t\t   @oqs_maximum_size_mb = [oqs_maximum_size_mb],\n               @data_cleanup_active = [data_cleanup_active],\n               @data_cleanup_threshold = [data_cleanup_threshold],\n               @data_cleanup_throttle = [data_cleanup_throttle]\n        FROM   [oqs].[collection_metadata]",
  // {"repo_name": "OpenQueryStore/OpenQueryStore", "path": "setup/install_gather_statistics.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT TOP(0)\n                                [plan_MD5],\n                                [plan_handle],\n                                [plan_firstfound],\n                                [plan_database],\n                                [plan_refcounts],\n                                [plan_usecounts],\n                                [plan_sizeinbytes],\n                                [plan_type],\n                                [plan_objecttype],\n                                [plan_executionplan]\n                            INTO #plans\n                            FROM [oqs].[plans]",
  // {"repo_name": "OpenQueryStore/OpenQueryStore", "path": "setup/install_gather_statistics.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM [oqs].[query_runtime_stats] AS [QRS]",
  // {"repo_name": "OpenQueryStore/OpenQueryStore", "path": "setup/install_gather_statistics.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM [oqs].[wait_stats] AS [WS]",
  // {"repo_name": "OpenQueryStore/OpenQueryStore", "path": "setup/install_gather_statistics.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM [#OQS_Runtime_Stats]",
  // {"repo_name": "OpenQueryStore/OpenQueryStore", "path": "setup/install_gather_statistics.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM [oqs].[query_runtime_stats] AS [qrs]",
  // {"repo_name": "OpenQueryStore/OpenQueryStore", "path": "setup/install_gather_statistics.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM [#OQS_Wait_Stats]",
  // {"repo_name": "cncf/velocity", "path": "BigQuery/query_cncf_repos.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select \n  org.login as org,\n  repo.name as repo\nfrom\n  [githubarchive:month.201705],\n  [githubarchive:month.201611],\n  [githubarchive:month.201605]\nwhere\n  org.login in (\n    'kubernetes', 'prometheus', 'opentracing', 'fluent', 'linkerd', 'grpc', 'containerd',\n    'rkt', 'kubernetes-client', 'kubernetes-incubator', 'coredns', 'grpc-ecosystem', 'containernetworking'\n  )\n  or repo.name in ('docker/containerd', 'coreos/rkt', 'GoogleCloudPlatform/kubernetes', 'GoogleCloudPlatform/kubernetes-workshops')\ngroup by\n  org, repo\norder by\n  org, repo",
  // {"repo_name": "ZFMK/GermanBarcodeofLife", "path": "Lims2Fims/sql_scripts/mysql_lims_scheme.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "Select Count(id), id into v_count, v_id From assembly_export_COI\n      Where dwb_CollectionSpecimenId=e_dwb_CollectionSpecimenId\n        and (status='ok' or status='prepared' or status='prepCheck')\n        and assemConsensus=e_assemConsensus and id < e_id",
  // {"repo_name": "ZFMK/GermanBarcodeofLife", "path": "Lims2Fims/sql_scripts/mysql_lims_scheme.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "Select Count(id), id into v_count, v_id From assembly_export_COI\n      Where dwb_CollectionSpecimenId=e_dwb_CollectionSpecimenId\n        and (status='ok' or status='prepared')\n        and assemConsensus=e_assemConsensus and id > e_id",
  // {"repo_name": "ZFMK/GermanBarcodeofLife", "path": "Lims2Fims/sql_scripts/mysql_lims_scheme.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "Select CONCAT('Zeilenverarbeitet=',(CAST(v_zaehler AS CHAR)) )",
  // {"repo_name": "ZFMK/GermanBarcodeofLife", "path": "Lims2Fims/sql_scripts/mysql_lims_scheme.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "Select CONCAT('Zeilenverarbeitet=',(CAST(v_count AS CHAR)) )",
  // {"repo_name": "ZFMK/GermanBarcodeofLife", "path": "Lims2Fims/sql_scripts/mysql_lims_scheme.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "Select count(*), id\n      Into v_count, t_gen_ann_doc_id\n      From gbol_geneious.annotated_document\n      Where folder_id=t_gen_consensusfolder_id\n        And plugin_document_xml like t_gen_extraction_id",
  // {"repo_name": "ZFMK/GermanBarcodeofLife", "path": "Lims2Fims/sql_scripts/mysql_lims_scheme.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "Select count(*), id\n      Into v_count, v_ann_doc_id\n      From gbol_geneious.annotated_document\n      Where folder_id=t_gen_consensusfolder_id\n        And plugin_document_xml like t_gen_workflow",
  // {"repo_name": "ZFMK/GermanBarcodeofLife", "path": "Lims2Fims/sql_scripts/mysql_lims_scheme.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "Select count(*), id\n      Into v_count, v_ann_doc_id\n      From gbol_geneious.annotated_document\n      Where folder_id=t_gen_consensusfolder_id and id=t_gen_ann_doc_id\n        And plugin_document_xml like v_consensus",
  // {"repo_name": "ZFMK/GermanBarcodeofLife", "path": "Lims2Fims/sql_scripts/mysql_lims_scheme.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "Select CONCAT('Zeilengeloescht=',(CAST(v_count AS CHAR)))",
  // {"repo_name": "ZFMK/GermanBarcodeofLife", "path": "Lims2Fims/sql_scripts/mysql_lims_scheme.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "Select CONCAT('Zeilenverarbeitet=',(CAST(v_count AS CHAR)),' neue Fehler=',(CAST(v_error AS CHAR)) )",
  // {"repo_name": "ZFMK/GermanBarcodeofLife", "path": "Lims2Fims/sql_scripts/mysql_lims_scheme.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "Select CONCAT('Zeileneingefuegt=',(CAST(v_count AS CHAR)),' Fehler=',(CAST(v_error AS CHAR)) )",
  // {"repo_name": "ZFMK/GermanBarcodeofLife", "path": "Lims2Fims/sql_scripts/mysql_lims_scheme.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "Select Count(id) into v_count From assembly Where id=p_id",
  // {"repo_name": "ZFMK/GermanBarcodeofLife", "path": "Lims2Fims/sql_scripts/mysql_lims_scheme.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "Select extraction_id, workflow, progress, consensus, date, technician, notes, failure_reason, failure_notes\n    Into p_extractionId, p_workflowId, p_progress, p_consensus, p_date, p_technician, p_assemNotes,\n      p_assem_failure_reason_id, p_assem_failure_detail\n    From assembly Where id=p_id",
  // {"repo_name": "ZFMK/GermanBarcodeofLife", "path": "Lims2Fims/sql_scripts/mysql_lims_scheme.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "Select name into p_assem_failure_reason From failure_reason Where id=p_assem_failure_reason_id",
  // {"repo_name": "ZFMK/GermanBarcodeofLife", "path": "Lims2Fims/sql_scripts/mysql_lims_scheme.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "Select extraction_id, workflow, progress, consensus, `date`, technician, notes, failure_reason, failure_notes\n    Into p_extractionId, p_workflowId, p_progress, p_consensus, p_date, p_technician, p_assemNotes,\n      p_assem_failure_reason_id, p_assem_failure_detail\n    From assembly Where id=p_id",
  // {"repo_name": "ZFMK/GermanBarcodeofLife", "path": "Lims2Fims/sql_scripts/mysql_lims_scheme.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "Select Max(c.id), Count(c.id) into v_id, v_count From cyclesequencing as c, plate as p\n      Where c.workflow=p_workflowId and c.direction=p_direction and c.plate=p.id and p.name like v_pname",
  // {"repo_name": "ZFMK/GermanBarcodeofLife", "path": "Lims2Fims/sql_scripts/mysql_lims_scheme.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "Select Max(id), Count(id) into v_id, v_count From cyclesequencing Where workflow=p_workflowId and direction=p_direction",
  // {"repo_name": "ZFMK/GermanBarcodeofLife", "path": "Lims2Fims/sql_scripts/mysql_lims_scheme.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "Select id, primerName, primerSequence, extractionId, date, technician\n    Into p_cycleSeqId, p_primerName, p_primerSequence, v_extractionId, p_date, p_technician\n    From cyclesequencing Where id = v_id",
  // {"repo_name": "ZFMK/GermanBarcodeofLife", "path": "Lims2Fims/sql_scripts/mysql_lims_scheme.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "Select Max(id), Count(id) into v_id, v_count From traces Where reaction=p_cycleSeqId",
  // {"repo_name": "ZFMK/GermanBarcodeofLife", "path": "Lims2Fims/sql_scripts/mysql_lims_scheme.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "Select id, name\n    Into p_traceId, p_traceName\n    From traces Where id=v_id",
  // {"repo_name": "ZFMK/GermanBarcodeofLife", "path": "Lims2Fims/sql_scripts/mysql_lims_scheme.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "Select Count(id) into v_count From workflow Where id = p_workflowId",
  // {"repo_name": "ZFMK/GermanBarcodeofLife", "path": "Lims2Fims/sql_scripts/mysql_lims_scheme.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "Select extractionId, locus, date into p_extractionTblId, p_locus, p_workflowDate From workflow Where id = p_workflowId",
  // {"repo_name": "ZFMK/GermanBarcodeofLife", "path": "Lims2Fims/sql_scripts/mysql_lims_scheme.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "Select Count(id) into v_count From extraction Where id = p_extractionTblId",
  // {"repo_name": "ZFMK/GermanBarcodeofLife", "path": "Lims2Fims/sql_scripts/mysql_lims_scheme.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "Select sampleId, extractionId, date into p_sampleId, v_extractionId, p_extractionDate From extraction Where id = p_extractionTblId",
  // {"repo_name": "ZFMK/GermanBarcodeofLife", "path": "Lims2Fims/sql_scripts/mysql_lims_scheme.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "Select id, extractionId, prName, prSequence, revPrName, revPrSequence, date\n    Into p_Id, v_extractionId, p_prName, p_prSequence, p_revPrName, p_revPrSequence, p_pcrDate\n    From pcr Where id = v_id",
  // {"repo_name": "ZFMK/GermanBarcodeofLife", "path": "Lims2Fims/sql_scripts/mysql_lims_scheme.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "Select count(*), id\n      Into v_count, t_gen_ann_doc_id\n      From gbol_geneious.annotated_document\n      Where folder_id=t_gen_consensusfolder_id\n        And plugin_document_xml like t_gen_name",
  // {"repo_name": "ZFMK/GermanBarcodeofLife", "path": "Lims2Fims/sql_scripts/mysql_lims_scheme.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "Select count(*), id\n      Into v_count, v_ann_doc_id\n      From gbol_geneious.annotated_document\n      Where folder_id=t_gen_consensusfolder_id and id=t_gen_ann_doc_id\n        And plugin_document_xml like t_gen_consensus",
  // {"repo_name": "ZFMK/GermanBarcodeofLife", "path": "Lims2Fims/sql_scripts/mysql_lims_scheme.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "Select CONCAT('Zeileneingefuegt=',(CAST(v_count AS CHAR)))",
  // {"repo_name": "aldridged/gtg-gts-bhp", "path": "SLAReports/sla_power_out.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select timestamp,\r\nsubstring(rawData,locate(':',rawData)+1,(locate(' ',rawData)-(locate(':',rawData))-1)) as Latency,\r\nsubstring(rawData,locate(':',rawData,10)+1,(locate('%',rawData)-locate(':',rawData,10)-1)) as PacketLoss,\r\nsubstring(rawData,locate(':',rawData,35)+1,(locate(' ',rawData,35)-locate(':',rawData,35)-1)) as PublicIP,\r\nsubstring(rawData,locate(':',rawData,40)+1) as Uptime\r\nfrom EventData \r\nwhere accountID='gtg' and deviceID='bbwbhp1' and rawData is not null order by timestamp desc limit 144",
  // {"repo_name": "JAVA201708/Homework", "path": "201710/20171012/Team1/MaXianChen/works/work01/HW02.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT d.deptno, d.dname, d.loc, t.counts\r\n   FROM (SELECT deptno, COUNT(deptno) counts FROM emp GROUP BY deptno) t, dept d\r\nWHERE t.deptno = d.deptno",
  // {"repo_name": "JAVA201708/Homework", "path": "201710/20171012/Team1/MaXianChen/works/work01/HW02.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT t1.empno, t1.ename, t1.deptno, t2.dname, t2.loc, t2.counts\r\n  FROM (SELECT e.empno, e.ename, e.deptno\r\n          FROM emp e, emp m\r\n         WHERE e.mgr = m.empno\r\n           AND e.hiredate < m.hiredate) t1,\r\n       (SELECT d.deptno, d.dname, d.loc, t.counts\r\n          FROM (SELECT deptno, COUNT(deptno) counts FROM emp GROUP BY deptno) t,\r\n               dept d\r\n         WHERE t.deptno = d.deptno) t2\r\n WHERE t1.deptno = t2.deptno",
  // {"repo_name": "AlexTitenko/sqlserver-kit", "path": "User_Defined_Function/dbo.udf_LongestCommonSubstring.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM dbo.udf_LongestCommonSubstring ('thisisatest', 'testing123testing')",
  // {"repo_name": "AlexTitenko/sqlserver-kit", "path": "User_Defined_Function/dbo.udf_LongestCommonSubstring.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM dbo.udf_LongestCommonSubstring ( 'findthishere', 'where is this?')",
  // {"repo_name": "AlexTitenko/sqlserver-kit", "path": "User_Defined_Function/dbo.udf_LongestCommonSubstring.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM dbo.udf_LongestCommonSubstring ( NULL, 'xab')",
  // {"repo_name": "AlexTitenko/sqlserver-kit", "path": "User_Defined_Function/dbo.udf_LongestCommonSubstring.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM dbo.udf_LongestCommonSubstring ( 'not beginning-middle-ending', 'beginning-diddle-dum-ending')",
  // {"repo_name": "rkboyce/WebAPI", "path": "src/main/resources/resources/job/sql/jobExecutions.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select E.JOB_EXECUTION_ID, E.START_TIME, E.END_TIME, E.STATUS, E.EXIT_CODE, E.EXIT_MESSAGE, E.CREATE_TIME, E.LAST_UPDATED, E.VERSION, I.JOB_INSTANCE_ID, I.JOB_NAME, P.KEY_NAME, P.TYPE_CD, P.STRING_VAL, P.DATE_VAL, P.LONG_VAL, P.DOUBLE_VAL, P.IDENTIFYING \n from @ohdsi_schema.BATCH_JOB_EXECUTION E\n join @ohdsi_schema.BATCH_JOB_INSTANCE I on I.JOB_INSTANCE_ID = E.JOB_INSTANCE_ID\n left outer join @ohdsi_schema.BATCH_JOB_EXECUTION_PARAMS P on P.JOB_EXECUTION_ID = E.JOB_EXECUTION_ID\n order by E.START_TIME DESC",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/tinc/tincrepo/dml/functional/sql/joins_ao_pttab_insert_13.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT COUNT(*) FROM (SELECT dml_ao_pt_s.a,dml_ao_pt_r.b,'text' FROM dml_ao_pt_r,dml_ao_pt_s  WHERE dml_ao_pt_r.b = dml_ao_pt_s.b)foo",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/tinc/tincrepo/dml/functional/sql/joins_ao_pttab_insert_13.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT COUNT(*) FROM dml_ao_pt_r",
  // {"repo_name": "Agirish/drill-test-framework", "path": "framework/resources/Functional/window_functions/partition_by/one_part_with_order_by_02.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select c_integer, avg(c_integer) over(partition by c_bigint order by c_date desc) from j9 order by 1, 2",
  // {"repo_name": "krystaln/drill-test-framework", "path": "framework/resources/Functional/tpch/sf0dot01/original/maprdb/json/query4.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT\n  O.O_ORDERPRIORITY,\n  COUNT(*) AS ORDER_COUNT\nFROM\n  orders O\nWHERE\n  O.O_ORDERDate >= DATE '1996-10-01'\n  AND O.O_ORDERDate < DATE '1996-10-01' + INTERVAL '3' MONTH\n  AND \n  EXISTS (\n    SELECT\n      *\n    FROM\n      lineitem L\n    WHERE\n      L.L_ORDERKEY = O.O_ORDERKEY\n      AND L.L_COMMITDate < L.L_RECEIPTDate\n  )\nGROUP BY\n  O.O_ORDERPRIORITY\nORDER BY\n  O.O_ORDERPRIORITY",
  // {"repo_name": "KulykRoman/drill", "path": "exec/java-exec/src/test/resources/window/fval.alltypes.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select\n  first_value(col0) over w as col0,\n  first_value(col1) over w as col1,\n  first_value(col2) over w as col2,\n  first_value(col3) over w as col3,\n  first_value(col4) over w as col4,\n  first_value(col5) over w as col5,\n  first_value(col6) over w as col6,\n  first_value(col7) over w as col7,\n  first_value(col8) over w as col8\nfrom\n  dfs.`window/fewRowsAllData.parquet`\nwindow w as ()\nlimit 1",
  // {"repo_name": "charlesroper/Recorder-6-SQL", "path": "Designations/VW_DESIGNATIONS.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT DISTINCT\r\n      ITN.TAXON_LIST_ITEM_KEY,\r\n      ITNS1.COMMON_NAME         AS DESIGNATED_AS,\r\n      TXG.TAXON_GROUP_NAME      AS TAXON_GROUP,\r\n      TDT.KIND                  AS [STATUS_KIND],\r\n      TDT.SHORT_NAME,\r\n      TDT.LONG_NAME,\r\n      TD.STATUS_GEOGRAPHIC_AREA,\r\n      CONVERT(VARCHAR(10), TD.DATE_FROM, 103) AS DESIGNATED_ON, CONVERT(VARCHAR(10),\r\n      TD.DATE_TO, 103)          AS DESIGNATION_EXPIRES\r\n\r\nFROM  INDEX_TAXON_NAME AS ITN\r\nINNER JOIN\r\n      INDEX_TAXON_GROUP AS ITG ON\r\n      ITN.TAXON_LIST_ITEM_KEY = ITG.CONTAINED_LIST_ITEM_KEY\r\nINNER JOIN\r\n      INDEX_TAXON_NAME AS ITNS1 ON\r\n      ITG.TAXON_LIST_ITEM_KEY = ITNS1.TAXON_LIST_ITEM_KEY\r\nINNER JOIN\r\n      INDEX_TAXON_NAME AS ITNS2 ON\r\n      ITNS1.RECOMMENDED_TAXON_LIST_ITEM_KEY = ITNS2.RECOMMENDED_TAXON_LIST_ITEM_KEY\r\nINNER JOIN\r\n      INDEX_TAXON_NAME AS ITNS3 ON\r\n      ITNS2.TAXON_LIST_ITEM_KEY = ITNS3.RECOMMENDED_TAXON_LIST_ITEM_KEY\r\nINNER JOIN\r\n      TAXON_DESIGNATION AS TD ON\r\n      ITNS2.TAXON_LIST_ITEM_KEY = TD.TAXON_LIST_ITEM_KEY\r\nINNER JOIN\r\n      TAXON_DESIGNATION_TYPE AS TDT ON\r\n      TD.TAXON_DESIGNATION_TYPE_KEY = TDT.TAXON_DESIGNATION_TYPE_KEY\r\nINNER JOIN\r\n      TAXON_LIST_ITEM AS TLI ON\r\n      ITN.TAXON_LIST_ITEM_KEY = TLI.TAXON_LIST_ITEM_KEY\r\nINNER JOIN\r\n      TAXON_VERSION AS TXV ON\r\n      TLI.TAXON_VERSION_KEY = TXV.TAXON_VERSION_KEY\r\nINNER JOIN\r\n      TAXON_GROUP AS TXG ON\r\n      TXV.OUTPUT_GROUP_KEY = TXG.TAXON_GROUP_KEY",
  // {"repo_name": "Code-by-practice/learning-sequelizejs", "path": "SQL/02_curd_tables/03_select_table.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM employees",
  // {"repo_name": "Code-by-practice/learning-sequelizejs", "path": "SQL/02_curd_tables/03_select_table.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT name FROM employees",
  // {"repo_name": "Code-by-practice/learning-sequelizejs", "path": "SQL/02_curd_tables/03_select_table.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT eid, name, department FROM employees",
  // {"repo_name": "memoriaal/eMem", "path": "docs/sql/kylli/memento.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select * from x_import\nwhere isikukood in (\n  SELECT id\n  from x_isikud\n  where (eesnimi, perenimi, isanimi, s\u00fcnniaasta)\n  in (select eesnimi, perenimi, isanimi, s\u00fcnniaasta FROM `x_duplikaadid`)\n)",
  // {"repo_name": "memoriaal/eMem", "path": "docs/sql/kylli/memento.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select i.id as isikukood, i.s\u00fcnniaasta, i.perenimi, i.eesnimi, i.isanimi\n, max(kasVabanenud) kasVabanenud\n, max(kasHukkunud) kasHukkunud\n, max(kasMittek\u00fc\u00fcditatud) kasMittek\u00fc\u00fcditatud\n, max(kasSaatusTeadmata) kasSaatusTeadmata\n, group_concat(andmeallikas SEPARATOR '\\n') as andmeallikad\n, group_concat(im.id SEPARATOR '\\n') as kirje_id\n, group_concat(if(kirje is null, \"\", kirje), if(kasutamataKirjeosa is null, \"\", kasutamataKirjeosa) SEPARATOR '\\n') as kirjed\nfrom x_isikud i\nleft join x_import im on im.isikukood = i.id\ngroup by i.id",
  // {"repo_name": "memoriaal/eMem", "path": "docs/sql/kylli/memento.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select vabanemine, left(vabanemine, length(vabanemine)-1), kirje from r1 where right(vabanemine,1) = '.'",
  // {"repo_name": "memoriaal/eMem", "path": "docs/sql/kylli/memento.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select s\u00fcnniaasta, s\u00fcnd, right(s\u00fcnd,4), kirje from r1   where s\u00fcnniaasta = 0 and s\u00fcnd regexp '^[0-9][0-9]\\.[0-9][0-9][0-9][0-9]$'",
  // {"repo_name": "memoriaal/eMem", "path": "docs/sql/kylli/memento.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select s\u00fcnniaasta, s\u00fcnd, right(s\u00fcnd,4), kirje from r1   where s\u00fcnniaasta = 0 and s\u00fcnd regexp '^[0-9][0-9][0-9][0-9]$'",
  // {"repo_name": "memoriaal/eMem", "path": "docs/sql/kylli/memento.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select s\u00fcnniaasta, s\u00fcnd, right(s\u00fcnd,2), kirje from r1   where s\u00fcnniaasta = 0 and s\u00fcnd regexp '^[0-9][0-9]\\.[0-9][0-9]\\.[0-9][0-9]$'",
  // {"repo_name": "memoriaal/eMem", "path": "docs/sql/kylli/memento.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select kirje from r1   WHERE kashukkunud = 0 and `Kirje` REGEXP 'tapetud'",
  // {"repo_name": "memoriaal/eMem", "path": "docs/sql/kylli/memento.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select kirje from r1   WHERE kashukkunud = 0 and `Kirje` REGEXP 'surn\\\\.'",
  // {"repo_name": "memoriaal/eMem", "path": "docs/sql/kylli/memento.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select kirje from r1   WHERE kashukkunud = 0 and `Kirje` REGEXP 't\u00e4ide viidud'",
  // {"repo_name": "memoriaal/eMem", "path": "docs/sql/kylli/memento.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT   perenimi,\n         eesnimi,\n-- \t\t kasvabanenud,\n--          kashukkunud,\n         group_concat(' in:', isanimi, ' s:', s\u00fcnniaasta, ' M:',allikas SEPARATOR \"\\n\") AS \"isanimi, s\u00fcnd, allikas\"\nFROM     allikad_v\nWHERE    kashukkunud = 0\nGROUP BY perenimi,\n-- \t\t kasvabanenud,\n         kashukkunud,\n         eesnimi",
  // {"repo_name": "memoriaal/eMem", "path": "docs/sql/kylli/memento.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT id AS isikukood,\n       perenimi,\n       eesnimi,\n       Max(kasvabanenud) AS kasvabanenud,\n       Max(kashukkunud) AS kashukkunud,\n       Max(kasmittek\u00fc\u00fcditatud) AS kasmittek\u00fc\u00fcditatud,\n       Group_concat(' in:', isanimi, ' s:', s\u00fcnniaasta, ' M:', allikas SEPARATOR \"\\n\") AS \"isanimi, s\u00fcnd, allikas\"\nFROM   allikad_v a\nGROUP  BY id,\n          perenimi,\n          eesnimi\nHAVING  Max(a.kasvabanenud)\n            + Max(a.kasmittek\u00fc\u00fcditatud)\n            + Max(a.kashukkunud) != 1\nORDER  BY ( Max(a.kasvabanenud)\n            + Max(a.kasmittek\u00fc\u00fcditatud)\n            + Max(a.kashukkunud) ) DESC,\n          perenimi,\n          eesnimi",
  // {"repo_name": "memoriaal/eMem", "path": "docs/sql/kylli/memento.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select concat(\n   'UPDATE ', table_name, ' SET `',\n   column_name,\n   '` = REPLACE(`', column_name, '`, ''', @oval, ''', ''', @nval, ''') WHERE `', column_name, '` regexp \\'^', @eval, '$\\'",
  // {"repo_name": "regeldso/hrank", "path": "SQL/Advanced Join/SymmetricPairs.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT TOP 50 PERCENT t1.X, t1.Y\nFROM Functions t1\nJOIN Functions t2 ON t2.X = t1.Y AND t2.Y = t1.X \nWHERE  t1.X <> t1.Y OR (SELECT Count(*) FROM Functions t3 WHERE t3.Y = t1.Y AND t3.X = t1.X) > 1\nGROUP BY  t1.X,  t1.Y\nORDER BY t1.X",
  // {"repo_name": "hemmerling/sql-stanford2013", "path": "src/13_views/hemmerling_viewmovie_challenge_query1.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select M.mID, title, stars \r\nfrom Movie M, Rating R \r\nwhere M.mID = R.mID order by M.mID, stars",
  // {"repo_name": "ontop/ontop-examples", "path": "2019-journal-cost/replication/wisconsin/unfoldings/db2/jucq/jucq-74.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT *\nFROM\n(SELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW1.\"EVENONEPERCENT\" AS T1V0,  QVIEW1.\"STRING4\" AS T1V1,  QVIEW1.\"STRINGU1\" AS T1V2,  QVIEW2.\"EVENONEPERCENT\" AS T2V0,  QVIEW2.\"STRING4\" AS T2V1,  QVIEW2.\"STRINGU1\"\nAS T2V2 FROM\n\"T13_1M\" QVIEW1,\n\"T14_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"STRING4\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL AND\nQVIEW2.\"STRING4\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW1.\"EVENONEPERCENT\" AS T1V0,  QVIEW1.\"STRING4\" AS T1V1,  QVIEW1.\"STRINGU1\" AS T1V2,  QVIEW2.\"EVENONEPERCENT\" AS T2V0,  QVIEW2.\"STRINGU2\" AS T2V1,  QVIEW2.\"STRING4\"\nAS T2V2 FROM\n\"T13_1M\" QVIEW1,\n\"T11_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"STRING4\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU2\" IS NOT NULL AND\nQVIEW2.\"STRING4\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW1.\"EVENONEPERCENT\" AS T1V0,  QVIEW1.\"STRING4\" AS T1V1,  QVIEW1.\"STRINGU1\" AS T1V2,  QVIEW2.\"EVENONEPERCENT\" AS T2V0,  QVIEW2.\"STRINGU2\" AS T2V1,  QVIEW2.\"STRINGU1\"\nAS T2V2 FROM\n\"T13_1M\" QVIEW1,\n\"T8_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"STRING4\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU2\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW1.\"EVENONEPERCENT\" AS T1V0,  QVIEW1.\"STRING4\" AS T1V1,  QVIEW1.\"STRINGU1\" AS T1V2,  QVIEW2.\"EVENONEPERCENT\" AS T2V0,  QVIEW2.\"STRINGU1\" AS T2V1,  QVIEW2.\"STRING4\"\nAS T2V2 FROM\n\"T13_1M\" QVIEW1,\n\"T5_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"STRING4\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL AND\nQVIEW2.\"STRING4\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW1.\"EVENONEPERCENT\" AS T1V0,  QVIEW1.\"STRING4\" AS T1V1,  QVIEW1.\"STRINGU1\" AS T1V2,  QVIEW2.\"EVENONEPERCENT\" AS T2V0,  QVIEW2.\"STRINGU1\" AS T2V1,  QVIEW2.\"STRINGU2\"\nAS T2V2 FROM\n\"T13_1M\" QVIEW1,\n\"T2_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"STRING4\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU2\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW1.\"EVENONEPERCENT\" AS T1V0,  QVIEW1.\"STRINGU2\" AS T1V1,  QVIEW1.\"STRING4\" AS T1V2,  QVIEW2.\"EVENONEPERCENT\" AS T2V0,  QVIEW2.\"STRING4\" AS T2V1,  QVIEW2.\"STRINGU1\"\nAS T2V2 FROM\n\"T10_1M\" QVIEW1,\n\"T14_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU2\" IS NOT NULL AND\nQVIEW1.\"STRING4\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL AND\nQVIEW2.\"STRING4\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW1.\"EVENONEPERCENT\" AS T1V0,  QVIEW1.\"STRINGU2\" AS T1V1,  QVIEW1.\"STRING4\" AS T1V2,  QVIEW2.\"EVENONEPERCENT\" AS T2V0,  QVIEW2.\"STRINGU2\" AS T2V1,  QVIEW2.\"STRING4\"\nAS T2V2 FROM\n\"T10_1M\" QVIEW1,\n\"T11_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU2\" IS NOT NULL AND\nQVIEW1.\"STRING4\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU2\" IS NOT NULL AND\nQVIEW2.\"STRING4\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW1.\"EVENONEPERCENT\" AS T1V0,  QVIEW1.\"STRINGU2\" AS T1V1,  QVIEW1.\"STRING4\" AS T1V2,  QVIEW2.\"EVENONEPERCENT\" AS T2V0,  QVIEW2.\"STRINGU2\" AS T2V1,  QVIEW2.\"STRINGU1\"\nAS T2V2 FROM\n\"T10_1M\" QVIEW1,\n\"T8_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU2\" IS NOT NULL AND\nQVIEW1.\"STRING4\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU2\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW1.\"EVENONEPERCENT\" AS T1V0,  QVIEW1.\"STRINGU2\" AS T1V1,  QVIEW1.\"STRING4\" AS T1V2,  QVIEW2.\"EVENONEPERCENT\" AS T2V0,  QVIEW2.\"STRINGU1\" AS T2V1,  QVIEW2.\"STRING4\"\nAS T2V2 FROM\n\"T10_1M\" QVIEW1,\n\"T5_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU2\" IS NOT NULL AND\nQVIEW1.\"STRING4\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL AND\nQVIEW2.\"STRING4\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW1.\"EVENONEPERCENT\" AS T1V0,  QVIEW1.\"STRINGU2\" AS T1V1,  QVIEW1.\"STRING4\" AS T1V2,  QVIEW2.\"EVENONEPERCENT\" AS T2V0,  QVIEW2.\"STRINGU1\" AS T2V1,  QVIEW2.\"STRINGU2\"\nAS T2V2 FROM\n\"T10_1M\" QVIEW1,\n\"T2_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU2\" IS NOT NULL AND\nQVIEW1.\"STRING4\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU2\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW1.\"EVENONEPERCENT\" AS T1V0,  QVIEW1.\"STRINGU2\" AS T1V1,  QVIEW1.\"STRINGU1\" AS T1V2,  QVIEW2.\"EVENONEPERCENT\" AS T2V0,  QVIEW2.\"STRING4\" AS T2V1,  QVIEW2.\"STRINGU1\"\nAS T2V2 FROM\n\"T7_1M\" QVIEW1,\n\"T14_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU2\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL AND\nQVIEW2.\"STRING4\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW1.\"EVENONEPERCENT\" AS T1V0,  QVIEW1.\"STRINGU2\" AS T1V1,  QVIEW1.\"STRINGU1\" AS T1V2,  QVIEW2.\"EVENONEPERCENT\" AS T2V0,  QVIEW2.\"STRINGU2\" AS T2V1,  QVIEW2.\"STRING4\"\nAS T2V2 FROM\n\"T7_1M\" QVIEW1,\n\"T11_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU2\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU2\" IS NOT NULL AND\nQVIEW2.\"STRING4\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW1.\"EVENONEPERCENT\" AS T1V0,  QVIEW1.\"STRINGU2\" AS T1V1,  QVIEW1.\"STRINGU1\" AS T1V2,  QVIEW2.\"EVENONEPERCENT\" AS T2V0,  QVIEW2.\"STRINGU2\" AS T2V1,  QVIEW2.\"STRINGU1\"\nAS T2V2 FROM\n\"T7_1M\" QVIEW1,\n\"T8_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU2\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU2\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW1.\"EVENONEPERCENT\" AS T1V0,  QVIEW1.\"STRINGU2\" AS T1V1,  QVIEW1.\"STRINGU1\" AS T1V2,  QVIEW2.\"EVENONEPERCENT\" AS T2V0,  QVIEW2.\"STRINGU1\" AS T2V1,  QVIEW2.\"STRING4\"\nAS T2V2 FROM\n\"T7_1M\" QVIEW1,\n\"T5_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU2\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL AND\nQVIEW2.\"STRING4\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW1.\"EVENONEPERCENT\" AS T1V0,  QVIEW1.\"STRINGU2\" AS T1V1,  QVIEW1.\"STRINGU1\" AS T1V2,  QVIEW2.\"EVENONEPERCENT\" AS T2V0,  QVIEW2.\"STRINGU1\" AS T2V1,  QVIEW2.\"STRINGU2\"\nAS T2V2 FROM\n\"T7_1M\" QVIEW1,\n\"T2_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU2\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU2\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW1.\"EVENONEPERCENT\" AS T1V0,  QVIEW1.\"STRINGU1\" AS T1V1,  QVIEW1.\"STRING4\" AS T1V2,  QVIEW2.\"EVENONEPERCENT\" AS T2V0,  QVIEW2.\"STRING4\" AS T2V1,  QVIEW2.\"STRINGU1\"\nAS T2V2 FROM\n\"T4_1M\" QVIEW1,\n\"T14_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"STRING4\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL AND\nQVIEW2.\"STRING4\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW1.\"EVENONEPERCENT\" AS T1V0,  QVIEW1.\"STRINGU1\" AS T1V1,  QVIEW1.\"STRING4\" AS T1V2,  QVIEW2.\"EVENONEPERCENT\" AS T2V0,  QVIEW2.\"STRINGU2\" AS T2V1,  QVIEW2.\"STRING4\"\nAS T2V2 FROM\n\"T4_1M\" QVIEW1,\n\"T11_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"STRING4\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU2\" IS NOT NULL AND\nQVIEW2.\"STRING4\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW1.\"EVENONEPERCENT\" AS T1V0,  QVIEW1.\"STRINGU1\" AS T1V1,  QVIEW1.\"STRING4\" AS T1V2,  QVIEW2.\"EVENONEPERCENT\" AS T2V0,  QVIEW2.\"STRINGU2\" AS T2V1,  QVIEW2.\"STRINGU1\"\nAS T2V2 FROM\n\"T4_1M\" QVIEW1,\n\"T8_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"STRING4\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU2\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW1.\"EVENONEPERCENT\" AS T1V0,  QVIEW1.\"STRINGU1\" AS T1V1,  QVIEW1.\"STRING4\" AS T1V2,  QVIEW2.\"EVENONEPERCENT\" AS T2V0,  QVIEW2.\"STRINGU1\" AS T2V1,  QVIEW2.\"STRING4\"\nAS T2V2 FROM\n\"T4_1M\" QVIEW1,\n\"T5_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"STRING4\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL AND\nQVIEW2.\"STRING4\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW1.\"EVENONEPERCENT\" AS T1V0,  QVIEW1.\"STRINGU1\" AS T1V1,  QVIEW1.\"STRING4\" AS T1V2,  QVIEW2.\"EVENONEPERCENT\" AS T2V0,  QVIEW2.\"STRINGU1\" AS T2V1,  QVIEW2.\"STRINGU2\"\nAS T2V2 FROM\n\"T4_1M\" QVIEW1,\n\"T2_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"STRING4\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU2\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW1.\"EVENONEPERCENT\" AS T1V0,  QVIEW1.\"STRINGU1\" AS T1V1,  QVIEW1.\"STRINGU2\" AS T1V2,  QVIEW2.\"EVENONEPERCENT\" AS T2V0,  QVIEW2.\"STRING4\" AS T2V1,  QVIEW2.\"STRINGU1\"\nAS T2V2 FROM\n\"T1_1M\" QVIEW1,\n\"T14_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU2\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL AND\nQVIEW2.\"STRING4\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW1.\"EVENONEPERCENT\" AS T1V0,  QVIEW1.\"STRINGU1\" AS T1V1,  QVIEW1.\"STRINGU2\" AS T1V2,  QVIEW2.\"EVENONEPERCENT\" AS T2V0,  QVIEW2.\"STRINGU2\" AS T2V1,  QVIEW2.\"STRING4\"\nAS T2V2 FROM\n\"T1_1M\" QVIEW1,\n\"T11_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU2\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU2\" IS NOT NULL AND\nQVIEW2.\"STRING4\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW1.\"EVENONEPERCENT\" AS T1V0,  QVIEW1.\"STRINGU1\" AS T1V1,  QVIEW1.\"STRINGU2\" AS T1V2,  QVIEW2.\"EVENONEPERCENT\" AS T2V0,  QVIEW2.\"STRINGU2\" AS T2V1,  QVIEW2.\"STRINGU1\"\nAS T2V2 FROM\n\"T1_1M\" QVIEW1,\n\"T8_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU2\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU2\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW1.\"EVENONEPERCENT\" AS T1V0,  QVIEW1.\"STRINGU1\" AS T1V1,  QVIEW1.\"STRINGU2\" AS T1V2,  QVIEW2.\"EVENONEPERCENT\" AS T2V0,  QVIEW2.\"STRINGU1\" AS T2V1,  QVIEW2.\"STRING4\"\nAS T2V2 FROM\n\"T1_1M\" QVIEW1,\n\"T5_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU2\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL AND\nQVIEW2.\"STRING4\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW1.\"EVENONEPERCENT\" AS T1V0,  QVIEW1.\"STRINGU1\" AS T1V1,  QVIEW1.\"STRINGU2\" AS T1V2,  QVIEW2.\"EVENONEPERCENT\" AS T2V0,  QVIEW2.\"STRINGU1\" AS T2V1,  QVIEW2.\"STRINGU2\"\nAS T2V2 FROM\n\"T1_1M\" QVIEW1,\n\"T2_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU2\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU2\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL\n) F_1, (SELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW2.\"EVENONEPERCENT\" AS T3V0,  QVIEW2.\"STRING4\" AS T3V1,  QVIEW2.\"STRINGU1\"\nAS T3V2 FROM\n\"T13_1M\" QVIEW1,\n\"T15_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"STRING4\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL AND\nQVIEW2.\"STRING4\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW2.\"EVENONEPERCENT\" AS T3V0,  QVIEW2.\"STRINGU2\" AS T3V1,  QVIEW2.\"STRING4\"\nAS T3V2 FROM\n\"T13_1M\" QVIEW1,\n\"T12_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"STRING4\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU2\" IS NOT NULL AND\nQVIEW2.\"STRING4\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW2.\"EVENONEPERCENT\" AS T3V0,  QVIEW2.\"STRINGU2\" AS T3V1,  QVIEW2.\"STRINGU1\"\nAS T3V2 FROM\n\"T13_1M\" QVIEW1,\n\"T9_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"STRING4\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU2\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW2.\"EVENONEPERCENT\" AS T3V0,  QVIEW2.\"STRINGU1\" AS T3V1,  QVIEW2.\"STRING4\"\nAS T3V2 FROM\n\"T13_1M\" QVIEW1,\n\"T6_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"STRING4\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL AND\nQVIEW2.\"STRING4\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW2.\"EVENONEPERCENT\" AS T3V0,  QVIEW2.\"STRINGU1\" AS T3V1,  QVIEW2.\"STRINGU2\"\nAS T3V2 FROM\n\"T13_1M\" QVIEW1,\n\"T3_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"STRING4\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU2\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW2.\"EVENONEPERCENT\" AS T3V0,  QVIEW2.\"STRING4\" AS T3V1,  QVIEW2.\"STRINGU1\"\nAS T3V2 FROM\n\"T10_1M\" QVIEW1,\n\"T15_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU2\" IS NOT NULL AND\nQVIEW1.\"STRING4\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL AND\nQVIEW2.\"STRING4\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW2.\"EVENONEPERCENT\" AS T3V0,  QVIEW2.\"STRINGU2\" AS T3V1,  QVIEW2.\"STRING4\"\nAS T3V2 FROM\n\"T10_1M\" QVIEW1,\n\"T12_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU2\" IS NOT NULL AND\nQVIEW1.\"STRING4\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU2\" IS NOT NULL AND\nQVIEW2.\"STRING4\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW2.\"EVENONEPERCENT\" AS T3V0,  QVIEW2.\"STRINGU2\" AS T3V1,  QVIEW2.\"STRINGU1\"\nAS T3V2 FROM\n\"T10_1M\" QVIEW1,\n\"T9_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU2\" IS NOT NULL AND\nQVIEW1.\"STRING4\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU2\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW2.\"EVENONEPERCENT\" AS T3V0,  QVIEW2.\"STRINGU1\" AS T3V1,  QVIEW2.\"STRING4\"\nAS T3V2 FROM\n\"T10_1M\" QVIEW1,\n\"T6_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU2\" IS NOT NULL AND\nQVIEW1.\"STRING4\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL AND\nQVIEW2.\"STRING4\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW2.\"EVENONEPERCENT\" AS T3V0,  QVIEW2.\"STRINGU1\" AS T3V1,  QVIEW2.\"STRINGU2\"\nAS T3V2 FROM\n\"T10_1M\" QVIEW1,\n\"T3_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU2\" IS NOT NULL AND\nQVIEW1.\"STRING4\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU2\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW2.\"EVENONEPERCENT\" AS T3V0,  QVIEW2.\"STRING4\" AS T3V1,  QVIEW2.\"STRINGU1\"\nAS T3V2 FROM\n\"T7_1M\" QVIEW1,\n\"T15_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU2\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL AND\nQVIEW2.\"STRING4\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW2.\"EVENONEPERCENT\" AS T3V0,  QVIEW2.\"STRINGU2\" AS T3V1,  QVIEW2.\"STRING4\"\nAS T3V2 FROM\n\"T7_1M\" QVIEW1,\n\"T12_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU2\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU2\" IS NOT NULL AND\nQVIEW2.\"STRING4\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW2.\"EVENONEPERCENT\" AS T3V0,  QVIEW2.\"STRINGU2\" AS T3V1,  QVIEW2.\"STRINGU1\"\nAS T3V2 FROM\n\"T7_1M\" QVIEW1,\n\"T9_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU2\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU2\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW2.\"EVENONEPERCENT\" AS T3V0,  QVIEW2.\"STRINGU1\" AS T3V1,  QVIEW2.\"STRING4\"\nAS T3V2 FROM\n\"T7_1M\" QVIEW1,\n\"T6_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU2\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL AND\nQVIEW2.\"STRING4\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW2.\"EVENONEPERCENT\" AS T3V0,  QVIEW2.\"STRINGU1\" AS T3V1,  QVIEW2.\"STRINGU2\"\nAS T3V2 FROM\n\"T7_1M\" QVIEW1,\n\"T3_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU2\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU2\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW2.\"EVENONEPERCENT\" AS T3V0,  QVIEW2.\"STRING4\" AS T3V1,  QVIEW2.\"STRINGU1\"\nAS T3V2 FROM\n\"T4_1M\" QVIEW1,\n\"T15_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"STRING4\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL AND\nQVIEW2.\"STRING4\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW2.\"EVENONEPERCENT\" AS T3V0,  QVIEW2.\"STRINGU2\" AS T3V1,  QVIEW2.\"STRING4\"\nAS T3V2 FROM\n\"T4_1M\" QVIEW1,\n\"T12_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"STRING4\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU2\" IS NOT NULL AND\nQVIEW2.\"STRING4\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW2.\"EVENONEPERCENT\" AS T3V0,  QVIEW2.\"STRINGU2\" AS T3V1,  QVIEW2.\"STRINGU1\"\nAS T3V2 FROM\n\"T4_1M\" QVIEW1,\n\"T9_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"STRING4\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU2\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW2.\"EVENONEPERCENT\" AS T3V0,  QVIEW2.\"STRINGU1\" AS T3V1,  QVIEW2.\"STRING4\"\nAS T3V2 FROM\n\"T4_1M\" QVIEW1,\n\"T6_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"STRING4\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL AND\nQVIEW2.\"STRING4\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW2.\"EVENONEPERCENT\" AS T3V0,  QVIEW2.\"STRINGU1\" AS T3V1,  QVIEW2.\"STRINGU2\"\nAS T3V2 FROM\n\"T4_1M\" QVIEW1,\n\"T3_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"STRING4\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU2\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW2.\"EVENONEPERCENT\" AS T3V0,  QVIEW2.\"STRING4\" AS T3V1,  QVIEW2.\"STRINGU1\"\nAS T3V2 FROM\n\"T1_1M\" QVIEW1,\n\"T15_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU2\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL AND\nQVIEW2.\"STRING4\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW2.\"EVENONEPERCENT\" AS T3V0,  QVIEW2.\"STRINGU2\" AS T3V1,  QVIEW2.\"STRING4\"\nAS T3V2 FROM\n\"T1_1M\" QVIEW1,\n\"T12_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU2\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU2\" IS NOT NULL AND\nQVIEW2.\"STRING4\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW2.\"EVENONEPERCENT\" AS T3V0,  QVIEW2.\"STRINGU2\" AS T3V1,  QVIEW2.\"STRINGU1\"\nAS T3V2 FROM\n\"T1_1M\" QVIEW1,\n\"T9_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU2\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU2\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW2.\"EVENONEPERCENT\" AS T3V0,  QVIEW2.\"STRINGU1\" AS T3V1,  QVIEW2.\"STRING4\"\nAS T3V2 FROM\n\"T1_1M\" QVIEW1,\n\"T6_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU2\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL AND\nQVIEW2.\"STRING4\" IS NOT NULL\n\nUNION\nSELECT QVIEW1.\"UNIQUE2\" AS T0V0,  QVIEW2.\"EVENONEPERCENT\" AS T3V0,  QVIEW2.\"STRINGU1\" AS T3V1,  QVIEW2.\"STRINGU2\"\nAS T3V2 FROM\n\"T1_1M\" QVIEW1,\n\"T3_1M\" QVIEW2\nWHERE\n((QVIEW1.\"ONEPERCENT\" >= 0) AND (QVIEW1.\"ONEPERCENT\" < 20)) AND\nQVIEW1.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW1.\"STRINGU2\" IS NOT NULL AND\nQVIEW1.\"STRINGU1\" IS NOT NULL AND\nQVIEW1.\"UNIQUE2\" IS NOT NULL AND\n(QVIEW1.\"UNIQUE2\" = QVIEW2.\"UNIQUE2\") AND\n((QVIEW2.\"ONEPERCENT\" >= 0) AND (QVIEW2.\"ONEPERCENT\" < 20)) AND\nQVIEW2.\"EVENONEPERCENT\" IS NOT NULL AND\nQVIEW2.\"STRINGU2\" IS NOT NULL AND\nQVIEW2.\"STRINGU1\" IS NOT NULL\n) F_2 WHERE F_1.T0V0=F_2.T0V0",
  // {"repo_name": "gruter/tajo-cdh", "path": "tajo-core/src/test/resources/queries/TestCaseByCases/testTAJO718Case.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT\n  \"lineitem\".l_orderkey AS l_orderkey,\n  \"lineitem\".l_orderkey AS l_orderkey1,\n  COUNT (\"lineitem\".l_orderkey) AS T57801e5322bc50\nFROM\n  \"lineitem\"\nGROUP BY\n  l_orderkey, l_orderkey1\nORDER BY\n  l_orderkey, l_orderkey1",
  // {"repo_name": "edespino/gpdb", "path": "src/test/tinc/tincrepo/mpp/gpdb/tests/storage/filerep_end_to_end/ck_sync1/sql/ck_sync1_vacuum_uaocs_table.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select count(*) FROM pg_appendonly WHERE visimaprelid is not NULL AND visimapidxid is not NULL AND relid in (SELECT oid FROM pg_class WHERE relname ='ck_sync1_uaocs_vacuum1')",
  // {"repo_name": "edespino/gpdb", "path": "src/test/tinc/tincrepo/mpp/gpdb/tests/storage/filerep_end_to_end/ck_sync1/sql/ck_sync1_vacuum_uaocs_table.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select count(*) AS only_visi_tups_ins  from ck_sync1_uaocs_vacuum1",
  // {"repo_name": "edespino/gpdb", "path": "src/test/tinc/tincrepo/mpp/gpdb/tests/storage/filerep_end_to_end/ck_sync1/sql/ck_sync1_vacuum_uaocs_table.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select count(*) AS invisi_and_visi_tups_ins  from ck_sync1_uaocs_vacuum1",
  // {"repo_name": "edespino/gpdb", "path": "src/test/tinc/tincrepo/mpp/gpdb/tests/storage/filerep_end_to_end/ck_sync1/sql/ck_sync1_vacuum_uaocs_table.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select count(*) AS only_visi_tups_upd  from ck_sync1_uaocs_vacuum1",
  // {"repo_name": "edespino/gpdb", "path": "src/test/tinc/tincrepo/mpp/gpdb/tests/storage/filerep_end_to_end/ck_sync1/sql/ck_sync1_vacuum_uaocs_table.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select count(*) AS invisi_and_visi_tups  from ck_sync1_uaocs_vacuum1",
  // {"repo_name": "edespino/gpdb", "path": "src/test/tinc/tincrepo/mpp/gpdb/tests/storage/filerep_end_to_end/ck_sync1/sql/ck_sync1_vacuum_uaocs_table.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select count(*) AS only_visi_tups  from ck_sync1_uaocs_vacuum1",
  // {"repo_name": "edespino/gpdb", "path": "src/test/tinc/tincrepo/mpp/gpdb/tests/storage/filerep_end_to_end/ck_sync1/sql/ck_sync1_vacuum_uaocs_table.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select count(*) AS only_visi_tups_vacuum  from ck_sync1_uaocs_vacuum1",
  // {"repo_name": "edespino/gpdb", "path": "src/test/tinc/tincrepo/mpp/gpdb/tests/storage/filerep_end_to_end/ck_sync1/sql/ck_sync1_vacuum_uaocs_table.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select count(*) AS invisi_and_visi_tups_vacuum  from ck_sync1_uaocs_vacuum1",
  // {"repo_name": "ueshin/apache-spark", "path": "sql/core/src/test/resources/sql-tests/inputs/datetime-special.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select make_date(999999, 3, 18), make_date(-1, 1, 28)",
  // {"repo_name": "ueshin/apache-spark", "path": "sql/core/src/test/resources/sql-tests/inputs/datetime-special.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select make_timestamp(-1969, 12, 31, 16, 0, 0.0), make_timestamp(-15, 3, 18, 16, 0, 0.0), make_timestamp(99999, 3, 18, 12, 3, 17.0)",
  // {"repo_name": "Flammis/SqlServerVersionControl", "path": "CreateVersionControlSystem.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\n    @CurrentSchemaVersionID=[versioning].[LatestCompleteVersion].[SchemaVersionID],\n    @currentmajor=[versioning].[LatestCompleteVersion].[Major],\n    @currentminor=[versioning].[LatestCompleteVersion].[Minor],\n    @currentbuild=[versioning].[LatestCompleteVersion].[Build],\n    @currentrevision=[versioning].[LatestCompleteVersion].[Revision]\n  FROM [versioning].[LatestCompleteVersion]",
  // {"repo_name": "Flammis/SqlServerVersionControl", "path": "CreateVersionControlSystem.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\n    @CurrentSchemaVersionID=[versioning].[LatestVersion].[SchemaVersionID],\n    @currentmajor=[versioning].[LatestVersion].[Major],\n    @currentminor=[versioning].[LatestVersion].[Minor],\n    @currentbuild=[versioning].[LatestVersion].[Build],\n    @currentrevision=[versioning].[LatestVersion].[Revision]\n  FROM [versioning].[LatestVersion]",
  // {"repo_name": "Flammis/SqlServerVersionControl", "path": "CreateVersionControlSystem.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\n    @CurrentSchemaVersionID=[versioning].[LatestVersion].[SchemaVersionID],\n    @major=[versioning].[LatestVersion].[Major],\n    @minor=[versioning].[LatestVersion].[Minor],\n    @incomplete_build=[versioning].[LatestVersion].[Build],\n    @revision=[versioning].[LatestVersion].[Revision]\n  FROM [versioning].[LatestVersion]",
  // {"repo_name": "bartosz-wozniak/MiniPlanner", "path": "DbCreatingSchema/MiniPlanner_CreateSchema.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM dbo.Courses",
  // {"repo_name": "bartosz-wozniak/MiniPlanner", "path": "DbCreatingSchema/MiniPlanner_CreateSchema.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM dbo.Preferences",
  // {"repo_name": "bartosz-wozniak/MiniPlanner", "path": "DbCreatingSchema/MiniPlanner_CreateSchema.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM dbo.Registration",
  // {"repo_name": "LibraryOfCongress/gazetteer", "path": "conflate/geonames/find_partners.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select b.geonameid, c.geonameid, similarity(c.name, b.name) as similarity, st_distance_sphere(c.pt, b.pt) as dist\n    from geoname b, geoname c \n    where c.geonameid=(select a.geonameid from geoname a \n                    where a.pt && st_buffer(b.pt,5/111.1) and a.geonameid <> b.geonameid \n                    order by similarity(a.name,b.name) desc limit 1) limit 1000",
  // {"repo_name": "jdrew1303/sqlgenerate", "path": "test/sql/expressions/expression-parenthesis-1.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT *\nFROM `hats`\nWHERE\n  (hat OR ((shirt AND (shoes OR wig)) AND pants))",
  // {"repo_name": "Teleopti/Rhino.ServiceBus.SqlQueues", "path": "Rhino.ServiceBus.SqlQueues/Queue.AllStoredProcedures.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT @QueueId = QueueId FROM Queue.Queues WHERE QueueName = @Queue AND Endpoint = @Endpoint AND ParentQueueId IS NULL",
  // {"repo_name": "Teleopti/Rhino.ServiceBus.SqlQueues", "path": "Rhino.ServiceBus.SqlQueues/Queue.AllStoredProcedures.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT *\n    FROM Queue.SubscriptionStorage\n    WHERE ([Key]=@Key)\n    \n    DELETE FROM Queue.SubscriptionStorage\n    WHERE ([Key]=@Key)\nEND\nGO\n----\nIF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Queue].[MarkMessageAsReady]') AND type in (N'P', N'PC'))\nDROP PROCEDURE [Queue].[MarkMessageAsReady]\nGO\nCREATE PROCEDURE [Queue].[MarkMessageAsReady]\n\t@MessageId bigint\nAS\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "Teleopti/Rhino.ServiceBus.SqlQueues", "path": "Rhino.ServiceBus.SqlQueues/Queue.AllStoredProcedures.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT TOP 1 1 as 'y'\n\tFROM Queue.Messages\n\tWHERE (ExpiresAt IS NULL OR ExpiresAt < GetUtcDate())\n\tAND Processed=0\n\tAND ProcessingUntil<GetUtcDate()\n\tAND QueueId = @QueueId\n\tORDER BY CreatedAt ASC\nEND\nGO\n----\nIF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Queue].[PeekMessageById]') AND type in (N'P', N'PC'))\nDROP PROCEDURE [Queue].[PeekMessageById]\nGO\nCREATE PROCEDURE [Queue].[PeekMessageById]\n\t@MessageId bigint\nAS\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "Teleopti/Rhino.ServiceBus.SqlQueues", "path": "Rhino.ServiceBus.SqlQueues/Queue.AllStoredProcedures.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\n\t\tm.MessageId,\n\t\tm.QueueId,\n\t\tm.CreatedAt,\n\t\tm.ProcessingUntil,\n\t\tm.Processed,\n\t\tm.Headers,\n\t\tm.Payload,\n\t\tq.QueueName SubQueueName\n    FROM Queue.Messages m\n    LEFT JOIN Queue.Queues q\n\t\tON m.QueueId=q.QueueId\n\t\tAND q.ParentQueueId IS NOT NULL\n\tWHERE m.MessageId = @MessageId\n\tAND isnull(m.ExpiresAt,DATEADD(mi,1,GetUtcDate())) > GetUtcDate()\n\tAND m.Processed=0\n\tORDER BY m.CreatedAt ASC\nEND\nGO\n----\nIF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Queue].[RecieveMessage]') AND type in (N'P', N'PC'))\nDROP PROCEDURE [Queue].[RecieveMessage]\nGO\nCREATE PROCEDURE [Queue].[RecieveMessage]\n\t@QueueId int\nAS\nBEGIN\n\tSET NOCOUNT ON",
  // {"repo_name": "Teleopti/Rhino.ServiceBus.SqlQueues", "path": "Rhino.ServiceBus.SqlQueues/Queue.AllStoredProcedures.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT TOP 1 @MessageId = MessageId\n\tFROM Queue.Messages\n\tWHERE (ExpiresAt IS NULL OR ExpiresAt < GetUtcDate())\n\tAND Processed=0\n\tAND ProcessingUntil<GetUtcDate()\n\tAND QueueId=@QueueId\n\tORDER BY CreatedAt ASC\n\t\n\tif (@MessageId is not null)\n\t\tBEGIN\n\t\t\tUPDATE Queue.Messages\n\t\t\tSET ProcessingUntil = DateAdd(mi,1,GetUtcDate()),\n\t\t\tProcessedCount=ProcessedCount+1\n\t\t\tWHERE MessageId=@MessageId AND ProcessingUntil<GetUtcDate()\n\t\t\tIF (@@ROWCOUNT > 0)\n\t\t\t\tBEGIN\n\t\t\t\t\tSELECT MessageId,\n\t\t\t\tCreatedAt,\n\t\t\t\tProcessingUntil,\n\t\t\t\tProcessedCount,\n\t\t\t\tProcessed,\n\t\t\t\tHeaders,\n\t\t\t\tPayload\n\t\t\t\t\tFROM Queue.Messages\n\t\t\t\t\tWHERE MessageId=@MessageId\n\t\t\t\tEND\n\t\t\tELSE\n\t\t\t\tBEGIN\n\t\t\t\t\tSELECT TOP 0 MessageId,\n\t\t\t\tCreatedAt,\n\t\t\t\tProcessingUntil,\n\t\t\t\tProcessedCount,\n\t\t\t\tProcessed,\n\t\t\t\tHeaders,\n\t\t\t\tPayload\n\t\t\t\t\tFROM Queue.Messages",
  // {"repo_name": "analyst-collective/dbt", "path": "performance/projects/01_2000_simple_models/models/path_147/node_1477.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select 1 as id\nunion all\nselect * from {{ ref('node_0') }}\nunion all\nselect * from {{ ref('node_3') }}\nunion all\nselect * from {{ ref('node_6') }}\nunion all\nselect * from {{ ref('node_8') }}\nunion all\nselect * from {{ ref('node_17') }}\nunion all\nselect * from {{ ref('node_20') }}\nunion all\nselect * from {{ ref('node_78') }}\nunion all\nselect * from {{ ref('node_97') }}\nunion all\nselect * from {{ ref('node_756') }}\nunion all\nselect * from {{ ref('node_1260') }}",
  // {"repo_name": "eisnerh/PCT_315", "path": "BD Nueva/gasto_operativo.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT DISTINCT\n    (tipo_gasto)\nFROM\n    pct3.gasto_operativo\nWHERE\n    pct3.gasto_operativo.tipo_gasto LIKE 'Gasto OPerativo'",
  // {"repo_name": "jeremydmiller/pg-events", "path": "lib/sql/reset_events.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select pge_seed_rolling_buffer()",
  // {"repo_name": "jeremydmiller/pg-events", "path": "lib/sql/reset_events.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select pge_clean_all_events()",
  // {"repo_name": "JAVA201708/Homework", "path": "201710/20171011/Team2/QiHuiLiang/examples/ex01/Oracle.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM emp WHERE deptno = 30",
  // {"repo_name": "JAVA201708/Homework", "path": "201710/20171011/Team2/QiHuiLiang/examples/ex01/Oracle.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM emp WHERE sal >= 2000 AND sal >=4000",
  // {"repo_name": "JAVA201708/Homework", "path": "201710/20171011/Team2/QiHuiLiang/examples/ex01/Oracle.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM emp WHERE ename LIKE '_IN%'",
  // {"repo_name": "JAVA201708/Homework", "path": "201710/20171011/Team2/QiHuiLiang/examples/ex01/Oracle.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM tbl_teacher WHERE tname LIKE '%o\\_a%' ESCAPE '\\'",
  // {"repo_name": "JAVA201708/Homework", "path": "201710/20171011/Team2/QiHuiLiang/examples/ex01/Oracle.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM emp ORDER BY sal DESC",
  // {"repo_name": "JAVA201708/Homework", "path": "201710/20171011/Team2/QiHuiLiang/examples/ex01/Oracle.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM emp ORDER BY job, sal",
  // {"repo_name": "JAVA201708/Homework", "path": "201710/20171011/Team2/QiHuiLiang/examples/ex01/Oracle.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT empno, LPAD(sal, 10, '*') fill FROM emp",
  // {"repo_name": "JAVA201708/Homework", "path": "201710/20171011/Team2/QiHuiLiang/examples/ex01/Oracle.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT empno, RPAD(sal, 10, '0') fill FROM emp",
  // {"repo_name": "JAVA201708/Homework", "path": "201710/20171011/Team2/QiHuiLiang/examples/ex01/Oracle.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT empno, ename, MONTHS_BETWEEN(SYSDATE, hiredate)/7 AS WEEKS FROM emp",
  // {"repo_name": "JAVA201708/Homework", "path": "201710/20171011/Team2/QiHuiLiang/examples/ex01/Oracle.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select id, (to_number(age) + 3) age from tbl_test",
  // {"repo_name": "JAVA201708/Homework", "path": "201710/20171011/Team2/QiHuiLiang/examples/ex01/Oracle.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT ename,TO_CHAR(sal, '$99,999.00') SAL\r\nFROM  emp WHERE  ename = 'WARD'",
  // {"repo_name": "JAVA201708/Homework", "path": "201710/20171011/Team2/QiHuiLiang/examples/ex01/Oracle.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT ename, sal,\r\n       DECODE(sal <= 1500, '\u5e95\u85aa\u9636\u5c42',\r\n              sal > 1500 AND sal < 3000, '\u4e2d\u85aa\u9636\u5c42',\r\n             sal >= 3000, '\u9ad8\u85aa\u9636\u5c42'\r\n              )\r\n      newsal\r\nFROM emp",
  // {"repo_name": "JAVA201708/Homework", "path": "201710/20171011/Team2/QiHuiLiang/examples/ex01/Oracle.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT MIN(sal) FROM emp",
  // {"repo_name": "JAVA201708/Homework", "path": "201710/20171011/Team2/QiHuiLiang/examples/ex01/Oracle.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT AVG(sal) FROM emp",
  // {"repo_name": "JAVA201708/Homework", "path": "201710/20171011/Team2/QiHuiLiang/examples/ex01/Oracle.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT SUM(sal) FROM emp",
  // {"repo_name": "JAVA201708/Homework", "path": "201710/20171011/Team2/QiHuiLiang/examples/ex01/Oracle.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT MIN(hiredate), MAX(hiredate) FROM\temp",
  // {"repo_name": "nubiancc/frapid", "path": "src/Frapid.Web/db/meta/1.x/1.0/src/06.functions-and-logic/add_localized_resource.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT resource_id INTO _resource_id\n    FROM i18n.resources\n    WHERE UPPER(resource_class) = UPPER(_resource_class)\n    AND UPPER(key) = UPPER(_key)",
  // {"repo_name": "octonion/baseball-public", "path": "njcaa/audit/missing_opponent_names.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select opponent,\ncount(*) as n\nfrom njcaa.game_logs gl\nfull outer join\nnjcaa.schools s\n  on (s.school_name)=(gl.opponent)\nwhere s.school_name is null\nand winning_score is not null\ngroup by opponent\norder by n desc",
  // {"repo_name": "cchang738/drill-test-framework", "path": "framework/resources/Functional/group_by_alias/group_by_having_alias.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select intField i, count(intField) ci, strField s, count(strField) cs from dfs.drillTestDir.`DRILL-1248/group_by_parquet` group by i, 3 having ci > 1",
  // {"repo_name": "ontop/ontop-examples", "path": "iswc-2017-cost/wisconsin-experiment/3-atoms/sql/ucq-unfoldings/ucq-79.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM (SELECT *\nFROM (\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t16_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"string4\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t13_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t10_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu2\", qview1.\"stringu1\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t7_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"string4\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t4_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"string4\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t17_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"string4\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t14_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t11_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu2\", qview2.\"stringu1\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t8_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"string4\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t5_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\nqview2.\"string4\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu2\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t18_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"string4\", qview3.\"stringu1\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t15_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"string4\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t12_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu2\", qview3.\"stringu1\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t9_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"string4\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t6_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL AND\nqview3.\"string4\" IS NOT NULL\nUNION\nSELECT qview1.\"unique2\", qview1.\"evenonepercent\", qview1.\"stringu1\", qview1.\"stringu2\", qview2.\"evenonepercent\", qview2.\"stringu1\", qview2.\"stringu2\", qview3.\"evenonepercent\", qview3.\"stringu1\", qview3.\"stringu2\"\nFROM\n\"public\".\"t1_1m\" qview1,\n\"public\".\"t2_1m\" qview2,\n\"public\".\"t3_1m\" qview3\nWHERE\n((qview1.\"onepercent\" >= 0) AND (qview1.\"onepercent\" < 20)) AND\nqview1.\"evenonepercent\" IS NOT NULL AND\nqview1.\"stringu2\" IS NOT NULL AND\nqview1.\"stringu1\" IS NOT NULL AND\nqview1.\"unique2\" IS NOT NULL AND\n(qview1.\"unique2\" = qview2.\"unique2\") AND\n((qview2.\"onepercent\" >= 0) AND (qview2.\"onepercent\" < 20)) AND\nqview2.\"evenonepercent\" IS NOT NULL AND\nqview2.\"stringu2\" IS NOT NULL AND\nqview2.\"stringu1\" IS NOT NULL AND\n(qview1.\"unique2\" = qview3.\"unique2\") AND\n((qview3.\"onepercent\" >= 0) AND (qview3.\"onepercent\" < 20)) AND\nqview3.\"evenonepercent\" IS NOT NULL AND\nqview3.\"stringu2\" IS NOT NULL AND\nqview3.\"stringu1\" IS NOT NULL\n) SUB_QVIEW\n\n) f_1",
  // {"repo_name": "overdrive3000/skytools", "path": "sql/pgq_ext/sql/test_pgq_ext.sql", "language": "SQL", "license": "isc", "dataset": "codeparrot/github-code"}
  "select pgq_ext.set_batch_done('c', 1)",
  // {"repo_name": "overdrive3000/skytools", "path": "sql/pgq_ext/sql/test_pgq_ext.sql", "language": "SQL", "license": "isc", "dataset": "codeparrot/github-code"}
  "select pgq_ext.is_batch_done('c', 1)",
  // {"repo_name": "overdrive3000/skytools", "path": "sql/pgq_ext/sql/test_pgq_ext.sql", "language": "SQL", "license": "isc", "dataset": "codeparrot/github-code"}
  "select pgq_ext.is_batch_done('c', 2)",
  // {"repo_name": "overdrive3000/skytools", "path": "sql/pgq_ext/sql/test_pgq_ext.sql", "language": "SQL", "license": "isc", "dataset": "codeparrot/github-code"}
  "select pgq_ext.set_batch_done('c', 2)",
  // {"repo_name": "overdrive3000/skytools", "path": "sql/pgq_ext/sql/test_pgq_ext.sql", "language": "SQL", "license": "isc", "dataset": "codeparrot/github-code"}
  "select pgq_ext.is_event_done('c', 3, 101)",
  // {"repo_name": "overdrive3000/skytools", "path": "sql/pgq_ext/sql/test_pgq_ext.sql", "language": "SQL", "license": "isc", "dataset": "codeparrot/github-code"}
  "select pgq_ext.set_event_done('c', 3, 101)",
  // {"repo_name": "overdrive3000/skytools", "path": "sql/pgq_ext/sql/test_pgq_ext.sql", "language": "SQL", "license": "isc", "dataset": "codeparrot/github-code"}
  "select pgq_ext.set_batch_done('c', 3)",
  // {"repo_name": "overdrive3000/skytools", "path": "sql/pgq_ext/sql/test_pgq_ext.sql", "language": "SQL", "license": "isc", "dataset": "codeparrot/github-code"}
  "select * from pgq_ext.completed_event order by 1,2",
  // {"repo_name": "overdrive3000/skytools", "path": "sql/pgq_ext/sql/test_pgq_ext.sql", "language": "SQL", "license": "isc", "dataset": "codeparrot/github-code"}
  "select pgq_ext.set_last_tick('c', 1)",
  // {"repo_name": "overdrive3000/skytools", "path": "sql/pgq_ext/sql/test_pgq_ext.sql", "language": "SQL", "license": "isc", "dataset": "codeparrot/github-code"}
  "select pgq_ext.get_last_tick('c')",
  // {"repo_name": "overdrive3000/skytools", "path": "sql/pgq_ext/sql/test_pgq_ext.sql", "language": "SQL", "license": "isc", "dataset": "codeparrot/github-code"}
  "select pgq_ext.set_last_tick('c', 2)",
  // {"repo_name": "overdrive3000/skytools", "path": "sql/pgq_ext/sql/test_pgq_ext.sql", "language": "SQL", "license": "isc", "dataset": "codeparrot/github-code"}
  "select pgq_ext.set_last_tick('c', NULL)",
  // {"repo_name": "Agirish/drill-test-framework", "path": "framework/resources/Functional/cttas/cttas_06_wopby.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT col_chr FROM temp_tbl_6wop",
  // {"repo_name": "papicella/snappy-store", "path": "gemfirexd/tools/src/testing/java/org/apache/derbyTesting/functionTests/tests/store/rlliso3multi.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from test_0",
  // {"repo_name": "papicella/snappy-store", "path": "gemfirexd/tools/src/testing/java/org/apache/derbyTesting/functionTests/tests/store/rlliso3multi.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select a from a",
  // {"repo_name": "papicella/snappy-store", "path": "gemfirexd/tools/src/testing/java/org/apache/derbyTesting/functionTests/tests/store/rlliso3multi.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from test_4",
  // {"repo_name": "papicella/snappy-store", "path": "gemfirexd/tools/src/testing/java/org/apache/derbyTesting/functionTests/tests/store/rlliso3multi.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select a from test_5",
  // {"repo_name": "papicella/snappy-store", "path": "gemfirexd/tools/src/testing/java/org/apache/derbyTesting/functionTests/tests/store/rlliso3multi.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from lock_table order by tabname, type desc, mode, cnt, lockname",
  // {"repo_name": "papicella/snappy-store", "path": "gemfirexd/tools/src/testing/java/org/apache/derbyTesting/functionTests/tests/store/rlliso3multi.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from lock_table order by tabname, type desc, mode, cnt, lockname",
  // {"repo_name": "papicella/snappy-store", "path": "gemfirexd/tools/src/testing/java/org/apache/derbyTesting/functionTests/tests/store/rlliso3multi.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select type, cnt, mode, tabname, lockname, state from lock_table2 order by tabname, type desc, mode, cnt, lockname",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/tinc/tincrepo/dml/functional/sql_partition/mpp21090_drop_multicol_dml_int8_heap.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM mpp21090_drop_multicol_dml_int8 ORDER BY 1,2,3,4",
  // {"repo_name": "cjcjameson/gpdb", "path": "src/test/tinc/tincrepo/dml/functional/sql_partition/mpp21090_drop_multicol_dml_int8_heap.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM mpp21090_drop_multicol_dml_int8 ORDER BY 1,2,3",
  // {"repo_name": "lpxz/grail-derby104", "path": "java/testing/org/apache/derbyTesting/functionTests/tests/nist/cdr002.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT GRADE FROM SUN.STAFF6\n        WHERE GRADE > 10",
  // {"repo_name": "lpxz/grail-derby104", "path": "java/testing/org/apache/derbyTesting/functionTests/tests/nist/cdr002.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT COUNT(*)\n        FROM SUN.STAFF7",
  // {"repo_name": "lpxz/grail-derby104", "path": "java/testing/org/apache/derbyTesting/functionTests/tests/nist/cdr002.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT COUNT(*) FROM SUN.STAFF8",
  // {"repo_name": "Quikling/gpdb", "path": "src/test/tinc/tincrepo/mpp/gpdb/tests/catalog/udf_exception_handling/sql/udf_exception_handling_protocol_seg1.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select test_protocol_allseg(1, 2,'f','abc',100,0)",
  // {"repo_name": "Quikling/gpdb", "path": "src/test/tinc/tincrepo/mpp/gpdb/tests/catalog/udf_exception_handling/sql/udf_exception_handling_protocol_seg1.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from employees",
  // {"repo_name": "Quikling/gpdb", "path": "src/test/tinc/tincrepo/mpp/gpdb/tests/catalog/udf_exception_handling/sql/udf_exception_handling_protocol_seg1.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from shops order by id",
  // {"repo_name": "sashker/yeti-web", "path": "sql/main/50_51.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select * from switch8.preprocess_all()",
  // {"repo_name": "SPDEVGUY/CALI-AI", "path": "Database/SQL/Alter/06-Procs/00-Generated/Data/Query/[Data].[Query_SelectAll].sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\t\r\n\t\t\t[QueryId],\r\n\t\t\t[Text],\r\n\t\t\t[PoviderSource],\r\n\t\t\t[ProcessorUsed],\r\n\t\t\t[Exceptions],\r\n\t\t\t[IsSuccess]\r\n\tFROM\t[Data].[Query]\r\n\r\nEND",
  // {"repo_name": "showyou/hama_db", "path": "analyzer/replace_markov.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select markov.id, markov.count,count(*) into mid,mcnt,cnt from markov where markov.now=nows and markov.next=nexts",
  // {"repo_name": "miguelarauj1o/UOJ", "path": "src/URI_2602 - (12502556) - Accepted.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT name FROM customers WHERE state='RS'",
  // {"repo_name": "50wu/gpdb", "path": "src/test/regress/sql/partition_storage.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select c.oid::regclass, relkind, amname, reloptions from pg_class c left join pg_am am on am.oid = c.relam\n where c.oid in ( select oid from pg_class where   relname in  ( 'pt_heap_tab_rng_1_prt_heap', 'pt_heap_tab_rng_1_prt_ao','pt_heap_tab_rng_1_prt_co'))",
  // {"repo_name": "50wu/gpdb", "path": "src/test/regress/sql/partition_storage.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select c.oid::regclass, relkind, amname, reloptions from pg_class c left join pg_am am on am.oid = c.relam\n where c.oid in ( select oid from pg_class where   relname in ( 'pt_heap_tab_rng_1_prt_heap1' ,'pt_heap_tab_rng_1_prt_heap2' ,'pt_heap_tab_rng_1_prt_ao1', 'pt_heap_tab_rng_1_prt_ao2', 'pt_heap_tab_rng_1_prt_co1', 'pt_heap_tab_rng_1_prt_co2'))",
  // {"repo_name": "50wu/gpdb", "path": "src/test/regress/sql/partition_storage.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select c.oid::regclass, relkind, amname, reloptions from pg_class c left join pg_am am on am.oid = c.relam\n where c.oid in ( select oid from pg_class where   relname in  ( 'pt_ao_tab_rng_1_prt_heap', 'pt_ao_tab_rng_1_prt_ao','pt_ao_tab_rng_1_prt_co'))",
  // {"repo_name": "50wu/gpdb", "path": "src/test/regress/sql/partition_storage.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select c.oid::regclass, relkind, amname, reloptions from pg_class c left join pg_am am on am.oid = c.relam\n where c.oid in ( select oid from pg_class where   relname in ( 'pt_ao_tab_rng_1_prt_heap1' ,'pt_ao_tab_rng_1_prt_heap2' ,'pt_ao_tab_rng_1_prt_ao1', 'pt_ao_tab_rng_1_prt_ao2', 'pt_ao_tab_rng_1_prt_co1', 'pt_ao_tab_rng_1_prt_co2'))",
  // {"repo_name": "50wu/gpdb", "path": "src/test/regress/sql/partition_storage.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select c.oid::regclass, relkind, amname, reloptions from pg_class c left join pg_am am on am.oid = c.relam\n where c.oid in ( select oid from pg_class where   relname in  ( 'pt_co_tab_rng_1_prt_heap', 'pt_co_tab_rng_1_prt_ao','pt_co_tab_rng_1_prt_co'))",
  // {"repo_name": "50wu/gpdb", "path": "src/test/regress/sql/partition_storage.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select c.oid::regclass, relkind, amname, reloptions from pg_class c left join pg_am am on am.oid = c.relam\n where c.oid in ( select oid from pg_class where   relname in ( 'pt_co_tab_rng_1_prt_heap1' ,'pt_co_tab_rng_1_prt_heap2' ,'pt_co_tab_rng_1_prt_ao1', 'pt_co_tab_rng_1_prt_ao2', 'pt_co_tab_rng_1_prt_co1', 'pt_co_tab_rng_1_prt_co2'))",
  // {"repo_name": "Agirish/drill-test-framework", "path": "framework/resources/Functional/union_all/prq_union_all/prqUAllprq_5.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select sum(col_int), col_boln from (select col_int, col_bgint, col_char, col_vchar, col_tmstmp, col_date, col_boln, col_dbl from `prqUnAll_0.parquet` union all select col_int, col_bgint, col_char, col_vchar, col_tmstmp, col_date, col_boln, col_dbl from `prqUnAll_1.parquet` union all select col_int, col_bgint, col_char, col_vchar, col_tmstmp, col_date, col_boln, col_dbl from `prqUnAll_0.parquet` union all select col_int, col_bgint, col_char, col_vchar, col_tmstmp, col_date, col_boln, col_dbl from `prqUnAll_1.parquet` union all select col_int, col_bgint, col_char, col_vchar, col_tmstmp, col_date, col_boln, col_dbl from `prqUnAll_0.parquet` union all select col_int, col_bgint, col_char, col_vchar, col_tmstmp, col_date, col_boln, col_dbl from `prqUnAll_1.parquet`) tmp group by tmp.col_boln",
  // {"repo_name": "rubikloud/gpdb", "path": "src/test/regress/sql/union.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 1 AS one UNION SELECT 1",
  // {"repo_name": "rubikloud/gpdb", "path": "src/test/regress/sql/union.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 1 AS two UNION ALL SELECT 2",
  // {"repo_name": "rubikloud/gpdb", "path": "src/test/regress/sql/union.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 1 AS two UNION ALL SELECT 1",
  // {"repo_name": "rubikloud/gpdb", "path": "src/test/regress/sql/union.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 1 AS three UNION SELECT 2 UNION SELECT 3",
  // {"repo_name": "rubikloud/gpdb", "path": "src/test/regress/sql/union.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 1 AS two UNION SELECT 2 UNION SELECT 2",
  // {"repo_name": "rubikloud/gpdb", "path": "src/test/regress/sql/union.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 1 AS three UNION SELECT 2 UNION ALL SELECT 2",
  // {"repo_name": "rubikloud/gpdb", "path": "src/test/regress/sql/union.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 1.1 AS two UNION SELECT 2.2",
  // {"repo_name": "rubikloud/gpdb", "path": "src/test/regress/sql/union.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 1 AS two UNION SELECT 2.2",
  // {"repo_name": "rubikloud/gpdb", "path": "src/test/regress/sql/union.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 1 AS one UNION SELECT 1.0::float8",
  // {"repo_name": "rubikloud/gpdb", "path": "src/test/regress/sql/union.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 1.1 AS two UNION ALL SELECT 2",
  // {"repo_name": "rubikloud/gpdb", "path": "src/test/regress/sql/union.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 1.0::float8 AS two UNION ALL SELECT 1",
  // {"repo_name": "rubikloud/gpdb", "path": "src/test/regress/sql/union.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 1.1 AS three UNION SELECT 2 UNION SELECT 3",
  // {"repo_name": "rubikloud/gpdb", "path": "src/test/regress/sql/union.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 1.1::float8 AS two UNION SELECT 2 UNION SELECT 2.0::float8",
  // {"repo_name": "rubikloud/gpdb", "path": "src/test/regress/sql/union.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 1.1 AS three UNION SELECT 2 UNION ALL SELECT 2",
  // {"repo_name": "rubikloud/gpdb", "path": "src/test/regress/sql/union.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 1.1 AS two UNION (SELECT 2 UNION ALL SELECT 2)",
  // {"repo_name": "rubikloud/gpdb", "path": "src/test/regress/sql/union.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT f1 AS ten FROM FLOAT8_TBL\nUNION ALL\nSELECT f1 FROM FLOAT8_TBL",
  // {"repo_name": "rubikloud/gpdb", "path": "src/test/regress/sql/union.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT f1 AS nine FROM FLOAT8_TBL\nUNION\nSELECT f1 FROM INT4_TBL",
  // {"repo_name": "rubikloud/gpdb", "path": "src/test/regress/sql/union.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT f1 AS ten FROM FLOAT8_TBL\nUNION ALL\nSELECT f1 FROM INT4_TBL",
  // {"repo_name": "rubikloud/gpdb", "path": "src/test/regress/sql/union.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT f1 AS five FROM FLOAT8_TBL\n  WHERE f1 BETWEEN -1e6 AND 1e6\nUNION\nSELECT f1 FROM INT4_TBL\n  WHERE f1 BETWEEN 0 AND 1000000",
  // {"repo_name": "rubikloud/gpdb", "path": "src/test/regress/sql/union.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT CAST(f1 AS char(4)) AS three FROM VARCHAR_TBL\nUNION\nSELECT f1 FROM CHAR_TBL",
  // {"repo_name": "rubikloud/gpdb", "path": "src/test/regress/sql/union.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT f1 AS three FROM VARCHAR_TBL\nUNION\nSELECT CAST(f1 AS varchar) FROM CHAR_TBL",
  // {"repo_name": "rubikloud/gpdb", "path": "src/test/regress/sql/union.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT f1 AS eight FROM VARCHAR_TBL\nUNION ALL\nSELECT f1 FROM CHAR_TBL",
  // {"repo_name": "rubikloud/gpdb", "path": "src/test/regress/sql/union.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT f1 AS five FROM TEXT_TBL\nUNION\nSELECT f1 FROM VARCHAR_TBL\nUNION\nSELECT TRIM(TRAILING FROM f1) FROM CHAR_TBL",
  // {"repo_name": "rubikloud/gpdb", "path": "src/test/regress/sql/union.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT q2 FROM int8_tbl INTERSECT ALL SELECT q1 FROM int8_tbl",
  // {"repo_name": "rubikloud/gpdb", "path": "src/test/regress/sql/union.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT q2 FROM int8_tbl EXCEPT SELECT q1 FROM int8_tbl",
  // {"repo_name": "rubikloud/gpdb", "path": "src/test/regress/sql/union.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT q2 FROM int8_tbl EXCEPT ALL SELECT q1 FROM int8_tbl",
  // {"repo_name": "rubikloud/gpdb", "path": "src/test/regress/sql/union.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT q2 FROM int8_tbl EXCEPT ALL SELECT DISTINCT q1 FROM int8_tbl",
  // {"repo_name": "rubikloud/gpdb", "path": "src/test/regress/sql/union.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT q1 FROM int8_tbl EXCEPT SELECT q2 FROM int8_tbl",
  // {"repo_name": "rubikloud/gpdb", "path": "src/test/regress/sql/union.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT q1 FROM int8_tbl EXCEPT ALL SELECT q2 FROM int8_tbl",
  // {"repo_name": "rubikloud/gpdb", "path": "src/test/regress/sql/union.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT q1 FROM int8_tbl EXCEPT ALL SELECT DISTINCT q2 FROM int8_tbl",
  // {"repo_name": "rubikloud/gpdb", "path": "src/test/regress/sql/union.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT f1 FROM float8_tbl EXCEPT SELECT f1 FROM int4_tbl",
  // {"repo_name": "rubikloud/gpdb", "path": "src/test/regress/sql/union.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT q1 FROM int8_tbl INTERSECT (((SELECT q2 FROM int8_tbl UNION ALL SELECT q2 FROM int8_tbl)))",
  // {"repo_name": "rubikloud/gpdb", "path": "src/test/regress/sql/union.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT q1 FROM int8_tbl UNION ALL SELECT q2 FROM int8_tbl EXCEPT SELECT q1 FROM int8_tbl",
  // {"repo_name": "rubikloud/gpdb", "path": "src/test/regress/sql/union.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT q1 FROM int8_tbl UNION ALL (((SELECT q2 FROM int8_tbl EXCEPT SELECT q1 FROM int8_tbl)))",
  // {"repo_name": "stefan-platon/Proiect-TW", "path": "SQL/populate_database.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select max(tutor_id) into v_max_tutor_id from tutor",
  // {"repo_name": "bkiers/sqlite-parser", "path": "src/test/resources/index.test_103.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT count(*) FROM sqlite_master WHERE tbl_name = 't7' AND type = 'index'",
  // {"repo_name": "Steffkn/SoftUni", "path": "04.CSharpDB/01.BasicsMSSQL/01.DataDefinitionAndDataTypes/16.SoftUni.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM Departments",
  // {"repo_name": "Steffkn/SoftUni", "path": "04.CSharpDB/01.BasicsMSSQL/01.DataDefinitionAndDataTypes/16.SoftUni.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM Employees",
  // {"repo_name": "Steffkn/SoftUni", "path": "04.CSharpDB/01.BasicsMSSQL/01.DataDefinitionAndDataTypes/16.SoftUni.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM Departments\nORDER BY [Name]",
  // {"repo_name": "Steffkn/SoftUni", "path": "04.CSharpDB/01.BasicsMSSQL/01.DataDefinitionAndDataTypes/16.SoftUni.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM Employees\nORDER BY Salary DESC",
  // {"repo_name": "Steffkn/SoftUni", "path": "04.CSharpDB/01.BasicsMSSQL/01.DataDefinitionAndDataTypes/16.SoftUni.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT [Name] FROM Departments\nORDER BY [Name]",
  // {"repo_name": "Steffkn/SoftUni", "path": "04.CSharpDB/01.BasicsMSSQL/01.DataDefinitionAndDataTypes/16.SoftUni.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT FirstName, LastName, JobTitle, Salary FROM Employees\nORDER BY Salary DESC",
  // {"repo_name": "mbizhani/Metis", "path": "module/src/test/resources/sample_oracle.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT count(1)\n  INTO cnt_st\n  FROM t_state",
  // {"repo_name": "mbizhani/Metis", "path": "module/src/test/resources/sample_oracle.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT count(1)\n  INTO cnt_pr\n  FROM t_person",
  // {"repo_name": "mbizhani/Metis", "path": "module/src/test/resources/sample_oracle.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT count(1)\n  INTO cnt_ct\n  FROM t_city",
  // {"repo_name": "adamsardar/perl-libs-custom", "path": "EnsemblAPI/ensembl-variation/sql/remove_wrong_variations.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 'Remember to run again compressed_genotype script to remove variations from the compressed table' as ''",
  // {"repo_name": "bdrillard/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/postgreSQL/int4.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT '' AS five, * FROM INT4_TBL",
  // {"repo_name": "bdrillard/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/postgreSQL/int4.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT '' AS four, i.* FROM INT4_TBL i WHERE i.f1 <> smallint('0')",
  // {"repo_name": "bdrillard/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/postgreSQL/int4.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT '' AS four, i.* FROM INT4_TBL i WHERE i.f1 <> int('0')",
  // {"repo_name": "bdrillard/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/postgreSQL/int4.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT '' AS one, i.* FROM INT4_TBL i WHERE i.f1 = smallint('0')",
  // {"repo_name": "bdrillard/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/postgreSQL/int4.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT '' AS one, i.* FROM INT4_TBL i WHERE i.f1 = int('0')",
  // {"repo_name": "bdrillard/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/postgreSQL/int4.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT '' AS two, i.* FROM INT4_TBL i WHERE i.f1 < smallint('0')",
  // {"repo_name": "bdrillard/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/postgreSQL/int4.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT '' AS two, i.* FROM INT4_TBL i WHERE i.f1 < int('0')",
  // {"repo_name": "bdrillard/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/postgreSQL/int4.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT '' AS three, i.* FROM INT4_TBL i WHERE i.f1 <= smallint('0')",
  // {"repo_name": "bdrillard/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/postgreSQL/int4.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT '' AS three, i.* FROM INT4_TBL i WHERE i.f1 <= int('0')",
  // {"repo_name": "bdrillard/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/postgreSQL/int4.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT '' AS two, i.* FROM INT4_TBL i WHERE i.f1 > smallint('0')",
  // {"repo_name": "bdrillard/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/postgreSQL/int4.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT '' AS two, i.* FROM INT4_TBL i WHERE i.f1 > int('0')",
  // {"repo_name": "bdrillard/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/postgreSQL/int4.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT '' AS three, i.* FROM INT4_TBL i WHERE i.f1 >= smallint('0')",
  // {"repo_name": "bdrillard/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/postgreSQL/int4.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT '' AS three, i.* FROM INT4_TBL i WHERE i.f1 >= int('0')",
  // {"repo_name": "bdrillard/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/postgreSQL/int4.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT '' AS five, i.f1, i.f1 * smallint('2') AS x FROM INT4_TBL i\nWHERE abs(f1) < 1073741824",
  // {"repo_name": "bdrillard/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/postgreSQL/int4.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT '' AS five, i.f1, i.f1 * int('2') AS x FROM INT4_TBL i\nWHERE abs(f1) < 1073741824",
  // {"repo_name": "bdrillard/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/postgreSQL/int4.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT '' AS five, i.f1, i.f1 + smallint('2') AS x FROM INT4_TBL i\nWHERE f1 < 2147483646",
  // {"repo_name": "bdrillard/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/postgreSQL/int4.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT '' AS five, i.f1, i.f1 + int('2') AS x FROM INT4_TBL i\nWHERE f1 < 2147483646",
  // {"repo_name": "bdrillard/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/postgreSQL/int4.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT '' AS five, i.f1, i.f1 - smallint('2') AS x FROM INT4_TBL i\nWHERE f1 > -2147483647",
  // {"repo_name": "bdrillard/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/postgreSQL/int4.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT '' AS five, i.f1, i.f1 - int('2') AS x FROM INT4_TBL i\nWHERE f1 > -2147483647",
  // {"repo_name": "bdrillard/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/postgreSQL/int4.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT '' AS five, i.f1, i.f1 / smallint('2') AS x FROM INT4_TBL i",
  // {"repo_name": "bdrillard/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/postgreSQL/int4.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT '' AS five, i.f1, i.f1 / int('2') AS x FROM INT4_TBL i",
  // {"repo_name": "bdrillard/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/postgreSQL/int4.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 4-2 AS two",
  // {"repo_name": "bdrillard/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/postgreSQL/int4.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 2- -1 AS three",
  // {"repo_name": "bdrillard/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/postgreSQL/int4.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 2 - -2 AS four",
  // {"repo_name": "bdrillard/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/postgreSQL/int4.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT smallint('2') * smallint('2') = smallint('16') / smallint('4') AS true",
  // {"repo_name": "bdrillard/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/postgreSQL/int4.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT int('2') * smallint('2') = smallint('16') / int('4') AS true",
  // {"repo_name": "bdrillard/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/postgreSQL/int4.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT smallint('2') * int('2') = int('16') / smallint('4') AS true",
  // {"repo_name": "bdrillard/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/postgreSQL/int4.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 AS ten",
  // {"repo_name": "bdrillard/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/postgreSQL/int4.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 2 + 2 / 2 AS three",
  // {"repo_name": "bdrillard/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/postgreSQL/int4.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT (2 + 2) / 2 AS two",
  // {"repo_name": "bdrillard/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/postgreSQL/int4.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT string(int(shiftleft(int(-1), 31))+1)",
  // {"repo_name": "bdrillard/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/postgreSQL/int4.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT int(-2147483648) % int(-1)",
  // {"repo_name": "bdrillard/spark", "path": "sql/core/src/test/resources/sql-tests/inputs/postgreSQL/int4.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT int(-2147483648) % smallint(-1)",
  // {"repo_name": "VigneshMohan1/spark-branch-2.3", "path": "sql/core/target/scala-2.11/test-classes/sql-tests/inputs/order-by-ordinal.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from data order by 1 desc",
  // {"repo_name": "VigneshMohan1/spark-branch-2.3", "path": "sql/core/target/scala-2.11/test-classes/sql-tests/inputs/order-by-ordinal.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from data order by -1",
  // {"repo_name": "VigneshMohan1/spark-branch-2.3", "path": "sql/core/target/scala-2.11/test-classes/sql-tests/inputs/order-by-ordinal.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from data order by 3",
  // {"repo_name": "VigneshMohan1/spark-branch-2.3", "path": "sql/core/target/scala-2.11/test-classes/sql-tests/inputs/order-by-ordinal.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from data sort by 0",
  // {"repo_name": "martinski74/SoftUni", "path": "C#_DB_Fundamentals/DatabasesBasic-SQL_Server/Subqueries_Joins/15.Continents_Currences.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT ContinentCode, CurrencyCode, CurrencyUsage FROM\n(SELECT ContinentCode, CurrencyCode, CurrencyUsage, DENSE_RANK() OVER (PARTITION BY ContinentCode ORDER BY CurrencyUsage DESC) AS [Rank] FROM\n(SELECT ContinentCode, CurrencyCode, COUNT(CountryCode) AS CurrencyUsage FROM Countries\nGROUP BY ContinentCode, CurrencyCode\nHAVING COUNT(CountryCode) > 1) AS cudata) as rankedcudata\nWHERE [Rank] = 1",
  // {"repo_name": "jiadaizhao/LeetCode", "path": "0101-0200/0184-Department Highest Salary/0184-Department Highest Salary.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT Department.Name AS Department,\n       Employee.name AS Employee,\n       Salary\nFROM Employee\nJOIN Department ON Employee.DepartmentId = Department.Id\nWHERE (Employee.DepartmentId, Salary) IN\n(SELECT DepartmentId, MAX(Salary)\nFROM Employee\nGROUP BY DepartmentId)",
  // {"repo_name": "sitcomlab/Ethics-app", "path": "sql/queries/members/search_by_university.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\n    COUNT(*) OVER()::NUMERIC AS full_count,\n    member_id,\n    created,\n    updated,\n    title,\n    first_name,\n    last_name,\n    working_group_id,\n    working_group_name,\n    institute_id,\n    institute_name,\n    university_id,\n    university_name,\n    office_room_number,\n    office_phone_number,\n    office_email_address,\n    subscribed,\n    former\nFROM (\n    SELECT\n        member.member_id,\n        member.created,\n        member.updated,\n        member.title,\n        member.first_name,\n        member.last_name,\n        working_group.working_group_id,\n        working_group.working_group_name,\n        institute.institute_id,\n        institute.institute_name,\n        university.university_id,\n        university.university_name,\n        member.office_room_number,\n        member.office_phone_number,\n        member.office_email_address,\n        member.subscribed,\n        member.former,\n        (\n\t       to_tsvector('simple', COALESCE(string_agg(member.title, ' '), '')) ||\n\t       to_tsvector('simple', member.first_name) ||\n\t       to_tsvector('simple', member.last_name) ||\n\t       to_tsvector('english', COALESCE(string_agg(member.office_room_number, ' '), '')) ||\n\t       to_tsvector('english', COALESCE(string_agg(member.office_phone_number, ' '), '')) ||\n\t       to_tsvector('english', COALESCE(string_agg(member.office_email_address, ' '), ''))\n\t    ) AS search_text\n    FROM Members member\n        JOIN Working_Groups working_group ON working_group.working_group_id = member.working_group_id\n        JOIN Institutes institute ON institute.institute_id = working_group.institute_id\n        JOIN Universities university ON university.university_id = institute.university_id\n    WHERE\n        (\n            CASE\n                WHEN $4::TEXT='undefined' THEN (member.former=true OR member.former=false)\n                ELSE member.former=$4::BOOLEAN\n            END\n        )\n        AND\n            university.university_id=$5::INTEGER\n    GROUP BY\n        member.member_id,\n        working_group.working_group_id,\n        working_group.working_group_name,\n        institute.institute_id,\n        institute.institute_name,\n        university.university_id,\n        university.university_name\n) p_search\nWHERE\n    p_search.search_text @@ to_tsquery('english', $6::TEXT)\nORDER BY\n    CASE\n        WHEN $3::TEXT='created.asc' THEN created END ASC,\n    CASE\n        WHEN $3::TEXT='created.desc' THEN created END DESC,\n    CASE\n        WHEN $3::TEXT='updated.asc' THEN updated END ASC,\n    CASE\n        WHEN $3::TEXT='updated.desc' THEN updated END DESC,\n    CASE\n        WHEN $3::TEXT='name.asc' THEN (first_name, last_name) END ASC,\n    CASE\n        WHEN $3::TEXT='name.desc' THEN (first_name, last_name) END DESC\nOFFSET $1\nLIMIT $2",
  // {"repo_name": "Agirish/drill-test-framework", "path": "framework/resources/Functional/partition_pruning/dfs/parquet/data/DRILL_7038_dir0_distinct.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select distinct dir0 from dfs.drillTestDir.`/partition_pruning/dfs/orders`",
  // {"repo_name": "MrinmoiHossain/HackerRank", "path": "SQL/Basic Select/Select All.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM CITY",
  // {"repo_name": "nave91/dbt", "path": "test/integration/032_concurrent_transaction_test/models-view/view_model.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select * from {{ ref('model_1') }}",
  // {"repo_name": "bkiers/sqlite-parser", "path": "src/test/resources/trigger1.test_10.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM t1 UNION ALL SELECT * FROM t2",
  // {"repo_name": "up9cloud/up9cloud-website", "path": "Classes/Minecraft/Rank/herbalism.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT @id := @id +1 AS id,t1.`user`,t2.`herbalism` AS level\nFROM `mcmmo_users` AS t1\nINNER JOIN `mcmmo_skills` AS t2\nWHERE t2.`herbalism`>0\nAND t1.`id`=t2.`user_id`\nORDER BY t2.`herbalism` DESC\nLIMIT 10",
  // {"repo_name": "bkiers/sqlite-parser", "path": "src/test/resources/memdb.test_39.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT count(*) FROM t1",
  // {"repo_name": "support-project/knowledge", "path": "src/main/resources/org/support/project/web/dao/sql/UserAliasDao/UserAliasDao_physical_select_all_with_pager.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM USER_ALIAS\nORDER BY INSERT_DATETIME %s\nLIMIT ? OFFSET ?",
  // {"repo_name": "support-project/knowledge", "path": "src/main/resources/org/support/project/web/dao/sql/UserNotificationsDao/UserNotificationsDao_select_all.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM USER_NOTIFICATIONS\nWHERE DELETE_FLAG = 0\nORDER BY INSERT_DATETIME %s",
  // {"repo_name": "cchang738/drill-test-framework", "path": "framework/resources/Functional/tpch/sf0dot01/original/maprdb/json/query8.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT\n  O_YEAR,\n  SUM(CASE\n    WHEN NATION = 'EGYPT' THEN VOLUME\n    ELSE 0\n  END) / SUM(VOLUME) AS MKT_SHARE\nFROM\n  (\n    SELECT\n      EXTRACT(YEAR FROM O.O_ORDERDate) AS O_YEAR,\n      L.L_EXTENDEDPRICE * (1 - L.L_DISCOUNT) AS VOLUME,\n      N2.N_NAME AS NATION\n    FROM\n      part P,\n      supplier S,\n      lineitem L,\n      orders O,\n      customer C,\n      nation N1,\n      nation N2,\n      region R\n    WHERE\n      P.P_PARTKEY = L.L_PARTKEY\n      AND S.S_SUPPKEY = L.L_SUPPKEY\n      AND L.L_ORDERKEY = O.O_ORDERKEY\n      AND O.O_CUSTKEY = C.C_CUSTKEY\n      AND C.C_NATIONKEY = N1.N_NATIONKEY\n      AND N1.N_REGIONKEY = R.R_REGIONKEY\n      AND R.R_NAME = 'MIDDLE EAST'\n      AND S.S_NATIONKEY = N2.N_NATIONKEY\n      AND O.O_ORDERDate BETWEEN DATE '1995-01-01' AND DATE '1996-12-31'\n      AND P.P_TYPE = 'PROMO BRUSHED COPPER'\n  ) AS ALL_NATIONS\nGROUP BY\n  O_YEAR\nORDER BY\n  O_YEAR",
  // {"repo_name": "Szedou/SuperSecretProjectToSellMicrosoft", "path": "Zad19.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT NR_ALBUMU, NAZWISKO, IMIE FROM STUDENT S\r\nWHERE EXISTS(\r\n\tSELECT NR_GR FROM GR_ZAJ GZ\r\n\tLEFT OUTER JOIN WYKLADOWCA W USING (NR_WYKL)\r\n\tWHERE W.NAZWISKO = 'Bwyk' AND W.STOPIEN = 'mgr' AND S.NR_GR = GZ.NR_GR\r\n)",
  // {"repo_name": "support-project/knowledge", "path": "src/main/resources/org/support/project/web/dao/sql/HashConfigsDao/HashConfigsDao_physical_select_all_with_pager.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM HASH_CONFIGS\nORDER BY INSERT_DATETIME %s\nLIMIT ? OFFSET ?",
  // {"repo_name": "fishercoder1534/Leetcode", "path": "database/_1393.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select stock_name, sum(\n    case\n        when operation = 'Buy' then -price\n            else price\n    end\n) as capital_gain_loss from Stocks group by stock_name",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT SUM(upb), isinterestonly \n  FROM lossmithe_colstor b \n  LEFT JOIN address_he_unique a ON a.loannumber::text=b.loannumber::text \n  WHERE rand_no < 500 \n  GROUP BY isinterestonly",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select qx_count_operator('explain select foo_p.k, foo_p.t from foo_p left outer join bar on foo_p.k = bar.k  where foo_p.t is not null and foo_p.p = 6",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select foo_p.k, foo_p.t from foo_p left outer join bar on foo_p.k = bar.k  where foo_p.t is not null and foo_p.p = 6 order by 1, 2 desc limit 10",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select foo_p.b, foo_p.t from foo_p left outer join bar on foo_p.a = bar.k  where foo_p.t is not null and foo_p.a = 6 or foo_p.b = 7 order by 1, 2 desc limit 10",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select foo_p.b, foo_p.t from foo_p left outer join bar on foo_p.a = bar.a  where foo_p.p =3 and foo_p.a = 6 order by 1, 2 desc limit 10",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select qx_count_operator('explain select abbp.k, abbp.t from abbp left outer join b on abbp.k = b.k  where abbp.t is not null and abbp.p = 6",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select abbp.k, abbp.t from abbp left outer join b on abbp.k = b.k  where abbp.t is not null and abbp.p = 6 order by 1, 2 desc limit 10",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select abbp.b, abbp.t from abbp join (select abbp.* from b, abbp where abbp.a = b.k and abbp.a = '6SOME NUMBER') FOO on abbp.a = FOO.a  where abbp.t is not null order by 1, 2 desc limit 10",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select abbp.b, abbp.t from abbp left outer join b on abbp.a = b.k  where abbp.t is not null and abbp.a = '6SOME NUMBER' order by 1, 2 desc limit 10",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select qx_count_operator('explain select abbp.k, abbp.t from abbp left outer join b on abbp.k = b.k where abbp.t is not null and abbp.p = 6",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select abbp.k, abbp.t from abbp left outer join b on abbp.k = b.k where abbp.t is not null and abbp.p = 6 order by 1, 2 desc limit 10",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select abbp.k, abbp.t from abbp left outer join b on abbp.k = b.k  where abbp.t is not null and abbp.p = 6 order by 1, 2 asc limit 10",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select qx_count_operator('explain select foo_p.k, foo_p.t from foo_p left outer join bar_p on foo_p.k = bar_p.k  where foo_p.t is not null and foo_p.p = 6",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select foo_p.k, foo_p.t from foo_p left outer join bar_p on foo_p.k = bar_p.k  where foo_p.t is not null and foo_p.p = 6 order by 1, 2 desc limit 10",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select qx_count_operator('explain select foo_p.b, foo_p.t from foo_p left outer join bar_p on foo_p.a = bar_p.k and foo_p.k = bar_p.k where foo_p.t is not null and foo_p.a = 6 and bar_p.a = 14",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select foo_p.b, foo_p.t from foo_p left outer join bar_p on foo_p.a = bar_p.k and foo_p.k = bar_p.k where foo_p.t is not null and foo_p.a = 6 and bar_p.a = 14 order by 1, 2 desc limit 10",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select qx_count_operator('explain select bar_p.a, foo_p.b, foo_p.t from foo_p left outer join bar_p on foo_p.a = bar_p.k and foo_p.k = bar_p.k where foo_p.t is not null and foo_p.a = 6",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select bar_p.a, foo_p.b, foo_p.t from foo_p left outer join bar_p on foo_p.a = bar_p.k and foo_p.k = bar_p.k where foo_p.t is not null and foo_p.a = 6 order by 1, 2, 3 asc limit 10",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select qx_count_operator('explain select  foo_p.b, foo_p.t from foo_p left outer join bar_p on foo_p.a = bar_p.k and foo_p.k = bar_p.k where foo_p.t is not null and foo_p.a = 6 and bar_p.a = 4",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select  foo_p.b, foo_p.t from foo_p left outer join bar_p on foo_p.a = bar_p.k and foo_p.k = bar_p.k where foo_p.t is not null and foo_p.a = 6 and bar_p.a = 4 order by 1, 2 asc limit 10",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select qx_count_operator('explain select  foo_p.b, foo_p.t from foo_p left outer join bar_p on foo_p.a = bar_p.k and foo_p.k = bar_p.b where foo_p.t is not null and foo_p.a = 6 and bar_p.a = 4",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select  foo_p.b, foo_p.t from foo_p left outer join bar_p on foo_p.a = bar_p.k and foo_p.k = bar_p.b where foo_p.t is not null and foo_p.a = 6 and bar_p.a = 4 order by 1, 2 asc limit 10",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select qx_count_operator('explain select  foo_p.b, foo_p.t from foo_p left outer join bar_p on foo_p.a = bar_p.k and foo_p.b = bar_p.b where foo_p.t is not null and foo_p.a = 6",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select  foo_p.b, foo_p.t from foo_p left outer join bar_p on foo_p.a = bar_p.k and foo_p.b = bar_p.b where foo_p.t is not null and foo_p.a = 6 order by 1, 2 desc limit 10",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select qx_count_operator('explain select foo_p.b, foo_p.t from foo_p inner join bar on foo_p.a = bar.k  where foo_p.t is not null and foo_p.a = 6",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select foo_p.b, foo_p.t from foo_p inner join bar on foo_p.a = bar.k  where foo_p.t is not null and foo_p.a = 6 order by 1, 2 desc limit 10",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select qx_count_operator('explain select foo_p.k, foo_p.t from foo_p inner join bar on foo_p.k = bar.k  where foo_p.t is not null and foo_p.p = 6",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select foo_p.k, foo_p.t from foo_p inner join bar on foo_p.k = bar.k  where foo_p.t is not null and foo_p.p = 6 order by 1, 2 desc limit 10",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select qx_count_operator('explain select a_p.k, a_p.t from a_p inner join b on a_p.k = b.k  where a_p.t is not null and a_p.p = 6",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select a_p.k, a_p.t from a_p inner join b on a_p.k = b.k  where a_p.t is not null and a_p.p = 6 order by 1, 2 desc limit 10",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select qx_count_operator('explain select a_p.b, a_p.t from a_p inner join b on a_p.a = b.k  where a_p.t is not null and a_p.a = E''6SOME NUMBER''', 'Nested Loop')",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select a_p.b, a_p.t from a_p inner join b on a_p.a = b.k  where a_p.t is not null and a_p.a = '6SOME NUMBER' order by 1, 2 desc limit 10",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select qx_count_operator('explain select a_p.k, a_p.t from a_p inner join b on a_p.k = b.k where a_p.t is not null and a_p.p = 6",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select a_p.k, a_p.t from a_p inner join b on a_p.k = b.k where a_p.t is not null and a_p.p = 6 order by 1, 2 desc limit 10",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select qx_count_operator('explain select a_p.b, a_p.t from a_p inner join b on a_p.a = b.k where a_p.t is not null and a_p.a = 6",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select a_p.b, a_p.t from a_p inner join b on a_p.a = b.k where a_p.t is not null and a_p.a = 6 order by 1, 2 desc limit 10",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select qx_count_operator('explain select foo_p.b, foo_p.t from foo_p inner join bar on foo_p.a = bar.k  where foo_p.t is not null and foo_p.a = 6.00",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select foo_p.b, foo_p.t from foo_p inner join bar on foo_p.a = bar.k  where foo_p.t is not null and foo_p.a = 6.00 order by 1, 2 desc limit 10",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select a_p.k, a_p.t from a_p inner join b on a_p.k = b.k  where a_p.t is not null and a_p.p = 6 order by 1, 2 asc limit 10",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select a_p.b, a_p.t from a_p inner join b on a_p.a = b.k  where a_p.t is not null and a_p.a = '6SOME NUMBER' order by 1, 2 asc limit 10",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select qx_count_operator('explain select foo_p.k, foo_p.t from foo_p inner join bar_p on foo_p.k = bar_p.k  where foo_p.t is not null and foo_p.p = 6",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select foo_p.k, foo_p.t from foo_p inner join bar_p on foo_p.k = bar_p.k  where foo_p.t is not null and foo_p.p = 6 order by 1, 2 desc limit 10",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select qx_count_operator('explain select foo_p.b, foo_p.t from foo_p inner join bar_p on foo_p.a = bar_p.k  where foo_p.t is not null and foo_p.a = 6",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select foo_p.b, foo_p.t from foo_p inner join bar_p on foo_p.a = bar_p.k  where foo_p.t is not null and foo_p.a = 6 order by 1, 2 desc limit 10",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select qx_count_operator('explain select foo_p.b, foo_p.t from foo_p inner join bar_p on foo_p.a = bar_p.k and foo_p.k = bar_p.k where foo_p.t is not null and foo_p.a = 6 and bar_p.a = 14",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select foo_p.b, foo_p.t from foo_p inner join bar_p on foo_p.a = bar_p.k and foo_p.k = bar_p.k where foo_p.t is not null and foo_p.a = 6 and bar_p.a = 14 order by 1, 2 asc limit 10",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select qx_count_operator('explain select bar_p.a, foo_p.b, foo_p.t from foo_p inner join bar_p on foo_p.a = bar_p.k and foo_p.k = bar_p.k where foo_p.t is not null and foo_p.a = 6",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select bar_p.a, foo_p.b, foo_p.t from foo_p inner join bar_p on foo_p.a = bar_p.k and foo_p.k = bar_p.k where foo_p.t is not null and foo_p.a = 6 order by 1, 2, 3 desc limit 10",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select qx_count_operator('explain select  foo_p.b, foo_p.t from foo_p inner join bar_p on foo_p.a = bar_p.k and foo_p.k = bar_p.k where foo_p.t is not null and foo_p.a = 6 and bar_p.a = 4",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select  foo_p.b, foo_p.t from foo_p inner join bar_p on foo_p.a = bar_p.k and foo_p.k = bar_p.k where foo_p.t is not null and foo_p.a = 6 and bar_p.a = 4 order by 1, 2 asc limit 10",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select qx_count_operator('explain select  foo_p.b, foo_p.t from foo_p inner join bar_p on foo_p.a = bar_p.k and foo_p.k = bar_p.b where foo_p.t is not null and foo_p.a = 6 and bar_p.a = 4",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select  foo_p.b, foo_p.t from foo_p inner join bar_p on foo_p.a = bar_p.k and foo_p.k = bar_p.b where foo_p.t is not null and foo_p.a = 6 and bar_p.a = 4 order by 1, 2 desc limit 10",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select qx_count_operator('explain select  foo_p.b, foo_p.t from foo_p inner join bar_p on foo_p.a = bar_p.k and foo_p.b = bar_p.b where foo_p.t is not null and foo_p.a = 6",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select  foo_p.b, foo_p.t from foo_p inner join bar_p on foo_p.a = bar_p.k and foo_p.b = bar_p.b where foo_p.t is not null and foo_p.a = 6 order by 1, 2 desc limit 10",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select qx_count_operator('explain select foo_p.b, foo_p.t from foo_p inner join bar_p on foo_p.a = bar_p.a  where foo_p.t is not null and foo_p.a = 6",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select foo_p.b, foo_p.t from foo_p inner join bar_p on foo_p.a = bar_p.a  where foo_p.t is not null and foo_p.a = 6 order by 1, 2 asc limit 10",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select foo_p.b, foo_p.t from foo_p inner join bar_p on foo_p.a = bar_p.a  where foo_p.t is not null and foo_p.a = 6 order by 1, 2 desc limit 10",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select qx_count_operator('explain select foo_p.b, foo_p.t from foo_p inner join bar on foo_p.a = bar.k  where foo_p.t is not null and foo_p.a = (array[1])[1]",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select foo_p.b, foo_p.t from foo_p inner join bar on foo_p.a = bar.k  where foo_p.t is not null and foo_p.a = (array[1])[1] order by 1, 2 asc limit 10",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select qx_count_operator('explain select foo_p.b, foo_p.t from foo_p inner join bar on foo_p.a = bar.k  where foo_p.t is not null and foo_p.a = mytest(100)",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select foo_p.b, foo_p.t from foo_p inner join bar on foo_p.a = bar.k  where foo_p.t is not null and foo_p.a = mytest(100) order by 1, 2 desc limit 10",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select gp_fault_inject(12,0)",
  // {"repo_name": "foyzur/gpdb", "path": "src/test/regress/sql/qp_query_execution.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select logdatabase, logseverity, logstate, logquery, logmessage from gp_toolkit.__gp_log_master_ext where logmessage like '% select gp_fault_inject(12,0)",
  // {"repo_name": "Chibin/gpdb", "path": "src/test/tinc/tincrepo/mpp/gpdb/tests/storage/pg_twophase/commit_create_tests/post_sql/sql/heap_reindex_bitmap_index_post.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select numeric_col from cr_heap_reindex_table_bitmap_index where numeric_col=1",
  // {"repo_name": "lintzc/gpdb", "path": "src/test/tinc/tincrepo/dml/functional/sql_partition/mpp21090_pttab_dropfirstcol_addpt_time.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT * FROM mpp21090_pttab_dropfirstcol_addpt_time ORDER BY 1,2,3",
  // {"repo_name": "sogis/gretljobs", "path": "agi_avdpool_sogis/agi_dm01avso24_hgpkt.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\n    hoheitsgrenzpunkt.geometrie AS wkb_geometry,\n    hoheitsgrenzpunkt.identifikator,\n    hoheitsgrenzpunkt.lagegen,\n    CASE \n        WHEN hoheitsgrenzpunkt.lagezuv = 'ja'\n            THEN 0   \n        WHEN hoheitsgrenzpunkt.lagezuv = 'nein'\n            THEN 1   \n    END AS lagezuv,\n    CASE \n        WHEN hoheitsgrenzpunkt.punktzeichen = 'Stein'\n            THEN 0   \n        WHEN hoheitsgrenzpunkt.punktzeichen = 'Kunststoffzeichen'\n            THEN 0   \n        WHEN hoheitsgrenzpunkt.punktzeichen = 'Bolzen'\n            THEN 1   \n        WHEN hoheitsgrenzpunkt.punktzeichen = 'Rohr'\n            THEN 1   \n        WHEN hoheitsgrenzpunkt.punktzeichen = 'Pfahl'\n            THEN 1   \n        WHEN hoheitsgrenzpunkt.punktzeichen = 'Kreuz'\n            THEN 2   \n        WHEN hoheitsgrenzpunkt.punktzeichen = 'unversichert'\n            THEN 3   \n        WHEN hoheitsgrenzpunkt.punktzeichen = 'weitere'\n            THEN 3   \n    END AS punktzeichen,\n    hoheitsgrenzpunktsymbol.ori AS symbolori,\n    hoheitsgrenzpunktpos.ori AS numori,\n    CASE \n        WHEN hoheitsgrenzpunktpos.hali = 'Left'\n            THEN 0   \n        WHEN hoheitsgrenzpunktpos.hali = 'Center'\n            THEN 1   \n        WHEN hoheitsgrenzpunktpos.hali = 'Right'\n            THEN 2   \n    END AS numhali,\n    CASE \n        WHEN hoheitsgrenzpunktpos.vali = 'Top'\n            THEN 0   \n        WHEN hoheitsgrenzpunktpos.vali = 'Cap'\n            THEN 1   \n        WHEN hoheitsgrenzpunktpos.vali = 'Half'\n            THEN 2   \n        WHEN hoheitsgrenzpunktpos.vali = 'Base'\n            THEN 3   \n        WHEN hoheitsgrenzpunktpos.vali = 'Bottom'\n            THEN 4   \n    END AS numvali,\n    CASE\n        WHEN hoheitsgrenzpunktpos.ori >= 0 AND hoheitsgrenzpunktpos.ori < 100\n            THEN (100-hoheitsgrenzpunktpos.ori)*0.9\n        WHEN hoheitsgrenzpunktpos.ori = 100\n            THEN 360\n        WHEN hoheitsgrenzpunktpos.ori > 100 AND hoheitsgrenzpunktpos.ori <= 400\n            THEN ((100-hoheitsgrenzpunktpos.ori)*0.9)+360\n    END AS txt_rot,\n    CAST(hoheitsgrenzpunkt.t_datasetname AS INT) AS gem_bfs,\n    0 AS archive,\n    CAST('9999-01-01' AS timestamp) AS archive_date,\n    aimport.importdate AS new_date,   \n    0 AS los\nFROM\n    agi_dm01avso24.gemeindegrenzen_hoheitsgrenzpunkt AS hoheitsgrenzpunkt\n    LEFT JOIN agi_dm01avso24.t_ili2db_basket AS basket\n        ON hoheitsgrenzpunkt.t_basket = basket.t_id\n     LEFT JOIN agi_dm01avso24.gemeindegrenzen_hoheitsgrenzpunktpos AS hoheitsgrenzpunktpos\n        ON hoheitsgrenzpunktpos.hoheitsgrenzpunktpos_von = hoheitsgrenzpunkt.t_id\n     LEFT JOIN agi_dm01avso24.gemeindegrenzen_hoheitsgrenzpunktsymbol AS hoheitsgrenzpunktsymbol\n        ON hoheitsgrenzpunktsymbol.hoheitsgrenzpunktsymbol_von = hoheitsgrenzpunkt.t_id\n   LEFT JOIN \n    (\n        SELECT\n            max(importdate) AS importdate,\n            dataset\n        FROM\n            agi_dm01avso24.t_ili2db_import\n        GROUP BY\n            dataset \n    ) AS  aimport\n        ON basket.dataset = aimport.dataset",
  // {"repo_name": "qua-bla/carnivora", "path": "schemas/system/functions.d/_contingent_ensure.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\n    t.service_entity_name,\n    s.owner\nINTO\n    v_service_entity_name,\n    v_domain_owner\nFROM dns.service AS t\nJOIN dns.registered AS s\n    ON s.domain = t.registered\n\nWHERE\n    t.domain = p_domain AND\n    t.service = p_service",
  // {"repo_name": "qua-bla/carnivora", "path": "schemas/system/functions.d/_contingent_ensure.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT domain_contingent, total_contingent\n    INTO v_domain_contingent_default, v_total_contingent\nFROM system._effective_contingent()\nWHERE\n    service = p_service AND\n    subservice = p_subservice AND\n    service_entity_name = v_service_entity_name AND\n    owner = p_owner",
  // {"repo_name": "qua-bla/carnivora", "path": "schemas/system/functions.d/_contingent_ensure.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT domain_contingent\n    INTO v_domain_contingent_specific\nFROM system._effective_contingent_domain()\nWHERE\n    service = p_service AND\n    subservice = p_subservice AND\n    service_entity_name = v_service_entity_name AND\n    owner = p_owner",
  // {"repo_name": "cncf/velocity", "path": "BigQuery/velocity_apache.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select\n  org,\n  repo,\n  sum(activity) as activity,\n  sum(comments) as comments,\n  sum(prs) as prs,\n  EXACT_COUNT_DISTINCT(sha) as commits,\n  sum(issues) as issues,\n  EXACT_COUNT_DISTINCT(author_email) as authors_alt2,\n  GROUP_CONCAT(STRING(author_name)) AS authors_alt1,\n  GROUP_CONCAT(STRING(author_email)) AS authors,\n  sum(pushes) as pushes\nfrom (\nselect\n  org.login as org,\n  repo.name as repo,\n  count(*) as activity,\n  SUM(IF(type = 'IssueCommentEvent', 1, 0)) as comments,\n  SUM(IF(type = 'PullRequestEvent', 1, 0)) as prs,\n  SUM(IF(type = 'PushEvent', 1, 0)) as pushes,\n  SUM(IF(type = 'IssuesEvent', 1, 0)) as issues,\n  IFNULL(REPLACE(JSON_EXTRACT(payload, '$.commits[0].author.email'), '\"', ''), '(null)') as author_email,\n  IFNULL(REPLACE(JSON_EXTRACT(payload, '$.commits[0].author.name'), '\"', ''), '(null)') as author_name,\n  JSON_EXTRACT(payload, '$.commits[0].sha') as sha\nfrom\n  (select * from\n    TABLE_DATE_RANGE([githubarchive:day.],TIMESTAMP('{{dtfrom}}'),TIMESTAMP('{{dtto}}'))\n  )\nwhere\n  (\n    org.login in (\n      'apache', 'ApacheFriends', 'apache-spark', 'apache-spark-on-k8s', 'apachecloudstack', 'apacheignite'\n    )\n  )\n  and type in ('IssueCommentEvent', 'PullRequestEvent', 'PushEvent', 'IssuesEvent')\n  and actor.login not like '%bot%'\n  AND actor.login NOT IN (\n    SELECT\n      actor.login\n    FROM (\n      SELECT\n        actor.login,\n        COUNT(*) c\n      FROM\n        TABLE_DATE_RANGE([githubarchive:day.],TIMESTAMP('{{dtfrom}}'),TIMESTAMP('{{dtto}}'))\n      WHERE\n        type = 'IssueCommentEvent'\n      GROUP BY\n        1\n      HAVING\n      c > 2500\n      ORDER BY\n      2 DESC\n    )\n  )\ngroup by org, repo, author_email, author_name, sha\n)\ngroup by org, repo\norder by\n  activity desc\nlimit 10000",
  // {"repo_name": "phoenixsbk/kvmmgr", "path": "packaging/dbscripts/upgrade/03_03_0670_allow_single_logic_for_policy_unit.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT fn_db_drop_column('policy_units', 'has_function')",
  // {"repo_name": "phoenixsbk/kvmmgr", "path": "packaging/dbscripts/upgrade/03_03_0670_allow_single_logic_for_policy_unit.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT fn_db_drop_column('policy_units', 'has_balance')",
  // {"repo_name": "phoenixsbk/kvmmgr", "path": "packaging/dbscripts/upgrade/03_03_0670_allow_single_logic_for_policy_unit.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT fn_db_drop_column('cluster_policy_units', 'is_function_selected')",
  // {"repo_name": "phoenixsbk/kvmmgr", "path": "packaging/dbscripts/upgrade/03_03_0670_allow_single_logic_for_policy_unit.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT fn_db_drop_column('cluster_policy_units', 'is_balance_selected')",
  // {"repo_name": "50wu/gpdb", "path": "src/test/regress/sql/create_am_gp.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select amname, amhandler, amtype from pg_am where amname like '%_testam'",
  // {"repo_name": "komitoff/Java-DB-Fundamentals", "path": "Table Relations/teachers.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM teachers",
  // {"repo_name": "niclabs/net-viz", "path": "app/db_migrations/cables_ficticios_fix_seq.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT setval('cables_id_seq', (SELECT MAX(id) from cables))",
  // {"repo_name": "WNPRC-EHR-Services/wnprc-modules", "path": "WNPRC_EHR/resources/queries/study/FoodDeprivesStarted.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT\nfd.id,\nfd.date,\nfd.schedule,\nfd.depriveStartTime,\nfd.restoredTime,\nTRUNCATE(CAST(timestampdiff(SQL_TSI_HOUR,fd.depriveStartTime,coalesce(fd.restoredTime,now())) AS NUMERIC),2)  AS hoursSinceStarted,\nfd.id.curLocation.room AS room,\nfd.id.curLocation.cage AS cage,\nfd.assignedTo,\nfd.protocolContact,\nfd.reason,\nfd.qcstate\n\nFROM study.foodDeprives fd\nWHERE\nfd.id.dataset.demographics.calculated_status = 'Alive' AND\nfd.qcstate.label != 'Scheduled'",
  // {"repo_name": "demianturner/seagullframework-module-block", "path": "src/block/data/data.sample.my.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT @blockIdSampleRight1 := block_id FROM block WHERE name = 'Default_Block_SampleRight1'",
  // {"repo_name": "demianturner/seagullframework-module-block", "path": "src/block/data/data.sample.my.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT @blockIdCalendar := block_id FROM block WHERE name = 'Default_Block_Calendar'",
  // {"repo_name": "demianturner/seagullframework-module-block", "path": "src/block/data/data.sample.my.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT @blockIdOnlineUsers := block_id FROM block WHERE name = 'User_Block_OnlineUsers'",
  // {"repo_name": "codeschool/sqlite-parser", "path": "test/sql/official-suite/tpch01-1.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select\n    c_custkey,    c_name,    sum(l_extendedprice * (1 -l_discount)) as revenue,\n    c_acctbal,    n_name,    c_address,    c_phone,    c_comment\nfrom\n    customer,    orders,    lineitem,    nation\nwhere\n    c_custkey = o_custkey    and l_orderkey = o_orderkey\n    and o_orderdate >=  '1994-08-01'    and o_orderdate < date('1994-08-01', '+3 month')\n    and l_returnflag = 'R'    and c_nationkey = n_nationkey\ngroup by\n    c_custkey,    c_name,    c_acctbal,    c_phone,    n_name, c_address,    c_comment\norder by\n    revenue desc",
  // {"repo_name": "nablarch/nablarch-etl", "path": "src/test/resources/nablarch/etl/generator/StandardMergeSqlGeneratorTest$EtlMergeGenEntity.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select=\nselect id test_id, name1 last_name, name2 first_name from input_table",
  // {"repo_name": "50wu/gpdb", "path": "src/test/regress/sql/orca_groupingsets_fallbacks.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select sum(v), b, a, c, d from gstest1 group by grouping sets(a, b), rollup(c, d)",
  // {"repo_name": "50wu/gpdb", "path": "src/test/regress/sql/orca_groupingsets_fallbacks.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select d from gstest2 group by grouping sets ((a,b), (a))",
  // {"repo_name": "scalingdata/Impala", "path": "thirdparty/hive-1.2.1.2.3.0.0-2557/src/metastore/scripts/upgrade/postgres/upgrade-1.1.0-to-1.2.0.postgres.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 'Upgrading MetaStore schema from 1.1.0 to 1.2.0'",
  // {"repo_name": "scalingdata/Impala", "path": "thirdparty/hive-1.2.1.2.3.0.0-2557/src/metastore/scripts/upgrade/postgres/upgrade-1.1.0-to-1.2.0.postgres.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT 'Finished upgrading MetaStore schema from 1.1.0 to 1.2.0'",
  // {"repo_name": "ebyhr/presto", "path": "testing/trino-benchto-benchmarks/src/main/resources/sql/presto/tpch/q13.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT \n  c_count, \n  count(*) as custdist\nFROM (\n  SELECT \n    c.custkey, \n    count(o.orderkey)\n  FROM \n    \"${database}\".\"${schema}\".\"${prefix}customer\" c\n    LEFT OUTER JOIN\n    \"${database}\".\"${schema}\".\"${prefix}orders\" o\n  ON \n    c.custkey = o.custkey\n    AND o.comment NOT LIKE '%special%requests%'\n  GROUP BY c.custkey\n) AS c_orders (c_custkey, c_count)\nGROUP BY \n  c_count\nORDER BY \n  custdist DESC, \n  c_count DESC",
  // {"repo_name": "sogis/gretljobs", "path": "awa_stromversorgungssicherheit_netzgebiete_pub/awa_stromversorgungssicherheit_pub_ebene_3.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT \n    ruledarea_level3.aname,\n    ageometry AS geometrie,\n    canton AS kanton,\n    organisation.aname AS betreiber\nFROM\n    awa_stromversorgungssicherheit.supplyscy_rldreas_ruledarea_level3 AS ruledarea_level3\n    LEFT JOIN awa_stromversorgungssicherheit.supplyscy_rldreas_organisation AS organisation\n    ON organisation.t_id = ruledarea_level3.\"operator\"",
  // {"repo_name": "bkiers/sqlite-parser", "path": "src/test/resources/savepoint5.test_1.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT count(*) FROM sqlite_master",
  // {"repo_name": "bkiers/sqlite-parser", "path": "src/test/resources/savepoint5.test_1.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT * FROM t1",
  // {"repo_name": "CapacitorSet/node-scorekeeping", "path": "core/queries/index/get.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "SELECT\n    r.alunno as IDAlunno,\n    p.nome,\n    p.cognome,\n    r.disciplina as IDDisciplina,\n    d.nome AS disciplina,\n    d.unita,\n    r.risultato\nFROM risultati r\nLEFT JOIN alunni p\n    ON p.id = r.alunno\nLEFT JOIN discipline d\n    ON d.id = r.disciplina\nWHERE !ISNULL(r.risultato)\nORDER BY timestamp DESC\nLIMIT 10",
  // {"repo_name": "sgrif/diesel", "path": "examples/postgres/advanced-blog-cli/migrations/2017-12-20-163829_create_posts/up.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "SELECT diesel_manage_updated_at('posts')",
  // {"repo_name": "yeeunshim/tajo_test", "path": "tajo-core/src/test/resources/queries/TestCaseByCases/testTAJO739Case.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select nation.n_nationkey as n_nationkey,\n       nation.n_name as n_name\nfrom nation\ninner join (select c_nationkey as n_nationkey from customer) a\non nation.n_nationkey = a.n_nationkey",
  // {"repo_name": "lintzc/gpdb", "path": "src/test/tinc/tincrepo/mpp/models/regress/sql_related/regress_sql_perf/query02.sql", "language": "SQL", "license": "apache-2.0", "dataset": "codeparrot/github-code"}
  "select pg_sleep(2)",
  // {"repo_name": "KMU-embedded/mosbench-ext", "path": "postgres/postgresql-8.3.9/src/test/regress/sql/polymorphism.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select f3, myaggp03a(*) from t group by f3",
  // {"repo_name": "KMU-embedded/mosbench-ext", "path": "postgres/postgresql-8.3.9/src/test/regress/sql/polymorphism.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select f3, myaggp03b(*) from t group by f3",
  // {"repo_name": "KMU-embedded/mosbench-ext", "path": "postgres/postgresql-8.3.9/src/test/regress/sql/polymorphism.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select f3, myaggp05a(f1) from t group by f3",
  // {"repo_name": "KMU-embedded/mosbench-ext", "path": "postgres/postgresql-8.3.9/src/test/regress/sql/polymorphism.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select f3, myaggp06a(f1) from t group by f3",
  // {"repo_name": "KMU-embedded/mosbench-ext", "path": "postgres/postgresql-8.3.9/src/test/regress/sql/polymorphism.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select f3, myaggp08a(f1) from t group by f3",
  // {"repo_name": "KMU-embedded/mosbench-ext", "path": "postgres/postgresql-8.3.9/src/test/regress/sql/polymorphism.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select f3, myaggp09a(f1) from t group by f3",
  // {"repo_name": "KMU-embedded/mosbench-ext", "path": "postgres/postgresql-8.3.9/src/test/regress/sql/polymorphism.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select f3, myaggp09b(f1) from t group by f3",
  // {"repo_name": "KMU-embedded/mosbench-ext", "path": "postgres/postgresql-8.3.9/src/test/regress/sql/polymorphism.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select f3, myaggp10a(f1) from t group by f3",
  // {"repo_name": "KMU-embedded/mosbench-ext", "path": "postgres/postgresql-8.3.9/src/test/regress/sql/polymorphism.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select f3, myaggp10b(f1) from t group by f3",
  // {"repo_name": "KMU-embedded/mosbench-ext", "path": "postgres/postgresql-8.3.9/src/test/regress/sql/polymorphism.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select f3, myaggp20a(f1) from t group by f3",
  // {"repo_name": "KMU-embedded/mosbench-ext", "path": "postgres/postgresql-8.3.9/src/test/regress/sql/polymorphism.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select f3, myaggp20b(f1) from t group by f3",
  // {"repo_name": "KMU-embedded/mosbench-ext", "path": "postgres/postgresql-8.3.9/src/test/regress/sql/polymorphism.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select f3, myaggn01a(*) from t group by f3",
  // {"repo_name": "KMU-embedded/mosbench-ext", "path": "postgres/postgresql-8.3.9/src/test/regress/sql/polymorphism.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select f3, myaggn01b(*) from t group by f3",
  // {"repo_name": "KMU-embedded/mosbench-ext", "path": "postgres/postgresql-8.3.9/src/test/regress/sql/polymorphism.sql", "language": "SQL", "license": "mit", "dataset": "codeparrot/github-code"}
  "select f3, myaggn03a(*) from t group by f3",
];
export default tests;
