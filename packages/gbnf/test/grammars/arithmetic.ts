export const grammar = "root  ::= (expr \"=\" ws term \"\\n\")+\nexpr  ::= term ([-+*/] term)*\nterm  ::= ident | num | \"(\" ws expr \")\" ws\nident ::= [a-z] [a-z0-9_]* ws\nnum   ::= [0-9]+ ws\nws    ::= [ \\t\\n]*\n";
export const testCases = [
  "1 +2=3",
  "1 +2*3 = 9",
  "3\n  \n  *hint*(youllneed *two*vars)\n  \n  -use +subtract*divide*multiply*power*operand*operands\n  -use +subtract*add*multiply*power*operand*",
  "1 +2*3=9",
  "1 +2 *3 = 9",
  "1 +2 = 3",
  "1 +2*3=9",
  "4\n  \n  \n  \n  \n  *hint1*(there)\n  *hint2*(a)\n  *hint3*(b)\n  *hint4*((c))\n  *hint5*(d)\n  *hint",
  "2 *(1 +2) = 6",
  "1 +2 *3 = 9",
  "3 +4 /2 = 5",
  "1 +2 *3 = 9",
  "or\n  \n  -2 -4 +3 *0 = 0\n  \n  \n\ndefprintexpresstion1addsubmultdivmodpowfloorceil",
  "3 +1 = 4",
  "3\n  \n  *hint*(use *expression*1)\n    \n  \n  *hint*((x +y)*z) = (x*z +y*z)",
  "1 +2=3",
  "3\n  \n  *hint*1+2=4",
  "2 +3 *4 = 14",
  "1\n  \n  *hint*a +b *c = a\n\n  \n2-1/2+3/4= 2\n  \n    \n  \n3-4/5-6/7= 3\n  \n    \n  \n4-5/6-7/8",
  "1 +2 *3 = 9",
  "1 +2 *3=9",
  "3\n  \n  *hint*(use *eval*(string) )\n\n  *solution*(see *part_1*(below))\n  \n  *check*(see *part_2*(below))\n  \n  *bonus*(see *part_",
  "3 +2 = 5\n\n  \n\ndef \n  \n    \n   \n\n  \n\n/home/rshridhar/code/main_programming/mathematics/mathematical_validity_of_expressions_in_python\n\n/home/rshrid",
  "1 +2 *3 = 9",
  "3\n  \n  *numbers = list_of_numbers",
  "3\n  \n  *numbers = list_of_numbers",
  "2\n  \n  *hint*(use *eval*(https))\n  \n  -1\n  \n  *hint*(use *input*(https))\n  \n  *hint*(use *print*(https))\n  \n  *hint*(",
  "3\n  \n  *hint*1/2 = 0\n  \n  \n  \n  \n  \n  \n\n  \n  \n  \n\nimport_libs = importlib_resources\nfrom  = import_libs\nimport_libs = importlib_resources\nfrom",
  "2\n  *1 = 0",
  "1 +3 = 4",
  "1 +2 = 3",
  "1 +2 *3 = 9",
  "1 +2 *3 = 9",
  "1 +2+3=6",
  "3\n  \n  *numbers = list_of_integers",
  "2\n  \n  *(inputs)\n  -1\n  \n  *(outputs)\n  -2\n  \n  *(sample_inputs)\n  -1 \n  \n  *(sample_outputs)\n  -2\n\n  *(hints",
  "1 +2 *3 = 9",
  "(answer)\n  \n  *a = 5",
  "2 +3 *4 = 14",
  "2\n  \n  *hint*(use *eval*(expression) )\n\n  *hint*(use *input*(prompt))\n  \n  *hint*(use *print*(expression))\n  \n  *hint*(use *str*(expression",
  "1 +2 *3 = 9",
  "3 +2 *1 = 5",
  "1 +2*3=9",
  "2  \n*type*yields\n  \n  *type*yields\n\n\n  \n  *type*yields\n\n\n  *type*yields\n\n\n  *type*yields\n\n\n  *type*yields\n  \n  \n*type",
  "3 +5 /4 -2  =  3",
  "5-3*2+1\n  \n  = 5",
  "1 +2 = 3",
  "or\n\n  -4 *5 +6 /7 = 12",
  "1 +2 *3=9",
  "(5) -1 = 4"
];
